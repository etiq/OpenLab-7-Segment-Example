

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Oct 06 12:44:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	idataCOMRAM
    56  0009FE                     __pidataCOMRAM:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _config1
    60  0009FE  2C                 	db	44
    61                           
    62                           ;initializer for _str2
    63  0009FF  45                 	db	69
    64  000A00  6E                 	db	110
    65  000A01  74                 	db	116
    66  000A02  65                 	db	101
    67  000A03  72                 	db	114
    68  000A04  20                 	db	32
    69  000A05  50                 	db	80
    70  000A06  6F                 	db	111
    71  000A07  77                 	db	119
    72  000A08  65                 	db	101
    73  000A09  72                 	db	114
    74  000A0A  20                 	db	32
    75  000A0B  54                 	db	84
    76  000A0C  69                 	db	105
    77  000A0D  6D                 	db	109
    78  000A0E  65                 	db	101
    79  000A0F  20                 	db	32
    80  000A10  4F                 	db	79
    81  000A11  55                 	db	85
    82  000A12  54                 	db	84
    83  000A13  20                 	db	32
    84  000A14  4D                 	db	77
    85  000A15  4D                 	db	77
    86  000A16  53                 	db	83
    87  000A17  53                 	db	83
    88  000A18  20                 	db	32
    89  000A19  66                 	db	102
    90  000A1A  6F                 	db	111
    91  000A1B  72                 	db	114
    92  000A1C  6D                 	db	109
    93  000A1D  61                 	db	97
    94  000A1E  74                 	db	116
    95  000A1F  00                 	db	0
    96  000A20  00                 	db	0
    97  000A21  00                 	db	0
    98  000A22  00                 	db	0
    99  000A23  00                 	db	0
   100  000A24  00                 	db	0
   101                           
   102                           ;initializer for _str1
   103                           
   104                           	psect	idataBANK0
   105  000A25                     __pidataBANK0:
   106                           	opt stack 0
   107  000A25  45                 	db	69
   108  000A26  6E                 	db	110
   109  000A27  74                 	db	116
   110  000A28  65                 	db	101
   111  000A29  72                 	db	114
   112  000A2A  20                 	db	32
   113  000A2B  50                 	db	80
   114  000A2C  6F                 	db	111
   115  000A2D  77                 	db	119
   116  000A2E  65                 	db	101
   117  000A2F  72                 	db	114
   118  000A30  20                 	db	32
   119  000A31  54                 	db	84
   120  000A32  69                 	db	105
   121  000A33  6D                 	db	109
   122  000A34  65                 	db	101
   123  000A35  20                 	db	32
   124  000A36  49                 	db	73
   125  000A37  4E                 	db	78
   126  000A38  20                 	db	32
   127  000A39  4D                 	db	77
   128  000A3A  4D                 	db	77
   129  000A3B  53                 	db	83
   130  000A3C  53                 	db	83
   131  000A3D  20                 	db	32
   132  000A3E  66                 	db	102
   133  000A3F  6F                 	db	111
   134  000A40  72                 	db	114
   135  000A41  6D                 	db	109
   136  000A42  61                 	db	97
   137  000A43  74                 	db	116
   138  000A44  00                 	db	0
   139  000A45  00                 	db	0
   140  000A46  00                 	db	0
   141  000A47  00                 	db	0
   142  000A48  00                 	db	0
   143  000A49  00                 	db	0
   144  000A4A  00                 	db	0
   145  000A4B  00                 	db	0
   146  0000                     _INTCONbits	set	4082
   147  0000                     _LATBbits	set	3978
   148  0000                     _PIE1bits	set	3997
   149  0000                     _PIR1bits	set	3998
   150  0000                     _PORTAbits	set	3968
   151  0000                     _PORTD	set	3971
   152  0000                     _RCREG	set	4014
   153  0000                     _RCSTA	set	4011
   154  0000                     _RCSTAbits	set	4011
   155  0000                     _SPBRG	set	4015
   156  0000                     _SPBRGH	set	4016
   157  0000                     _TRISAbits	set	3986
   158  0000                     _TRISBbits	set	3987
   159  0000                     _TRISCbits	set	3988
   160  0000                     _TRISD	set	3989
   161  0000                     _TXREG	set	4013
   162  0000                     _TXSTA	set	4012
   163  0000                     _TXSTAbits	set	4012
   164  0000                     _LATB0	set	31824
   165  0000                     _PEIE	set	32662
   166  0000                     _RCIE	set	31981
   167  0000                     _RCIF	set	31989
   168  0000                     _RCIP	set	31997
   169                           
   170                           ; #config settings
   171  0000                     
   172                           	psect	cinit
   173  00081E                     __pcinit:
   174                           	opt stack 0
   175  00081E                     start_initialization:
   176                           	opt stack 0
   177  00081E                     __initialization:
   178                           	opt stack 0
   179                           
   180                           ; Clear objects allocated to COMRAM (24 bytes)
   181  00081E  EE00  F028         	lfsr	0,__pbssCOMRAM
   182  000822  0E18               	movlw	24
   183  000824                     clear_0:
   184  000824  6AEE               	clrf	postinc0,c
   185  000826  06E8               	decf	wreg,f,c
   186  000828  E1FD               	bnz	clear_0
   187                           
   188                           ; Initialize objects allocated to BANK0 (39 bytes)
   189                           ; load TBLPTR registers with __pidataBANK0
   190  00082A  0E25               	movlw	low __pidataBANK0
   191  00082C  6EF6               	movwf	tblptrl,c
   192  00082E  0E0A               	movlw	high __pidataBANK0
   193  000830  6EF7               	movwf	tblptrh,c
   194  000832  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   195  000834  6EF8               	movwf	tblptru,c
   196  000836  EE00  F060         	lfsr	0,__pdataBANK0
   197  00083A  EE10 F027          	lfsr	1,39
   198  00083E                     copy_data0:
   199  00083E  0009               	tblrd		*+
   200  000840  CFF5 FFEE          	movff	tablat,postinc0
   201  000844  50E5               	movf	postdec1,w,c
   202  000846  50E1               	movf	fsr1l,w,c
   203  000848  E1FA               	bnz	copy_data0
   204                           
   205                           ; Initialize objects allocated to COMRAM (39 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  00084A  0EFE               	movlw	low __pidataCOMRAM
   208  00084C  6EF6               	movwf	tblptrl,c
   209  00084E  0E09               	movlw	high __pidataCOMRAM
   210  000850  6EF7               	movwf	tblptrh,c
   211  000852  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  000854  6EF8               	movwf	tblptru,c
   213  000856  EE00  F001         	lfsr	0,__pdataCOMRAM
   214  00085A  EE10 F027          	lfsr	1,39
   215  00085E                     copy_data1:
   216  00085E  0009               	tblrd		*+
   217  000860  CFF5 FFEE          	movff	tablat,postinc0
   218  000864  50E5               	movf	postdec1,w,c
   219  000866  50E1               	movf	fsr1l,w,c
   220  000868  E1FA               	bnz	copy_data1
   221  00086A                     end_of_initialization:
   222                           	opt stack 0
   223  00086A                     __end_of__initialization:
   224                           	opt stack 0
   225  00086A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226  00086C  6EF8               	movwf	tblptru,c
   227  00086E  0100               	movlb	0
   228  000870  EFD9  F003         	goto	_main	;jump to C main() function
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           postdec1	equ	0xFE5
   236                           fsr1l	equ	0xFE1
   237                           
   238                           	psect	bssCOMRAM
   239  000028                     __pbssCOMRAM:
   240                           	opt stack 0
   241  000028                     _USART_Status:
   242                           	opt stack 0
   243  000028                     	ds	1
   244  000029                     _dot:
   245                           	opt stack 0
   246  000029                     	ds	1
   247  00002A                     _str:
   248                           	opt stack 0
   249  00002A                     	ds	10
   250  000034                     _array:
   251                           	opt stack 0
   252  000034                     	ds	8
   253  00003C                     _Num1:
   254                           	opt stack 0
   255  00003C                     	ds	1
   256  00003D                     _Num2:
   257                           	opt stack 0
   258  00003D                     	ds	1
   259  00003E                     _Num3:
   260                           	opt stack 0
   261  00003E                     	ds	1
   262  00003F                     _Num4:
   263                           	opt stack 0
   264  00003F                     	ds	1
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	dataCOMRAM
   275  000001                     __pdataCOMRAM:
   276                           	opt stack 0
   277  000001                     _config1:
   278                           	opt stack 0
   279  000001                     	ds	1
   280  000002                     _str2:
   281                           	opt stack 0
   282  000002                     	ds	38
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	dataBANK0
   293  000060                     __pdataBANK0:
   294                           	opt stack 0
   295  000060                     _str1:
   296                           	opt stack 0
   297  000060                     	ds	39
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           postdec1	equ	0xFE5
   305                           fsr1l	equ	0xFE1
   306                           
   307                           	psect	cstackBANK0
   308  000087                     __pcstackBANK0:
   309                           	opt stack 0
   310  000087                     ??_Delay10KTCYx:
   311  000087                     Segment_init@Segment:
   312                           	opt stack 0
   313  000087                     DisplayValue@Number:
   314                           	opt stack 0
   315  000087                     Read_BUF@c:
   316                           	opt stack 0
   317  000087                     Switch_Relay@sw:
   318                           	opt stack 0
   319  000087                     ReadUSART@data:
   320                           	opt stack 0
   321  000087                     WriteUSART@data:
   322                           	opt stack 0
   323  000087                     Seq_count@ptr1:
   324                           	opt stack 0
   325  000087                     Format_DEC@p:
   326                           	opt stack 0
   327  000087                     OpenUSART@spbrg:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331  000087                     	ds	1
   332  000088                     NumDisplay@Segment:
   333                           	opt stack 0
   334  000088                     Write@data:
   335                           	opt stack 0
   336  000088                     Delay10KTCYx@unit:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x1
   340  000088                     	ds	1
   341  000089                     ??_OpenUSART:
   342  000089                     NumDisplay@Number:
   343                           	opt stack 0
   344  000089                     Seq_count@ptr2:
   345                           	opt stack 0
   346  000089                     Format_DEC@q:
   347                           	opt stack 0
   348  000089                     Write_string@c:
   349                           	opt stack 0
   350  000089                     Read_string@buffer:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x2
   354  000089                     	ds	1
   355  00008A                     Display@x:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x3
   359  00008A                     	ds	1
   360  00008B                     Read_string@len:
   361                           	opt stack 0
   362  00008B                     Seq_count@ptr3:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x4
   366  00008B                     	ds	1
   367  00008C                     Read_string@i:
   368                           	opt stack 0
   369  00008C                     OpenUSART@config:
   370                           	opt stack 0
   371  00008C                     Display@ptr:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x5
   375  00008C                     	ds	1
   376  00008D                     UsartConfig@config2:
   377                           	opt stack 0
   378  00008D                     Read_string@data:
   379                           	opt stack 0
   380  00008D                     Seq_count@ptr4:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x6
   384  00008D                     	ds	1
   385  00008E                     UsartConfig@config1:
   386                           	opt stack 0
   387  00008E                     Set_TIME@str:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x7
   391  00008E                     	ds	1
   392  00008F                     
   393                           ; 0 bytes @ 0x8
   394  00008F                     	ds	1
   395  000090                     tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           ; 0 bytes @ 0x9
   405                           
   406                           	psect	cstackCOMRAM
   407  000040                     __pcstackCOMRAM:
   408                           	opt stack 0
   409  000040                     ??i2_Delay10KTCYx:
   410  000040                     i2Segment_init@Segment:
   411                           	opt stack 0
   412  000040                     i2DisplayValue@Number:
   413                           	opt stack 0
   414  000040                     i2Read_BUF@c:
   415                           	opt stack 0
   416  000040                     i2Switch_Relay@sw:
   417                           	opt stack 0
   418  000040                     i2ReadUSART@data:
   419                           	opt stack 0
   420  000040                     i2WriteUSART@data:
   421                           	opt stack 0
   422  000040                     i2Format_DEC@p:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x0
   426  000040                     	ds	1
   427  000041                     i2NumDisplay@Segment:
   428                           	opt stack 0
   429  000041                     i2Write@data:
   430                           	opt stack 0
   431  000041                     i2Delay10KTCYx@unit:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x1
   435  000041                     	ds	1
   436  000042                     i2NumDisplay@Number:
   437                           	opt stack 0
   438  000042                     i2Format_DEC@q:
   439                           	opt stack 0
   440  000042                     i2Write_string@c:
   441                           	opt stack 0
   442  000042                     i2Read_string@buffer:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446  000042                     	ds	1
   447  000043                     i2Display@x:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x3
   451  000043                     	ds	1
   452  000044                     i2Read_string@len:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x4
   456  000044                     	ds	1
   457  000045                     i2Read_string@i:
   458                           	opt stack 0
   459  000045                     i2Display@ptr:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x5
   463  000045                     	ds	1
   464  000046                     i2Read_string@data:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x6
   468  000046                     	ds	1
   469  000047                     i2Set_TIME@str:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x7
   473  000047                     	ds	2
   474  000049                     ??_Rx_isr:
   475  000049                     
   476                           ; 0 bytes @ 0x9
   477  000049                     	ds	14
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 82 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;		None               void
   499 ;; Registers used:
   500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   506 ;;      Params:         0       0       0       0       0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels required when called:    9
   512 ;; This function calls:
   513 ;;		_Blink
   514 ;;		_Config_Interrupt
   515 ;;		_Display
   516 ;;		_Seq_count
   517 ;;		_Set_TIME
   518 ;;		_Switch_Relay
   519 ;;		_UsartConfig
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text0
   526  0007B2                     __ptext0:
   527                           	opt stack 0
   528  0007B2                     _main:
   529                           	opt stack 22
   530                           
   531                           ;main.c: 84: TRISBbits.TRISB0=0;
   532                           
   533                           ;incstack = 0
   534  0007B2  9093               	bcf	3987,0,c	;volatile
   535                           
   536                           ;main.c: 85: TRISBbits.TRISB1=0;
   537  0007B4  9293               	bcf	3987,1,c	;volatile
   538                           
   539                           ;main.c: 86: UsartConfig(config1, ((20000000/9600/64)-1));
   540  0007B6  0E1F               	movlw	31
   541  0007B8  0100               	movlb	0	; () banked
   542  0007BA  6F8D               	movwf	UsartConfig@config2& (0+255),b
   543  0007BC  5001               	movf	_config1,w,c
   544  0007BE  EC83  F005         	call	_UsartConfig
   545                           
   546                           ;main.c: 87: Switch_Relay(0);
   547  0007C2  0E00               	movlw	0
   548  0007C4  EC26  F005         	call	_Switch_Relay
   549                           
   550                           ;main.c: 88: Set_TIME(str);
   551  0007C8  0E00               	movlw	high _str
   552  0007CA  0100               	movlb	0	; () banked
   553  0007CC  6F8F               	movwf	(Set_TIME@str+1)& (0+255),b
   554  0007CE  0E2A               	movlw	low _str
   555  0007D0  0100               	movlb	0	; () banked
   556  0007D2  6F8E               	movwf	Set_TIME@str& (0+255),b
   557  0007D4  EC0C  F002         	call	_Set_TIME	;wreg free
   558                           
   559                           ;main.c: 89: Config_Interrupt();
   560  0007D8  ECC8  F005         	call	_Config_Interrupt	;wreg free
   561  0007DC                     l2167:
   562                           
   563                           ;main.c: 91: {
   564                           ;main.c: 92: Display();
   565  0007DC  EC0E  F000         	call	_Display	;wreg free
   566                           
   567                           ;main.c: 93: Seq_count(&Num1, &Num2, &Num3, &Num4);
   568  0007E0  0E00               	movlw	high _Num1
   569  0007E2  0100               	movlb	0	; () banked
   570  0007E4  6F88               	movwf	(Seq_count@ptr1+1)& (0+255),b
   571  0007E6  0E3C               	movlw	low _Num1
   572  0007E8  0100               	movlb	0	; () banked
   573  0007EA  6F87               	movwf	Seq_count@ptr1& (0+255),b
   574  0007EC  0E00               	movlw	high _Num2
   575  0007EE  0100               	movlb	0	; () banked
   576  0007F0  6F8A               	movwf	(Seq_count@ptr2+1)& (0+255),b
   577  0007F2  0E3D               	movlw	low _Num2
   578  0007F4  0100               	movlb	0	; () banked
   579  0007F6  6F89               	movwf	Seq_count@ptr2& (0+255),b
   580  0007F8  0E00               	movlw	high _Num3
   581  0007FA  0100               	movlb	0	; () banked
   582  0007FC  6F8C               	movwf	(Seq_count@ptr3+1)& (0+255),b
   583  0007FE  0E3E               	movlw	low _Num3
   584  000800  0100               	movlb	0	; () banked
   585  000802  6F8B               	movwf	Seq_count@ptr3& (0+255),b
   586  000804  0E00               	movlw	high _Num4
   587  000806  0100               	movlb	0	; () banked
   588  000808  6F8E               	movwf	(Seq_count@ptr4+1)& (0+255),b
   589  00080A  0E3F               	movlw	low _Num4
   590  00080C  0100               	movlb	0	; () banked
   591  00080E  6F8D               	movwf	Seq_count@ptr4& (0+255),b
   592  000810  EC59  F002         	call	_Seq_count	;wreg free
   593                           
   594                           ;main.c: 94: if(LATB0==1)
   595  000814  A08A               	btfss	3978,0,c	;volatile
   596  000816  D7E2               	goto	l2167
   597                           
   598                           ;main.c: 95: Blink();
   599  000818  ECE0  F005         	call	_Blink	;wreg free
   600  00081C  D7DF               	goto	l2167
   601  00081E                     __end_of_main:
   602                           	opt stack 0
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612 ;; *************** function _UsartConfig *****************
   613 ;; Defined at:
   614 ;;		line 21 in file "uart.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;  config1         1    wreg     unsigned char 
   617 ;;  config2         1    6[BANK0 ] unsigned char 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  config1         1    7[BANK0 ] unsigned char 
   620 ;; Return value:  Size  Location     Type
   621 ;;		None               void
   622 ;; Registers used:
   623 ;;		wreg, status,2, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   629 ;;      Params:         0       1       0       0       0       0       0       0       0
   630 ;;      Locals:         0       1       0       0       0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0       0       0
   632 ;;      Totals:         0       2       0       0       0       0       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    6
   636 ;; This function calls:
   637 ;;		_OpenUSART
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text1
   644  000B06                     __ptext1:
   645                           	opt stack 0
   646  000B06                     _UsartConfig:
   647                           	opt stack 24
   648                           
   649                           ;incstack = 0
   650                           ;UsartConfig@config1 stored from wreg
   651  000B06  0100               	movlb	0	; () banked
   652  000B08  6F8E               	movwf	UsartConfig@config1& (0+255),b
   653                           
   654                           ; BSR set to: 0
   655                           ;uart.c: 23: OpenUSART( config1, config2);
   656  000B0A  0100               	movlb	0	; () banked
   657  000B0C  C08D  F087         	movff	UsartConfig@config2,OpenUSART@spbrg
   658  000B10  0100               	movlb	0	; () banked
   659  000B12  6B88               	clrf	(OpenUSART@spbrg+1)& (0+255),b
   660  000B14  0100               	movlb	0	; () banked
   661  000B16  518E               	movf	UsartConfig@config1& (0+255),w,b
   662  000B18  ECE6  F002         	call	_OpenUSART
   663  000B1C  0012               	return	
   664  000B1E                     __end_of_UsartConfig:
   665                           	opt stack 0
   666                           tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           postinc0	equ	0xFEE
   671                           wreg	equ	0xFE8
   672                           postdec1	equ	0xFE5
   673                           fsr1l	equ	0xFE1
   674                           
   675 ;; *************** function _OpenUSART *****************
   676 ;; Defined at:
   677 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  config          1    wreg     unsigned char 
   680 ;;  spbrg           2    0[BANK0 ] unsigned int 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  config          1    5[BANK0 ] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;		None               void
   685 ;; Registers used:
   686 ;;		wreg, status,2
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   692 ;;      Params:         0       2       0       0       0       0       0       0       0
   693 ;;      Locals:         0       1       0       0       0       0       0       0       0
   694 ;;      Temps:          0       3       0       0       0       0       0       0       0
   695 ;;      Totals:         0       6       0       0       0       0       0       0       0
   696 ;;Total ram usage:        6 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; Hardware stack levels required when called:    5
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_UsartConfig
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text2
   707  0005CC                     __ptext2:
   708                           	opt stack 0
   709  0005CC                     _OpenUSART:
   710                           	opt stack 24
   711                           
   712                           ;incstack = 0
   713                           ;OpenUSART@config stored from wreg
   714  0005CC  0100               	movlb	0	; () banked
   715  0005CE  6F8C               	movwf	OpenUSART@config& (0+255),b
   716                           
   717                           ; BSR set to: 0
   718  0005D0  0E00               	movlw	0
   719  0005D2  6EAC               	movwf	4012,c	;volatile
   720  0005D4  0E00               	movlw	0
   721  0005D6  6EAB               	movwf	4011,c	;volatile
   722                           
   723                           ; BSR set to: 0
   724  0005D8  0100               	movlb	0	; () banked
   725  0005DA  B18C               	btfsc	OpenUSART@config& (0+255),0,b
   726                           
   727                           ; BSR set to: 0
   728  0005DC  88AC               	bsf	4012,4,c	;volatile
   729                           
   730                           ; BSR set to: 0
   731                           
   732                           ; BSR set to: 0
   733  0005DE  0100               	movlb	0	; () banked
   734  0005E0  A38C               	btfss	OpenUSART@config& (0+255),1,b
   735  0005E2  D002               	goto	l2035
   736                           
   737                           ; BSR set to: 0
   738  0005E4  8CAC               	bsf	4012,6,c	;volatile
   739  0005E6  8CAB               	bsf	4011,6,c	;volatile
   740  0005E8                     l2035:
   741                           
   742                           ; BSR set to: 0
   743  0005E8  0100               	movlb	0	; () banked
   744  0005EA  B58C               	btfsc	OpenUSART@config& (0+255),2,b
   745                           
   746                           ; BSR set to: 0
   747  0005EC  8EAC               	bsf	4012,7,c	;volatile
   748                           
   749                           ; BSR set to: 0
   750                           
   751                           ; BSR set to: 0
   752  0005EE  0100               	movlb	0	; () banked
   753  0005F0  A78C               	btfss	OpenUSART@config& (0+255),3,b
   754  0005F2  D002               	goto	l289
   755                           
   756                           ; BSR set to: 0
   757  0005F4  88AB               	bsf	4011,4,c	;volatile
   758  0005F6  D001               	goto	l2043
   759  0005F8                     l289:
   760                           
   761                           ; BSR set to: 0
   762  0005F8  8AAB               	bsf	4011,5,c	;volatile
   763  0005FA                     l2043:
   764                           
   765                           ; BSR set to: 0
   766  0005FA  0100               	movlb	0	; () banked
   767  0005FC  B98C               	btfsc	OpenUSART@config& (0+255),4,b
   768                           
   769                           ; BSR set to: 0
   770  0005FE  84AC               	bsf	4012,2,c	;volatile
   771                           
   772                           ; BSR set to: 0
   773  000600  989E               	bcf	3998,4,c	;volatile
   774                           
   775                           ; BSR set to: 0
   776  000602  0100               	movlb	0	; () banked
   777  000604  BB8C               	btfsc	OpenUSART@config& (0+255),5,b
   778                           
   779                           ; BSR set to: 0
   780  000606  86AB               	bsf	4011,3,c	;volatile
   781                           
   782                           ; BSR set to: 0
   783                           
   784                           ; BSR set to: 0
   785  000608  0100               	movlb	0	; () banked
   786  00060A  AD8C               	btfss	OpenUSART@config& (0+255),6,b
   787  00060C  D002               	goto	l293
   788                           
   789                           ; BSR set to: 0
   790  00060E  8A9D               	bsf	3997,5,c	;volatile
   791  000610  D001               	goto	l294
   792  000612                     l293:
   793                           
   794                           ; BSR set to: 0
   795  000612  9A9D               	bcf	3997,5,c	;volatile
   796  000614                     l294:
   797                           
   798                           ; BSR set to: 0
   799  000614  9A9E               	bcf	3998,5,c	;volatile
   800                           
   801                           ; BSR set to: 0
   802  000616  0100               	movlb	0	; () banked
   803  000618  AF8C               	btfss	OpenUSART@config& (0+255),7,b
   804  00061A  D002               	goto	l295
   805                           
   806                           ; BSR set to: 0
   807  00061C  889D               	bsf	3997,4,c	;volatile
   808  00061E  D001               	goto	l296
   809  000620                     l295:
   810                           
   811                           ; BSR set to: 0
   812  000620  989D               	bcf	3997,4,c	;volatile
   813  000622                     l296:
   814                           
   815                           ; BSR set to: 0
   816  000622  C087  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   817                           
   818                           ; BSR set to: 0
   819  000626  0100               	movlb	0	; () banked
   820  000628  C088  F089         	movff	OpenUSART@spbrg+1,??_OpenUSART
   821  00062C  C089  F08A         	movff	??_OpenUSART,??_OpenUSART+1
   822  000630  0100               	movlb	0	; () banked
   823  000632  6B8B               	clrf	(??_OpenUSART+2)& (0+255),b
   824  000634  0100               	movlb	0	; () banked
   825  000636  518A               	movf	(??_OpenUSART+1)& (0+255),w,b
   826  000638  6EB0               	movwf	4016,c	;volatile
   827                           
   828                           ; BSR set to: 0
   829  00063A  8AAC               	bsf	4012,5,c	;volatile
   830                           
   831                           ; BSR set to: 0
   832  00063C  8EAB               	bsf	4011,7,c	;volatile
   833                           
   834                           ; BSR set to: 0
   835  00063E  9C94               	bcf	3988,6,c	;volatile
   836                           
   837                           ; BSR set to: 0
   838  000640  8E94               	bsf	3988,7,c	;volatile
   839                           
   840                           ; BSR set to: 0
   841  000642  B8AC               	btfsc	4012,4,c	;volatile
   842                           
   843                           ; BSR set to: 0
   844  000644  BEAC               	btfsc	4012,7,c	;volatile
   845  000646  D001               	goto	l298
   846                           
   847                           ; BSR set to: 0
   848  000648  8C94               	bsf	3988,6,c	;volatile
   849  00064A                     l298:
   850                           
   851                           ; BSR set to: 0
   852  00064A  0012               	return	
   853  00064C                     __end_of_OpenUSART:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           postinc0	equ	0xFEE
   860                           wreg	equ	0xFE8
   861                           postdec1	equ	0xFE5
   862                           fsr1l	equ	0xFE1
   863                           
   864 ;; *************** function _Set_TIME *****************
   865 ;; Defined at:
   866 ;;		line 79 in file "timer.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  str             2    7[BANK0 ] PTR unsigned char 
   869 ;;		 -> str(10), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;		None               void
   874 ;; Registers used:
   875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   881 ;;      Params:         0       2       0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0
   884 ;;      Totals:         0       2       0       0       0       0       0       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    8
   888 ;; This function calls:
   889 ;;		_Format_DEC
   890 ;;		_Read_BUF
   891 ;;		_Read_string
   892 ;;		_Write_string
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text3
   899  000418                     __ptext3:
   900                           	opt stack 0
   901  000418                     _Set_TIME:
   902                           	opt stack 22
   903                           
   904                           ;timer.c: 81: Write_string(str1);
   905                           
   906                           ; BSR set to: 0
   907                           ;incstack = 0
   908  000418  0100               	movlb	0	; () banked
   909  00041A  0E00               	movlw	high _str1
   910  00041C  0100               	movlb	0	; () banked
   911  00041E  6F8A               	movwf	(Write_string@c+1)& (0+255),b
   912  000420  0100               	movlb	0	; () banked
   913  000422  0E60               	movlw	low _str1
   914  000424  0100               	movlb	0	; () banked
   915  000426  6F89               	movwf	Write_string@c& (0+255),b
   916  000428  ECBC  F004         	call	_Write_string	;wreg free
   917                           
   918                           ;timer.c: 82: Read_BUF();
   919  00042C  ECCE  F005         	call	_Read_BUF	;wreg free
   920                           
   921                           ;timer.c: 83: Read_string(str, 4);
   922  000430  0100               	movlb	0	; () banked
   923  000432  C08F  F08A         	movff	Set_TIME@str+1,Read_string@buffer+1
   924  000436  0100               	movlb	0	; () banked
   925  000438  C08E  F089         	movff	Set_TIME@str,Read_string@buffer
   926  00043C  0E04               	movlw	4
   927  00043E  0100               	movlb	0	; () banked
   928  000440  6F8B               	movwf	Read_string@len& (0+255),b
   929  000442  EC3A  F004         	call	_Read_string	;wreg free
   930                           
   931                           ;timer.c: 84: Read_BUF();
   932  000446  ECCE  F005         	call	_Read_BUF	;wreg free
   933                           
   934                           ;timer.c: 85: Format_DEC(str, array);
   935  00044A  0100               	movlb	0	; () banked
   936  00044C  C08F  F088         	movff	Set_TIME@str+1,Format_DEC@p+1
   937  000450  0100               	movlb	0	; () banked
   938  000452  C08E  F087         	movff	Set_TIME@str,Format_DEC@p
   939  000456  0E00               	movlw	high _array
   940  000458  0100               	movlb	0	; () banked
   941  00045A  6F8A               	movwf	(Format_DEC@q+1)& (0+255),b
   942  00045C  0E34               	movlw	low _array
   943  00045E  0100               	movlb	0	; () banked
   944  000460  6F89               	movwf	Format_DEC@q& (0+255),b
   945  000462  EC26  F003         	call	_Format_DEC	;wreg free
   946                           
   947                           ;timer.c: 86: Write_string(str2);
   948  000466  0E00               	movlw	high _str2
   949  000468  0100               	movlb	0	; () banked
   950  00046A  6F8A               	movwf	(Write_string@c+1)& (0+255),b
   951  00046C  0E02               	movlw	low _str2
   952  00046E  0100               	movlb	0	; () banked
   953  000470  6F89               	movwf	Write_string@c& (0+255),b
   954  000472  ECBC  F004         	call	_Write_string	;wreg free
   955                           
   956                           ;timer.c: 87: Read_BUF();
   957  000476  ECCE  F005         	call	_Read_BUF	;wreg free
   958                           
   959                           ;timer.c: 88: Read_string(str, 4);
   960  00047A  0100               	movlb	0	; () banked
   961  00047C  C08F  F08A         	movff	Set_TIME@str+1,Read_string@buffer+1
   962  000480  0100               	movlb	0	; () banked
   963  000482  C08E  F089         	movff	Set_TIME@str,Read_string@buffer
   964  000486  0E04               	movlw	4
   965  000488  0100               	movlb	0	; () banked
   966  00048A  6F8B               	movwf	Read_string@len& (0+255),b
   967  00048C  EC3A  F004         	call	_Read_string	;wreg free
   968                           
   969                           ;timer.c: 89: Read_BUF();
   970  000490  ECCE  F005         	call	_Read_BUF	;wreg free
   971                           
   972                           ;timer.c: 90: Format_DEC(str, array+4);
   973  000494  0100               	movlb	0	; () banked
   974  000496  C08F  F088         	movff	Set_TIME@str+1,Format_DEC@p+1
   975  00049A  0100               	movlb	0	; () banked
   976  00049C  C08E  F087         	movff	Set_TIME@str,Format_DEC@p
   977  0004A0  0E00               	movlw	high (_array+4)
   978  0004A2  0100               	movlb	0	; () banked
   979  0004A4  6F8A               	movwf	(Format_DEC@q+1)& (0+255),b
   980  0004A6  0E38               	movlw	low (_array+4)
   981  0004A8  0100               	movlb	0	; () banked
   982  0004AA  6F89               	movwf	Format_DEC@q& (0+255),b
   983  0004AC  EC26  F003         	call	_Format_DEC	;wreg free
   984  0004B0  0012               	return	
   985  0004B2                     __end_of_Set_TIME:
   986                           	opt stack 0
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996 ;; *************** function _Write_string *****************
   997 ;; Defined at:
   998 ;;		line 32 in file "uart.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  c               2    2[BANK0 ] PTR unsigned char 
  1001 ;;		 -> str2(38), str1(39), 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;		None               void
  1006 ;; Registers used:
  1007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         0       2       0       0       0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1016 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1017 ;;Total ram usage:        2 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    7
  1020 ;; This function calls:
  1021 ;;		_Write
  1022 ;;		_WriteUSART
  1023 ;; This function is called by:
  1024 ;;		_Set_TIME
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text4
  1029  000978                     __ptext4:
  1030                           	opt stack 0
  1031  000978                     _Write_string:
  1032                           	opt stack 22
  1033                           
  1034                           ;uart.c: 34: Write(0x0D);
  1035                           
  1036                           ;incstack = 0
  1037  000978  0E0D               	movlw	13
  1038  00097A  ECAF  F005         	call	_Write
  1039                           
  1040                           ;uart.c: 35: while(*c != '\0')
  1041  00097E  D00C               	goto	l2009
  1042  000980                     l2005:
  1043                           
  1044                           ;uart.c: 36: {
  1045                           ;uart.c: 37: WriteUSART(*c);
  1046  000980  C089  FFD9         	movff	Write_string@c,fsr2l
  1047  000984  C08A  FFDA         	movff	Write_string@c+1,fsr2h
  1048  000988  50DF               	movf	indf2,w,c
  1049  00098A  ECA5  F005         	call	_WriteUSART
  1050  00098E                     l243:
  1051  00098E  A2AC               	btfss	4012,1,c	;volatile
  1052  000990  D7FE               	goto	l243
  1053                           
  1054                           ;uart.c: 39: c++;
  1055  000992  0100               	movlb	0	; () banked
  1056  000994  4B89               	infsnz	Write_string@c& (0+255),f,b
  1057  000996  2B8A               	incf	(Write_string@c+1)& (0+255),f,b
  1058  000998                     l2009:
  1059  000998  C089  FFD9         	movff	Write_string@c,fsr2l
  1060  00099C  C08A  FFDA         	movff	Write_string@c+1,fsr2h
  1061  0009A0  50DF               	movf	indf2,w,c
  1062  0009A2  B4D8               	btfsc	status,2,c
  1063  0009A4  0012               	return	
  1064  0009A6  D7EC               	goto	l2005
  1065  0009A8                     __end_of_Write_string:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           postdec1	equ	0xFE5
  1074                           fsr1l	equ	0xFE1
  1075                           indf2	equ	0xFDF
  1076                           fsr2h	equ	0xFDA
  1077                           fsr2l	equ	0xFD9
  1078                           status	equ	0xFD8
  1079                           
  1080 ;; *************** function _Read_string *****************
  1081 ;; Defined at:
  1082 ;;		line 51 in file "uart.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
  1085 ;;		 -> str(10), 
  1086 ;;  len             1    4[BANK0 ] unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  data            1    6[BANK0 ] unsigned char 
  1089 ;;  i               1    5[BANK0 ] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;		None               void
  1092 ;; Registers used:
  1093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1099 ;;      Params:         0       3       0       0       0       0       0       0       0
  1100 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1102 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1103 ;;Total ram usage:        5 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    7
  1106 ;; This function calls:
  1107 ;;		_ReadUSART
  1108 ;;		_Write
  1109 ;;		_WriteUSART
  1110 ;; This function is called by:
  1111 ;;		_Set_TIME
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text5
  1116  000874                     __ptext5:
  1117                           	opt stack 0
  1118  000874                     _Read_string:
  1119                           	opt stack 22
  1120                           
  1121                           ;uart.c: 53: char i;
  1122                           ;uart.c: 54: unsigned char data;
  1123                           ;uart.c: 55: Write(0x0D);
  1124                           
  1125                           ;incstack = 0
  1126  000874  0E0D               	movlw	13
  1127  000876  ECAF  F005         	call	_Write
  1128                           
  1129                           ;uart.c: 56: Write('\n');
  1130  00087A  0E0A               	movlw	10
  1131  00087C  ECAF  F005         	call	_Write
  1132                           
  1133                           ;uart.c: 57: for(i=0;i<len;i++)
  1134  000880  0E00               	movlw	0
  1135  000882  0100               	movlb	0	; () banked
  1136  000884  6F8C               	movwf	Read_string@i& (0+255),b
  1137  000886  D018               	goto	l2023
  1138  000888                     l258:
  1139  000888  AA9E               	btfss	3998,5,c	;volatile
  1140  00088A  D7FE               	goto	l258
  1141                           
  1142                           ;uart.c: 60: data = ReadUSART();
  1143  00088C  EC37  F005         	call	_ReadUSART	;wreg free
  1144  000890  0100               	movlb	0	; () banked
  1145  000892  6F8D               	movwf	Read_string@data& (0+255),b
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;uart.c: 61: *buffer = data;
  1149  000894  C089  FFD9         	movff	Read_string@buffer,fsr2l
  1150  000898  C08A  FFDA         	movff	Read_string@buffer+1,fsr2h
  1151  00089C  0100               	movlb	0	; () banked
  1152  00089E  C08D  FFDF         	movff	Read_string@data,indf2
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;uart.c: 62: WriteUSART(data);
  1156  0008A2  0100               	movlb	0	; () banked
  1157  0008A4  518D               	movf	Read_string@data& (0+255),w,b
  1158  0008A6  ECA5  F005         	call	_WriteUSART
  1159  0008AA                     l261:
  1160  0008AA  A2AC               	btfss	4012,1,c	;volatile
  1161  0008AC  D7FE               	goto	l261
  1162                           
  1163                           ;uart.c: 64: buffer++;
  1164  0008AE  0100               	movlb	0	; () banked
  1165  0008B0  4B89               	infsnz	Read_string@buffer& (0+255),f,b
  1166  0008B2  2B8A               	incf	(Read_string@buffer+1)& (0+255),f,b
  1167  0008B4  0100               	movlb	0	; () banked
  1168  0008B6  2B8C               	incf	Read_string@i& (0+255),f,b
  1169  0008B8                     l2023:
  1170                           
  1171                           ; BSR set to: 0
  1172  0008B8  0100               	movlb	0	; () banked
  1173  0008BA  518B               	movf	Read_string@len& (0+255),w,b
  1174  0008BC  0100               	movlb	0	; () banked
  1175  0008BE  5D8C               	subwf	Read_string@i& (0+255),w,b
  1176  0008C0  B0D8               	btfsc	status,0,c
  1177                           
  1178                           ; BSR set to: 0
  1179                           
  1180                           ; BSR set to: 0
  1181  0008C2  0012               	return	
  1182  0008C4  D7E1               	goto	l258
  1183  0008C6                     __end_of_Read_string:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postdec1	equ	0xFE5
  1192                           fsr1l	equ	0xFE1
  1193                           indf2	equ	0xFDF
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           status	equ	0xFD8
  1197                           
  1198 ;; *************** function _Write *****************
  1199 ;; Defined at:
  1200 ;;		line 26 in file "uart.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  data            1    wreg     unsigned char 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  data            1    1[BANK0 ] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;		None               void
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0
  1215 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1217 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1218 ;;Total ram usage:        1 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    6
  1221 ;; This function calls:
  1222 ;;		_WriteUSART
  1223 ;; This function is called by:
  1224 ;;		_Write_string
  1225 ;;		_Read_string
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text6
  1230  000B5E                     __ptext6:
  1231                           	opt stack 0
  1232  000B5E                     _Write:
  1233                           	opt stack 22
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;incstack = 0
  1237                           ;Write@data stored from wreg
  1238  000B5E  0100               	movlb	0	; () banked
  1239  000B60  6F88               	movwf	Write@data& (0+255),b
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;uart.c: 28: WriteUSART(data);
  1243  000B62  0100               	movlb	0	; () banked
  1244  000B64  5188               	movf	Write@data& (0+255),w,b
  1245  000B66  ECA5  F005         	call	_WriteUSART
  1246  000B6A                     l235:
  1247  000B6A  B2AC               	btfsc	4012,1,c	;volatile
  1248  000B6C  0012               	return	
  1249  000B6E  D7FD               	goto	l235
  1250  000B70                     __end_of_Write:
  1251                           	opt stack 0
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1l	equ	0xFE1
  1260                           indf2	equ	0xFDF
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _WriteUSART *****************
  1266 ;; Defined at:
  1267 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  data            1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  data            1    0[BANK0 ] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		wreg
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    5
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_Write
  1292 ;;		_Write_string
  1293 ;;		_Read_string
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text7
  1298  000B4A                     __ptext7:
  1299                           	opt stack 0
  1300  000B4A                     _WriteUSART:
  1301                           	opt stack 23
  1302                           
  1303                           ;incstack = 0
  1304                           ;WriteUSART@data stored from wreg
  1305  000B4A  0100               	movlb	0	; () banked
  1306  000B4C  6F87               	movwf	WriteUSART@data& (0+255),b
  1307                           
  1308                           ; BSR set to: 0
  1309  000B4E  ACAC               	btfss	4012,6,c	;volatile
  1310  000B50  D003               	goto	l1871
  1311                           
  1312                           ; BSR set to: 0
  1313  000B52  90AC               	bcf	4012,0,c	;volatile
  1314  000B54  B228               	btfsc	_USART_Status,1,c
  1315                           
  1316                           ; BSR set to: 0
  1317  000B56  80AC               	bsf	4012,0,c	;volatile
  1318  000B58                     l1871:
  1319                           
  1320                           ; BSR set to: 0
  1321  000B58  C087  FFAD         	movff	WriteUSART@data,4013	;volatile
  1322                           
  1323                           ; BSR set to: 0
  1324  000B5C  0012               	return	
  1325  000B5E                     __end_of_WriteUSART:
  1326                           	opt stack 0
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           postdec1	equ	0xFE5
  1334                           fsr1l	equ	0xFE1
  1335                           indf2	equ	0xFDF
  1336                           fsr2h	equ	0xFDA
  1337                           fsr2l	equ	0xFD9
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _ReadUSART *****************
  1341 ;; Defined at:
  1342 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  data            1    0[BANK0 ] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      unsigned char 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1356 ;;      Params:         0       0       0       0       0       0       0       0       0
  1357 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1359 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    5
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_Read_string
  1367 ;;		_Read_char
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text8
  1372  000A6E                     __ptext8:
  1373                           	opt stack 0
  1374  000A6E                     _ReadUSART:
  1375                           	opt stack 23
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;incstack = 0
  1379  000A6E  0EF2               	movlw	242
  1380  000A70  1628               	andwf	_USART_Status,f,c
  1381  000A72  ACAB               	btfss	4011,6,c	;volatile
  1382  000A74  D003               	goto	l307
  1383  000A76  9028               	bcf	_USART_Status,0,c
  1384  000A78  B0AB               	btfsc	4011,0,c	;volatile
  1385  000A7A  8028               	bsf	_USART_Status,0,c
  1386  000A7C                     l307:
  1387  000A7C  B4AB               	btfsc	4011,2,c	;volatile
  1388  000A7E  8428               	bsf	_USART_Status,2,c
  1389  000A80  B2AB               	btfsc	4011,1,c	;volatile
  1390  000A82  8628               	bsf	_USART_Status,3,c
  1391  000A84  CFAE F087          	movff	4014,ReadUSART@data	;volatile
  1392  000A88  0100               	movlb	0	; () banked
  1393  000A8A  5187               	movf	ReadUSART@data& (0+255),w,b
  1394                           
  1395                           ; BSR set to: 0
  1396                           
  1397                           ; BSR set to: 0
  1398  000A8C  0012               	return	
  1399  000A8E                     __end_of_ReadUSART:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           fsr1l	equ	0xFE1
  1409                           indf2	equ	0xFDF
  1410                           fsr2h	equ	0xFDA
  1411                           fsr2l	equ	0xFD9
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _Read_BUF *****************
  1415 ;; Defined at:
  1416 ;;		line 18 in file "timer.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  c               1    0[BANK0 ] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;		None               void
  1423 ;; Registers used:
  1424 ;;		None
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0
  1431 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1433 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1434 ;;Total ram usage:        1 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    5
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_Set_TIME
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text9
  1445  000B9C                     __ptext9:
  1446                           	opt stack 0
  1447  000B9C                     _Read_BUF:
  1448                           	opt stack 24
  1449                           
  1450                           ;timer.c: 20: unsigned char c;
  1451                           ;timer.c: 21: c = RCREG;
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;incstack = 0
  1455  000B9C  CFAE F087          	movff	4014,Read_BUF@c	;volatile
  1456                           
  1457                           ;timer.c: 22: c = RCREG;
  1458  000BA0  CFAE F087          	movff	4014,Read_BUF@c	;volatile
  1459  000BA4  0012               	return	
  1460  000BA6                     __end_of_Read_BUF:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           postinc0	equ	0xFEE
  1467                           wreg	equ	0xFE8
  1468                           postdec1	equ	0xFE5
  1469                           fsr1l	equ	0xFE1
  1470                           indf2	equ	0xFDF
  1471                           fsr2h	equ	0xFDA
  1472                           fsr2l	equ	0xFD9
  1473                           status	equ	0xFD8
  1474                           
  1475 ;; *************** function _Format_DEC *****************
  1476 ;; Defined at:
  1477 ;;		line 25 in file "timer.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  p               2    0[BANK0 ] PTR unsigned char 
  1480 ;;		 -> str(10), 
  1481 ;;  q               2    2[BANK0 ] PTR unsigned char 
  1482 ;;		 -> array(8), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;		None               void
  1487 ;; Registers used:
  1488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1494 ;;      Params:         0       4       0       0       0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1497 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1498 ;;Total ram usage:        4 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    5
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_Set_TIME
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text10
  1509  00064C                     __ptext10:
  1510                           	opt stack 0
  1511  00064C                     _Format_DEC:
  1512                           	opt stack 24
  1513                           
  1514                           ;timer.c: 27: *q = (*p-'0');
  1515                           
  1516                           ;incstack = 0
  1517  00064C  C087  FFD9         	movff	Format_DEC@p,fsr2l
  1518  000650  C088  FFDA         	movff	Format_DEC@p+1,fsr2h
  1519  000654  50DF               	movf	indf2,w,c
  1520  000656  0FD0               	addlw	208
  1521  000658  C089  FFD9         	movff	Format_DEC@q,fsr2l
  1522  00065C  C08A  FFDA         	movff	Format_DEC@q+1,fsr2h
  1523  000660  6EDF               	movwf	indf2,c
  1524                           
  1525                           ;timer.c: 28: p++;
  1526  000662  0100               	movlb	0	; () banked
  1527  000664  4B87               	infsnz	Format_DEC@p& (0+255),f,b
  1528  000666  2B88               	incf	(Format_DEC@p+1)& (0+255),f,b
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;timer.c: 29: q++;
  1532  000668  0100               	movlb	0	; () banked
  1533  00066A  4B89               	infsnz	Format_DEC@q& (0+255),f,b
  1534  00066C  2B8A               	incf	(Format_DEC@q+1)& (0+255),f,b
  1535                           
  1536                           ;timer.c: 30: *q = (*p-'0');
  1537  00066E  C087  FFD9         	movff	Format_DEC@p,fsr2l
  1538  000672  C088  FFDA         	movff	Format_DEC@p+1,fsr2h
  1539  000676  50DF               	movf	indf2,w,c
  1540  000678  0FD0               	addlw	208
  1541  00067A  C089  FFD9         	movff	Format_DEC@q,fsr2l
  1542  00067E  C08A  FFDA         	movff	Format_DEC@q+1,fsr2h
  1543  000682  6EDF               	movwf	indf2,c
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;timer.c: 31: p++;
  1547  000684  0100               	movlb	0	; () banked
  1548  000686  4B87               	infsnz	Format_DEC@p& (0+255),f,b
  1549  000688  2B88               	incf	(Format_DEC@p+1)& (0+255),f,b
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;timer.c: 32: q++;
  1553  00068A  0100               	movlb	0	; () banked
  1554  00068C  4B89               	infsnz	Format_DEC@q& (0+255),f,b
  1555  00068E  2B8A               	incf	(Format_DEC@q+1)& (0+255),f,b
  1556                           
  1557                           ;timer.c: 33: *q = (*p-'0');
  1558  000690  C087  FFD9         	movff	Format_DEC@p,fsr2l
  1559  000694  C088  FFDA         	movff	Format_DEC@p+1,fsr2h
  1560  000698  50DF               	movf	indf2,w,c
  1561  00069A  0FD0               	addlw	208
  1562  00069C  C089  FFD9         	movff	Format_DEC@q,fsr2l
  1563  0006A0  C08A  FFDA         	movff	Format_DEC@q+1,fsr2h
  1564  0006A4  6EDF               	movwf	indf2,c
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;timer.c: 34: p++;
  1568  0006A6  0100               	movlb	0	; () banked
  1569  0006A8  4B87               	infsnz	Format_DEC@p& (0+255),f,b
  1570  0006AA  2B88               	incf	(Format_DEC@p+1)& (0+255),f,b
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;timer.c: 35: q++;
  1574  0006AC  0100               	movlb	0	; () banked
  1575  0006AE  4B89               	infsnz	Format_DEC@q& (0+255),f,b
  1576  0006B0  2B8A               	incf	(Format_DEC@q+1)& (0+255),f,b
  1577                           
  1578                           ;timer.c: 36: *q = (*p-'0');
  1579  0006B2  C087  FFD9         	movff	Format_DEC@p,fsr2l
  1580  0006B6  C088  FFDA         	movff	Format_DEC@p+1,fsr2h
  1581  0006BA  50DF               	movf	indf2,w,c
  1582  0006BC  0FD0               	addlw	208
  1583  0006BE  C089  FFD9         	movff	Format_DEC@q,fsr2l
  1584  0006C2  C08A  FFDA         	movff	Format_DEC@q+1,fsr2h
  1585  0006C6  6EDF               	movwf	indf2,c
  1586                           
  1587                           ; BSR set to: 0
  1588  0006C8  0012               	return	
  1589  0006CA                     __end_of_Format_DEC:
  1590                           	opt stack 0
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1l	equ	0xFE1
  1599                           indf2	equ	0xFDF
  1600                           fsr2h	equ	0xFDA
  1601                           fsr2l	equ	0xFD9
  1602                           status	equ	0xFD8
  1603                           
  1604 ;; *************** function _Seq_count *****************
  1605 ;; Defined at:
  1606 ;;		line 11 in file "counter.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  ptr1            2    0[BANK0 ] PTR unsigned char 
  1609 ;;		 -> Num1(1), 
  1610 ;;  ptr2            2    2[BANK0 ] PTR unsigned char 
  1611 ;;		 -> Num2(1), 
  1612 ;;  ptr3            2    4[BANK0 ] PTR unsigned char 
  1613 ;;		 -> Num3(1), 
  1614 ;;  ptr4            2    6[BANK0 ] PTR unsigned char 
  1615 ;;		 -> Num4(1), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         0       8       0       0       0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1630 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1631 ;;Total ram usage:        8 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    5
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text11
  1642  0004B2                     __ptext11:
  1643                           	opt stack 0
  1644  0004B2                     _Seq_count:
  1645                           	opt stack 25
  1646                           
  1647                           ;counter.c: 13: ++*ptr1;
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;incstack = 0
  1651  0004B2  C087  FFD9         	movff	Seq_count@ptr1,fsr2l
  1652  0004B6  C088  FFDA         	movff	Seq_count@ptr1+1,fsr2h
  1653  0004BA  2ADF               	incf	indf2,f,c
  1654                           
  1655                           ;counter.c: 14: if(*ptr1==10)
  1656  0004BC  0E0A               	movlw	10
  1657  0004BE  C087  FFD9         	movff	Seq_count@ptr1,fsr2l
  1658  0004C2  C088  FFDA         	movff	Seq_count@ptr1+1,fsr2h
  1659  0004C6  62DF               	cpfseq	indf2,c
  1660  0004C8  D03C               	goto	l149
  1661                           
  1662                           ;counter.c: 15: {
  1663                           ;counter.c: 16: ++*ptr2;
  1664  0004CA  C089  FFD9         	movff	Seq_count@ptr2,fsr2l
  1665  0004CE  C08A  FFDA         	movff	Seq_count@ptr2+1,fsr2h
  1666  0004D2  2ADF               	incf	indf2,f,c
  1667                           
  1668                           ;counter.c: 17: *ptr1 = 0;
  1669  0004D4  C087  FFD9         	movff	Seq_count@ptr1,fsr2l
  1670  0004D8  C088  FFDA         	movff	Seq_count@ptr1+1,fsr2h
  1671  0004DC  0E00               	movlw	0
  1672  0004DE  6EDF               	movwf	indf2,c
  1673                           
  1674                           ;counter.c: 18: if(*ptr2==6)
  1675  0004E0  0E06               	movlw	6
  1676  0004E2  C089  FFD9         	movff	Seq_count@ptr2,fsr2l
  1677  0004E6  C08A  FFDA         	movff	Seq_count@ptr2+1,fsr2h
  1678  0004EA  62DF               	cpfseq	indf2,c
  1679  0004EC  D02A               	goto	l149
  1680                           
  1681                           ;counter.c: 19: {
  1682                           ;counter.c: 20: ++*ptr3;
  1683  0004EE  C08B  FFD9         	movff	Seq_count@ptr3,fsr2l
  1684  0004F2  C08C  FFDA         	movff	Seq_count@ptr3+1,fsr2h
  1685  0004F6  2ADF               	incf	indf2,f,c
  1686                           
  1687                           ;counter.c: 21: *ptr2=0;
  1688  0004F8  C089  FFD9         	movff	Seq_count@ptr2,fsr2l
  1689  0004FC  C08A  FFDA         	movff	Seq_count@ptr2+1,fsr2h
  1690  000500  0E00               	movlw	0
  1691  000502  6EDF               	movwf	indf2,c
  1692                           
  1693                           ;counter.c: 22: if(*ptr3==10)
  1694  000504  0E0A               	movlw	10
  1695  000506  C08B  FFD9         	movff	Seq_count@ptr3,fsr2l
  1696  00050A  C08C  FFDA         	movff	Seq_count@ptr3+1,fsr2h
  1697  00050E  62DF               	cpfseq	indf2,c
  1698  000510  D018               	goto	l149
  1699                           
  1700                           ;counter.c: 23: {
  1701                           ;counter.c: 24: ++*ptr4;
  1702  000512  C08D  FFD9         	movff	Seq_count@ptr4,fsr2l
  1703  000516  C08E  FFDA         	movff	Seq_count@ptr4+1,fsr2h
  1704  00051A  2ADF               	incf	indf2,f,c
  1705                           
  1706                           ;counter.c: 25: *ptr3=0;
  1707  00051C  C08B  FFD9         	movff	Seq_count@ptr3,fsr2l
  1708  000520  C08C  FFDA         	movff	Seq_count@ptr3+1,fsr2h
  1709  000524  0E00               	movlw	0
  1710  000526  6EDF               	movwf	indf2,c
  1711                           
  1712                           ;counter.c: 26: if(*ptr4==6)
  1713  000528  0E06               	movlw	6
  1714  00052A  C08D  FFD9         	movff	Seq_count@ptr4,fsr2l
  1715  00052E  C08E  FFDA         	movff	Seq_count@ptr4+1,fsr2h
  1716  000532  62DF               	cpfseq	indf2,c
  1717  000534  D006               	goto	l149
  1718                           
  1719                           ;counter.c: 27: {
  1720                           ;counter.c: 28: *ptr4=0;
  1721  000536  C08D  FFD9         	movff	Seq_count@ptr4,fsr2l
  1722  00053A  C08E  FFDA         	movff	Seq_count@ptr4+1,fsr2h
  1723  00053E  0E00               	movlw	0
  1724  000540  6EDF               	movwf	indf2,c
  1725  000542                     l149:
  1726  000542  0012               	return	
  1727  000544                     __end_of_Seq_count:
  1728                           	opt stack 0
  1729                           tblptru	equ	0xFF8
  1730                           tblptrh	equ	0xFF7
  1731                           tblptrl	equ	0xFF6
  1732                           tablat	equ	0xFF5
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           postdec1	equ	0xFE5
  1736                           fsr1l	equ	0xFE1
  1737                           indf2	equ	0xFDF
  1738                           fsr2h	equ	0xFDA
  1739                           fsr2l	equ	0xFD9
  1740                           status	equ	0xFD8
  1741                           
  1742 ;; *************** function _Display *****************
  1743 ;; Defined at:
  1744 ;;		line 49 in file "timer.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  ptr             2    5[BANK0 ] PTR unsigned char 
  1749 ;;		 -> array(8), 
  1750 ;;  x               2    3[BANK0 ] int 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;		None               void
  1753 ;; Registers used:
  1754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0
  1761 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1763 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1764 ;;Total ram usage:        4 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    7
  1767 ;; This function calls:
  1768 ;;		_Delay_s_
  1769 ;;		_NumDisplay
  1770 ;;		_Switch_Relay
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text12
  1777  00001C                     __ptext12:
  1778                           	opt stack 0
  1779  00001C                     _Display:
  1780                           	opt stack 23
  1781                           
  1782                           ;timer.c: 51: unsigned char *ptr = array;
  1783                           
  1784                           ;incstack = 0
  1785  00001C  0E00               	movlw	high _array
  1786  00001E  0100               	movlb	0	; () banked
  1787  000020  6F8D               	movwf	(Display@ptr+1)& (0+255),b
  1788  000022  0E34               	movlw	low _array
  1789  000024  0100               	movlb	0	; () banked
  1790  000026  6F8C               	movwf	Display@ptr& (0+255),b
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;timer.c: 52: if((Num4==*ptr)&&(Num3== *(ptr+1))&&(Num2==*(ptr+2))&&(Num1==*(ptr+3)))
  1794  000028  503F               	movf	_Num4,w,c
  1795  00002A  C08C  FFD9         	movff	Display@ptr,fsr2l
  1796  00002E  C08D  FFDA         	movff	Display@ptr+1,fsr2h
  1797  000032  62DF               	cpfseq	indf2,c
  1798  000034  D028               	goto	l2105
  1799                           
  1800                           ; BSR set to: 0
  1801  000036  0100               	movlb	0	; () banked
  1802  000038  EE20 F001          	lfsr	2,1
  1803  00003C  0100               	movlb	0	; () banked
  1804  00003E  518C               	movf	Display@ptr& (0+255),w,b
  1805  000040  26D9               	addwf	fsr2l,f,c
  1806  000042  0100               	movlb	0	; () banked
  1807  000044  518D               	movf	(Display@ptr+1)& (0+255),w,b
  1808  000046  22DA               	addwfc	fsr2h,f,c
  1809  000048  503E               	movf	_Num3,w,c
  1810  00004A  62DF               	cpfseq	indf2,c
  1811  00004C  D01C               	goto	l2105
  1812                           
  1813                           ; BSR set to: 0
  1814  00004E  0100               	movlb	0	; () banked
  1815  000050  EE20 F002          	lfsr	2,2
  1816  000054  0100               	movlb	0	; () banked
  1817  000056  518C               	movf	Display@ptr& (0+255),w,b
  1818  000058  26D9               	addwf	fsr2l,f,c
  1819  00005A  0100               	movlb	0	; () banked
  1820  00005C  518D               	movf	(Display@ptr+1)& (0+255),w,b
  1821  00005E  22DA               	addwfc	fsr2h,f,c
  1822  000060  503D               	movf	_Num2,w,c
  1823  000062  62DF               	cpfseq	indf2,c
  1824  000064  D010               	goto	l2105
  1825                           
  1826                           ; BSR set to: 0
  1827  000066  0100               	movlb	0	; () banked
  1828  000068  EE20 F003          	lfsr	2,3
  1829  00006C  0100               	movlb	0	; () banked
  1830  00006E  518C               	movf	Display@ptr& (0+255),w,b
  1831  000070  26D9               	addwf	fsr2l,f,c
  1832  000072  0100               	movlb	0	; () banked
  1833  000074  518D               	movf	(Display@ptr+1)& (0+255),w,b
  1834  000076  22DA               	addwfc	fsr2h,f,c
  1835  000078  503C               	movf	_Num1,w,c
  1836  00007A  62DF               	cpfseq	indf2,c
  1837  00007C  D004               	goto	l2105
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;timer.c: 53: {
  1841                           ;timer.c: 54: Switch_Relay(1);
  1842  00007E  0E01               	movlw	1
  1843  000080  EC26  F005         	call	_Switch_Relay
  1844                           
  1845                           ;timer.c: 55: }
  1846  000084  D033               	goto	l2115
  1847  000086                     l2105:
  1848                           
  1849                           ;timer.c: 56: else if((Num4==*(ptr+4))&&(Num3==*(ptr+5))&&(Num2==*(ptr+6))&&(Num1==*(ptr
      +                          +7)))
  1850  000086  0100               	movlb	0	; () banked
  1851  000088  EE20 F004          	lfsr	2,4
  1852  00008C  0100               	movlb	0	; () banked
  1853  00008E  518C               	movf	Display@ptr& (0+255),w,b
  1854  000090  26D9               	addwf	fsr2l,f,c
  1855  000092  0100               	movlb	0	; () banked
  1856  000094  518D               	movf	(Display@ptr+1)& (0+255),w,b
  1857  000096  22DA               	addwfc	fsr2h,f,c
  1858  000098  503F               	movf	_Num4,w,c
  1859  00009A  62DF               	cpfseq	indf2,c
  1860  00009C  D027               	goto	l2115
  1861                           
  1862                           ; BSR set to: 0
  1863  00009E  0100               	movlb	0	; () banked
  1864  0000A0  EE20 F005          	lfsr	2,5
  1865  0000A4  0100               	movlb	0	; () banked
  1866  0000A6  518C               	movf	Display@ptr& (0+255),w,b
  1867  0000A8  26D9               	addwf	fsr2l,f,c
  1868  0000AA  0100               	movlb	0	; () banked
  1869  0000AC  518D               	movf	(Display@ptr+1)& (0+255),w,b
  1870  0000AE  22DA               	addwfc	fsr2h,f,c
  1871  0000B0  503E               	movf	_Num3,w,c
  1872  0000B2  62DF               	cpfseq	indf2,c
  1873  0000B4  D01B               	goto	l2115
  1874                           
  1875                           ; BSR set to: 0
  1876  0000B6  0100               	movlb	0	; () banked
  1877  0000B8  EE20 F006          	lfsr	2,6
  1878  0000BC  0100               	movlb	0	; () banked
  1879  0000BE  518C               	movf	Display@ptr& (0+255),w,b
  1880  0000C0  26D9               	addwf	fsr2l,f,c
  1881  0000C2  0100               	movlb	0	; () banked
  1882  0000C4  518D               	movf	(Display@ptr+1)& (0+255),w,b
  1883  0000C6  22DA               	addwfc	fsr2h,f,c
  1884  0000C8  503D               	movf	_Num2,w,c
  1885  0000CA  62DF               	cpfseq	indf2,c
  1886  0000CC  D00F               	goto	l2115
  1887                           
  1888                           ; BSR set to: 0
  1889  0000CE  0100               	movlb	0	; () banked
  1890  0000D0  EE20 F007          	lfsr	2,7
  1891  0000D4  0100               	movlb	0	; () banked
  1892  0000D6  518C               	movf	Display@ptr& (0+255),w,b
  1893  0000D8  26D9               	addwf	fsr2l,f,c
  1894  0000DA  0100               	movlb	0	; () banked
  1895  0000DC  518D               	movf	(Display@ptr+1)& (0+255),w,b
  1896  0000DE  22DA               	addwfc	fsr2h,f,c
  1897  0000E0  503C               	movf	_Num1,w,c
  1898  0000E2  62DF               	cpfseq	indf2,c
  1899  0000E4  D003               	goto	l2115
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;timer.c: 57: {
  1903                           ;timer.c: 58: Switch_Relay(0);
  1904  0000E6  0E00               	movlw	0
  1905  0000E8  EC26  F005         	call	_Switch_Relay
  1906  0000EC                     l2115:
  1907                           
  1908                           ;timer.c: 59: }
  1909                           ;timer.c: 60: int x = 0;
  1910  0000EC  0E00               	movlw	0
  1911  0000EE  0100               	movlb	0	; () banked
  1912  0000F0  6F8B               	movwf	(Display@x+1)& (0+255),b
  1913  0000F2  0E00               	movlw	0
  1914  0000F4  0100               	movlb	0	; () banked
  1915  0000F6  6F8A               	movwf	Display@x& (0+255),b
  1916                           
  1917                           ;timer.c: 61: while(x<63)
  1918  0000F8  D023               	goto	l2129
  1919  0000FA                     l2117:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;timer.c: 62: {
  1923                           ;timer.c: 63: NumDisplay(Num1, 1);
  1924  0000FA  0E01               	movlw	1
  1925  0000FC  0100               	movlb	0	; () banked
  1926  0000FE  6F88               	movwf	NumDisplay@Segment& (0+255),b
  1927  000100  503C               	movf	_Num1,w,c
  1928  000102  ECEB  F004         	call	_NumDisplay
  1929                           
  1930                           ;timer.c: 64: Delay_s_();
  1931  000106  ECD8  F005         	call	_Delay_s_	;wreg free
  1932                           
  1933                           ;timer.c: 65: NumDisplay(Num2, 2);
  1934  00010A  0E02               	movlw	2
  1935  00010C  0100               	movlb	0	; () banked
  1936  00010E  6F88               	movwf	NumDisplay@Segment& (0+255),b
  1937  000110  503D               	movf	_Num2,w,c
  1938  000112  ECEB  F004         	call	_NumDisplay
  1939                           
  1940                           ;timer.c: 66: Delay_s_();
  1941  000116  ECD8  F005         	call	_Delay_s_	;wreg free
  1942                           
  1943                           ;timer.c: 67: NumDisplay(Num3, 3);
  1944  00011A  0E03               	movlw	3
  1945  00011C  0100               	movlb	0	; () banked
  1946  00011E  6F88               	movwf	NumDisplay@Segment& (0+255),b
  1947  000120  503E               	movf	_Num3,w,c
  1948  000122  ECEB  F004         	call	_NumDisplay
  1949                           
  1950                           ;timer.c: 68: Delay_s_();
  1951  000126  ECD8  F005         	call	_Delay_s_	;wreg free
  1952                           
  1953                           ;timer.c: 69: NumDisplay(Num4, 4);
  1954  00012A  0E04               	movlw	4
  1955  00012C  0100               	movlb	0	; () banked
  1956  00012E  6F88               	movwf	NumDisplay@Segment& (0+255),b
  1957  000130  503F               	movf	_Num4,w,c
  1958  000132  ECEB  F004         	call	_NumDisplay
  1959                           
  1960                           ;timer.c: 70: Delay_s_();
  1961  000136  ECD8  F005         	call	_Delay_s_	;wreg free
  1962                           
  1963                           ;timer.c: 71: x++;
  1964  00013A  0100               	movlb	0	; () banked
  1965  00013C  4B8A               	infsnz	Display@x& (0+255),f,b
  1966  00013E  2B8B               	incf	(Display@x+1)& (0+255),f,b
  1967  000140                     l2129:
  1968                           
  1969                           ; BSR set to: 0
  1970  000140  0100               	movlb	0	; () banked
  1971  000142  518B               	movf	(Display@x+1)& (0+255),w,b
  1972  000144  0A80               	xorlw	128
  1973  000146  0F80               	addlw	-128
  1974  000148  0E3F               	movlw	63
  1975  00014A  B4D8               	btfsc	status,2,c
  1976  00014C  5D8A               	subwf	Display@x& (0+255),w,b
  1977  00014E  B0D8               	btfsc	status,0,c
  1978                           
  1979                           ; BSR set to: 0
  1980                           
  1981                           ; BSR set to: 0
  1982  000150  0012               	return	
  1983  000152  D7D3               	goto	l2117
  1984  000154                     __end_of_Display:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           postinc0	equ	0xFEE
  1991                           wreg	equ	0xFE8
  1992                           postdec1	equ	0xFE5
  1993                           fsr1l	equ	0xFE1
  1994                           indf2	equ	0xFDF
  1995                           fsr2h	equ	0xFDA
  1996                           fsr2l	equ	0xFD9
  1997                           status	equ	0xFD8
  1998                           
  1999 ;; *************** function _Switch_Relay *****************
  2000 ;; Defined at:
  2001 ;;		line 38 in file "timer.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  sw              1    wreg     unsigned char 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  sw              1    0[BANK0 ] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;		None               void
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0
  2016 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        1 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    5
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;;		_Display
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text13
  2031  000A4C                     __ptext13:
  2032                           	opt stack 0
  2033  000A4C                     _Switch_Relay:
  2034                           	opt stack 25
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;incstack = 0
  2038                           ;Switch_Relay@sw stored from wreg
  2039  000A4C  0100               	movlb	0	; () banked
  2040  000A4E  6F87               	movwf	Switch_Relay@sw& (0+255),b
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;timer.c: 40: switch(sw)
  2044  000A50  D005               	goto	l1975
  2045  000A52                     l195:
  2046                           
  2047                           ; BSR set to: 0
  2048  000A52  808A               	bsf	3978,0,c	;volatile
  2049                           
  2050                           ;timer.c: 43: break;
  2051  000A54  D00B               	goto	l198
  2052  000A56                     l197:
  2053                           
  2054                           ; BSR set to: 0
  2055  000A56  908A               	bcf	3978,0,c	;volatile
  2056                           
  2057                           ;timer.c: 45: LATBbits.LATB1 = 0;
  2058  000A58  928A               	bcf	3978,1,c	;volatile
  2059                           
  2060                           ;timer.c: 46: break;
  2061  000A5A  D008               	goto	l198
  2062  000A5C                     l1975:
  2063                           
  2064                           ; BSR set to: 0
  2065  000A5C  0100               	movlb	0	; () banked
  2066  000A5E  5187               	movf	Switch_Relay@sw& (0+255),w,b
  2067                           
  2068                           ; Switch size 1, requested type "space"
  2069                           ; Number of cases is 2, Range of values is 0 to 1
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte            7     4 (average)
  2073                           ;	Chosen strategy is simple_byte
  2074  000A60  0A00               	xorlw	0	; case 0
  2075  000A62  B4D8               	btfsc	status,2,c
  2076  000A64  D7F8               	goto	l197
  2077  000A66  0A01               	xorlw	1	; case 1
  2078  000A68  B4D8               	btfsc	status,2,c
  2079  000A6A  D7F3               	goto	l195
  2080  000A6C                     l198:
  2081                           
  2082                           ; BSR set to: 0
  2083  000A6C  0012               	return	
  2084  000A6E                     __end_of_Switch_Relay:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _NumDisplay *****************
  2100 ;; Defined at:
  2101 ;;		line 166 in file "segment.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  Number          1    wreg     unsigned char 
  2104 ;;  Segment         1    1[BANK0 ] unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  Number          1    2[BANK0 ] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;		None               void
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2116 ;;      Params:         0       1       0       0       0       0       0       0       0
  2117 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2119 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2120 ;;Total ram usage:        2 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    6
  2123 ;; This function calls:
  2124 ;;		_DisplayValue
  2125 ;;		_Segment_init
  2126 ;; This function is called by:
  2127 ;;		_Display
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text14
  2132  0009D6                     __ptext14:
  2133                           	opt stack 0
  2134  0009D6                     _NumDisplay:
  2135                           	opt stack 23
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;incstack = 0
  2139                           ;NumDisplay@Number stored from wreg
  2140  0009D6  0100               	movlb	0	; () banked
  2141  0009D8  6F89               	movwf	NumDisplay@Number& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;segment.c: 168: Segment_init(Segment);
  2145  0009DA  0100               	movlb	0	; () banked
  2146  0009DC  5188               	movf	NumDisplay@Segment& (0+255),w,b
  2147  0009DE  EC84  F004         	call	_Segment_init
  2148                           
  2149                           ;segment.c: 169: if(Segment == 3 )
  2150  0009E2  0100               	movlb	0	; () banked
  2151  0009E4  5188               	movf	NumDisplay@Segment& (0+255),w,b
  2152  0009E6  0A03               	xorlw	3
  2153  0009E8  A4D8               	btfss	status,2,c
  2154  0009EA  D002               	goto	l1985
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;segment.c: 170: dot = 1;
  2158  0009EC  0E01               	movlw	1
  2159  0009EE  D001               	goto	L1
  2160  0009F0                     l1985:
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;segment.c: 171: else
  2164                           ;segment.c: 172: dot = 0;
  2165  0009F0  0E00               	movlw	0
  2166  0009F2                     L1:
  2167  0009F2  6E29               	movwf	_dot,c
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;segment.c: 173: DisplayValue(Number);
  2171                           
  2172                           ; BSR set to: 0
  2173  0009F4  0100               	movlb	0	; () banked
  2174  0009F6  5189               	movf	NumDisplay@Number& (0+255),w,b
  2175  0009F8  EC27  F001         	call	_DisplayValue
  2176  0009FC  0012               	return	
  2177  0009FE                     __end_of_NumDisplay:
  2178                           	opt stack 0
  2179                           tblptru	equ	0xFF8
  2180                           tblptrh	equ	0xFF7
  2181                           tblptrl	equ	0xFF6
  2182                           tablat	equ	0xFF5
  2183                           postinc0	equ	0xFEE
  2184                           wreg	equ	0xFE8
  2185                           postdec1	equ	0xFE5
  2186                           fsr1l	equ	0xFE1
  2187                           indf2	equ	0xFDF
  2188                           fsr2h	equ	0xFDA
  2189                           fsr2l	equ	0xFD9
  2190                           status	equ	0xFD8
  2191                           
  2192 ;; *************** function _Segment_init *****************
  2193 ;; Defined at:
  2194 ;;		line 63 in file "segment.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  Segment         1    wreg     unsigned char 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  Segment         1    0[BANK0 ] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;		None               void
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2208 ;;      Params:         0       0       0       0       0       0       0       0       0
  2209 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2211 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2212 ;;Total ram usage:        1 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    5
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_NumDisplay
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text15
  2223  000908                     __ptext15:
  2224                           	opt stack 0
  2225  000908                     _Segment_init:
  2226                           	opt stack 23
  2227                           
  2228                           ;incstack = 0
  2229                           ;Segment_init@Segment stored from wreg
  2230  000908  0100               	movlb	0	; () banked
  2231  00090A  6F87               	movwf	Segment_init@Segment& (0+255),b
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;segment.c: 68: TRISD = 0x00;
  2235  00090C  0E00               	movlw	0
  2236  00090E  6E95               	movwf	3989,c	;volatile
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;segment.c: 69: TRISAbits.TRISA0 = 0;
  2240  000910  9092               	bcf	3986,0,c	;volatile
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;segment.c: 70: TRISAbits.TRISA1 = 0;
  2244  000912  9292               	bcf	3986,1,c	;volatile
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;segment.c: 71: TRISAbits.TRISA2 = 0;
  2248  000914  9492               	bcf	3986,2,c	;volatile
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;segment.c: 72: TRISAbits.TRISA3 = 0;
  2252  000916  9692               	bcf	3986,3,c	;volatile
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;segment.c: 75: if(Segment == 1)
  2256  000918  0100               	movlb	0	; () banked
  2257  00091A  0587               	decf	Segment_init@Segment& (0+255),w,b
  2258  00091C  A4D8               	btfss	status,2,c
  2259  00091E  D002               	goto	l1891
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;segment.c: 76: PORTAbits.RA0 = 1;
  2263  000920  8080               	bsf	3968,0,c	;volatile
  2264  000922  D00F               	goto	l108
  2265  000924                     l1891:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;segment.c: 77: else if(Segment == 2)
  2269  000924  0100               	movlb	0	; () banked
  2270  000926  5187               	movf	Segment_init@Segment& (0+255),w,b
  2271  000928  0A02               	xorlw	2
  2272  00092A  A4D8               	btfss	status,2,c
  2273  00092C  D002               	goto	l1895
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;segment.c: 78: PORTAbits.RA1 = 1;
  2277  00092E  8280               	bsf	3968,1,c	;volatile
  2278  000930  D008               	goto	l108
  2279  000932                     l1895:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;segment.c: 79: else if(Segment== 3)
  2283  000932  0100               	movlb	0	; () banked
  2284  000934  5187               	movf	Segment_init@Segment& (0+255),w,b
  2285  000936  0A03               	xorlw	3
  2286  000938  A4D8               	btfss	status,2,c
  2287  00093A  D002               	goto	l106
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;segment.c: 80: PORTAbits.RA2 = 1;
  2291  00093C  8480               	bsf	3968,2,c	;volatile
  2292  00093E  D001               	goto	l108
  2293  000940                     l106:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;segment.c: 81: else
  2297                           ;segment.c: 82: PORTAbits.RA3 = 1;
  2298  000940  8680               	bsf	3968,3,c	;volatile
  2299  000942                     l108:
  2300                           
  2301                           ; BSR set to: 0
  2302  000942  0012               	return	
  2303  000944                     __end_of_Segment_init:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           postinc0	equ	0xFEE
  2310                           wreg	equ	0xFE8
  2311                           postdec1	equ	0xFE5
  2312                           fsr1l	equ	0xFE1
  2313                           indf2	equ	0xFDF
  2314                           fsr2h	equ	0xFDA
  2315                           fsr2l	equ	0xFD9
  2316                           status	equ	0xFD8
  2317                           
  2318 ;; *************** function _DisplayValue *****************
  2319 ;; Defined at:
  2320 ;;		line 85 in file "segment.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  Number          1    wreg     unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  Number          1    0[BANK0 ] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0
  2335 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2337 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2338 ;;Total ram usage:        1 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    5
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_NumDisplay
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text16
  2349  00024E                     __ptext16:
  2350                           	opt stack 0
  2351  00024E                     _DisplayValue:
  2352                           	opt stack 23
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;incstack = 0
  2356                           ;DisplayValue@Number stored from wreg
  2357  00024E  0100               	movlb	0	; () banked
  2358  000250  6F87               	movwf	DisplayValue@Number& (0+255),b
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;segment.c: 87: if(dot==1)
  2362  000252  0429               	decf	_dot,w,c
  2363  000254  B4D8               	btfsc	status,2,c
  2364  000256  D016               	goto	l1923
  2365  000258  D04D               	goto	l1949
  2366  00025A                     l1903:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;segment.c: 92: PORTD = ((0b00111111) | (0b10000000));
  2370  00025A  0EBF               	movlw	191
  2371  00025C  D011               	goto	L9
  2372  00025E                     l1905:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;segment.c: 95: PORTD = ((0b00000110) | (0b10000000));
  2376  00025E  0E86               	movlw	134
  2377  000260  D00F               	goto	L9
  2378  000262                     l1907:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;segment.c: 98: PORTD = ((0b01011011) | (0b10000000));
  2382  000262  0EDB               	movlw	219
  2383  000264  D00D               	goto	L9
  2384  000266                     l1909:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;segment.c: 101: PORTD = ((0b01001111) | (0b10000000));
  2388  000266  0ECF               	movlw	207
  2389  000268  D00B               	goto	L9
  2390  00026A                     l1911:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;segment.c: 104: PORTD = ((0b01100110) | (0b10000000));
  2394  00026A  0EE6               	movlw	230
  2395  00026C  D009               	goto	L9
  2396  00026E                     l1913:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;segment.c: 107: PORTD = ((0b01101101) | (0b10000000));
  2400  00026E  0EED               	movlw	237
  2401  000270  D007               	goto	L9
  2402  000272                     l1915:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;segment.c: 110: PORTD = ((0b01111101) | (0b10000000));
  2406  000272  0EFD               	movlw	253
  2407  000274  D005               	goto	L9
  2408  000276                     l1917:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;segment.c: 113: PORTD = ((0b00000111) | (0b10000000));
  2412  000276  0E87               	movlw	135
  2413  000278  D003               	goto	L9
  2414  00027A                     l122:
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;segment.c: 116: PORTD = ((0b01111111) | (0b10000000));
  2418  00027A  6883               	setf	3971,c	;volatile
  2419                           
  2420                           ;segment.c: 117: break;
  2421  00027C  D023               	goto	l1925
  2422  00027E                     l1919:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;segment.c: 119: PORTD = ((0b01101111) | (0b10000000));
  2426  00027E  0EEF               	movlw	239
  2427  000280                     L9:
  2428  000280  6E83               	movwf	3971,c	;volatile
  2429                           
  2430                           ;segment.c: 120: break;
  2431  000282  D020               	goto	l1925
  2432  000284                     l1923:
  2433                           
  2434                           ; BSR set to: 0
  2435  000284  0100               	movlb	0	; () banked
  2436  000286  5187               	movf	DisplayValue@Number& (0+255),w,b
  2437                           
  2438                           ; Switch size 1, requested type "space"
  2439                           ; Number of cases is 10, Range of values is 0 to 9
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte           31    16 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444  000288  0A00               	xorlw	0	; case 0
  2445  00028A  B4D8               	btfsc	status,2,c
  2446  00028C  D7E6               	goto	l1903
  2447  00028E  0A01               	xorlw	1	; case 1
  2448  000290  B4D8               	btfsc	status,2,c
  2449  000292  D7E5               	goto	l1905
  2450  000294  0A03               	xorlw	3	; case 2
  2451  000296  B4D8               	btfsc	status,2,c
  2452  000298  D7E4               	goto	l1907
  2453  00029A  0A01               	xorlw	1	; case 3
  2454  00029C  B4D8               	btfsc	status,2,c
  2455  00029E  D7E3               	goto	l1909
  2456  0002A0  0A07               	xorlw	7	; case 4
  2457  0002A2  B4D8               	btfsc	status,2,c
  2458  0002A4  D7E2               	goto	l1911
  2459  0002A6  0A01               	xorlw	1	; case 5
  2460  0002A8  B4D8               	btfsc	status,2,c
  2461  0002AA  D7E1               	goto	l1913
  2462  0002AC  0A03               	xorlw	3	; case 6
  2463  0002AE  B4D8               	btfsc	status,2,c
  2464  0002B0  D7E0               	goto	l1915
  2465  0002B2  0A01               	xorlw	1	; case 7
  2466  0002B4  B4D8               	btfsc	status,2,c
  2467  0002B6  D7DF               	goto	l1917
  2468  0002B8  0A0F               	xorlw	15	; case 8
  2469  0002BA  B4D8               	btfsc	status,2,c
  2470  0002BC  D7DE               	goto	l122
  2471  0002BE  0A01               	xorlw	1	; case 9
  2472  0002C0  B4D8               	btfsc	status,2,c
  2473  0002C2  D7DD               	goto	l1919
  2474  0002C4                     l1925:
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;segment.c: 123: dot=0;
  2478  0002C4  0E00               	movlw	0
  2479  0002C6  6E29               	movwf	_dot,c
  2480                           
  2481                           ;segment.c: 124: }
  2482  0002C8  D035               	goto	l137
  2483  0002CA                     l1927:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;segment.c: 131: PORTD = 0b00111111;
  2487  0002CA  0E3F               	movlw	63
  2488  0002CC  D011               	goto	L18
  2489  0002CE                     l1929:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;segment.c: 134: PORTD = 0b00000110;
  2493  0002CE  0E06               	movlw	6
  2494  0002D0  D00F               	goto	L18
  2495  0002D2                     l1931:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;segment.c: 137: PORTD = 0b01011011;
  2499  0002D2  0E5B               	movlw	91
  2500  0002D4  D00D               	goto	L18
  2501  0002D6                     l1933:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;segment.c: 140: PORTD = 0b01001111;
  2505  0002D6  0E4F               	movlw	79
  2506  0002D8  D00B               	goto	L18
  2507  0002DA                     l1935:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;segment.c: 143: PORTD = 0b01100110;
  2511  0002DA  0E66               	movlw	102
  2512  0002DC  D009               	goto	L18
  2513  0002DE                     l1937:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;segment.c: 146: PORTD = 0b01101101;
  2517  0002DE  0E6D               	movlw	109
  2518  0002E0  D007               	goto	L18
  2519  0002E2                     l1939:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;segment.c: 149: PORTD = 0b01111101;
  2523  0002E2  0E7D               	movlw	125
  2524  0002E4  D005               	goto	L18
  2525  0002E6                     l1941:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;segment.c: 152: PORTD = 0b00000111;
  2529  0002E6  0E07               	movlw	7
  2530  0002E8  D003               	goto	L18
  2531  0002EA                     l1943:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;segment.c: 155: PORTD = 0b01111111;
  2535  0002EA  0E7F               	movlw	127
  2536  0002EC  D001               	goto	L18
  2537  0002EE                     l1945:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;segment.c: 158: PORTD = 0b01101111;
  2541  0002EE  0E6F               	movlw	111
  2542  0002F0                     L18:
  2543  0002F0  6E83               	movwf	3971,c	;volatile
  2544                           
  2545                           ;segment.c: 159: break;
  2546  0002F2  D020               	goto	l137
  2547  0002F4                     l1949:
  2548                           
  2549                           ; BSR set to: 0
  2550  0002F4  0100               	movlb	0	; () banked
  2551  0002F6  5187               	movf	DisplayValue@Number& (0+255),w,b
  2552                           
  2553                           ; Switch size 1, requested type "space"
  2554                           ; Number of cases is 10, Range of values is 0 to 9
  2555                           ; switch strategies available:
  2556                           ; Name         Instructions Cycles
  2557                           ; simple_byte           31    16 (average)
  2558                           ;	Chosen strategy is simple_byte
  2559  0002F8  0A00               	xorlw	0	; case 0
  2560  0002FA  B4D8               	btfsc	status,2,c
  2561  0002FC  D7E6               	goto	l1927
  2562  0002FE  0A01               	xorlw	1	; case 1
  2563  000300  B4D8               	btfsc	status,2,c
  2564  000302  D7E5               	goto	l1929
  2565  000304  0A03               	xorlw	3	; case 2
  2566  000306  B4D8               	btfsc	status,2,c
  2567  000308  D7E4               	goto	l1931
  2568  00030A  0A01               	xorlw	1	; case 3
  2569  00030C  B4D8               	btfsc	status,2,c
  2570  00030E  D7E3               	goto	l1933
  2571  000310  0A07               	xorlw	7	; case 4
  2572  000312  B4D8               	btfsc	status,2,c
  2573  000314  D7E2               	goto	l1935
  2574  000316  0A01               	xorlw	1	; case 5
  2575  000318  B4D8               	btfsc	status,2,c
  2576  00031A  D7E1               	goto	l1937
  2577  00031C  0A03               	xorlw	3	; case 6
  2578  00031E  B4D8               	btfsc	status,2,c
  2579  000320  D7E0               	goto	l1939
  2580  000322  0A01               	xorlw	1	; case 7
  2581  000324  B4D8               	btfsc	status,2,c
  2582  000326  D7DF               	goto	l1941
  2583  000328  0A0F               	xorlw	15	; case 8
  2584  00032A  B4D8               	btfsc	status,2,c
  2585  00032C  D7DE               	goto	l1943
  2586  00032E  0A01               	xorlw	1	; case 9
  2587  000330  B4D8               	btfsc	status,2,c
  2588  000332  D7DD               	goto	l1945
  2589  000334                     l137:
  2590                           
  2591                           ; BSR set to: 0
  2592  000334  0012               	return	
  2593  000336                     __end_of_DisplayValue:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           postinc0	equ	0xFEE
  2600                           wreg	equ	0xFE8
  2601                           postdec1	equ	0xFE5
  2602                           fsr1l	equ	0xFE1
  2603                           indf2	equ	0xFDF
  2604                           fsr2h	equ	0xFDA
  2605                           fsr2l	equ	0xFD9
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _Delay_s_ *****************
  2609 ;; Defined at:
  2610 ;;		line 53 in file "delay.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;		None               void
  2617 ;; Registers used:
  2618 ;;		wreg, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2627 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    6
  2631 ;; This function calls:
  2632 ;;		_Delay10KTCYx
  2633 ;; This function is called by:
  2634 ;;		_Display
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text17
  2639  000BB0                     __ptext17:
  2640                           	opt stack 0
  2641  000BB0                     _Delay_s_:
  2642                           	opt stack 23
  2643                           
  2644                           ;delay.c: 55: Delay10KTCYx(2);
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;incstack = 0
  2648  000BB0  0E02               	movlw	2
  2649  000BB2  EC75  F005         	call	_Delay10KTCYx
  2650  000BB6  0012               	return	
  2651  000BB8                     __end_of_Delay_s_:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postdec1	equ	0xFE5
  2660                           fsr1l	equ	0xFE1
  2661                           indf2	equ	0xFDF
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666 ;; *************** function _Delay10KTCYx *****************
  2667 ;; Defined at:
  2668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d10ktcyx.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  unit            1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  unit            1    1[BANK0 ] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;		None               void
  2675 ;; Registers used:
  2676 ;;		wreg
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         0       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2684 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2685 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        2 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    5
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_Delay_s_
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text18
  2697  000AEA                     __ptext18:
  2698                           	opt stack 0
  2699  000AEA                     _Delay10KTCYx:
  2700                           	opt stack 23
  2701                           
  2702                           ;incstack = 0
  2703                           ;Delay10KTCYx@unit stored from wreg
  2704  000AEA  0100               	movlb	0	; () banked
  2705  000AEC  6F88               	movwf	Delay10KTCYx@unit& (0+255),b
  2706  000AEE                     l548:
  2707                           
  2708                           ; BSR set to: 0
  2709                           
  2710                           ; BSR set to: 0
  2711  000AEE  0E0D               	movlw	13
  2712  000AF0  0100               	movlb	0	; () banked
  2713  000AF2  6F87               	movwf	??_Delay10KTCYx& (0+255),b
  2714  000AF4  0EFC               	movlw	252
  2715  000AF6                     u1617:
  2716  000AF6  2EE8               	decfsz	wreg,f,c
  2717  000AF8  D7FE               	goto	u1617
  2718  000AFA  2F87               	decfsz	??_Delay10KTCYx& (0+255),f,b
  2719  000AFC  D7FC               	goto	u1617
  2720  000AFE  0100               	movlb	0	; () banked
  2721  000B00  2F88               	decfsz	Delay10KTCYx@unit& (0+255),f,b
  2722  000B02  D7F5               	goto	l548
  2723                           
  2724                           ; BSR set to: 0
  2725                           
  2726                           ; BSR set to: 0
  2727  000B04  0012               	return	
  2728  000B06                     __end_of_Delay10KTCYx:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           postinc0	equ	0xFEE
  2735                           wreg	equ	0xFE8
  2736                           postdec1	equ	0xFE5
  2737                           fsr1l	equ	0xFE1
  2738                           indf2	equ	0xFDF
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _Config_Interrupt *****************
  2744 ;; Defined at:
  2745 ;;		line 92 in file "timer.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;		None               void
  2752 ;; Registers used:
  2753 ;;		None
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2762 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2763 ;;Total ram usage:        0 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    5
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text19
  2774  000B90                     __ptext19:
  2775                           	opt stack 0
  2776  000B90                     _Config_Interrupt:
  2777                           	opt stack 25
  2778                           
  2779                           ;timer.c: 94: RCIF = 0;
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;incstack = 0
  2783  000B90  9A9E               	bcf	3998,5,c	;volatile
  2784                           
  2785                           ;timer.c: 95: RCIP = 0;
  2786  000B92  9A9F               	bcf	3999,5,c	;volatile
  2787                           
  2788                           ;timer.c: 96: RCIE = 1;
  2789  000B94  8A9D               	bsf	3997,5,c	;volatile
  2790                           
  2791                           ;timer.c: 97: PEIE = 1;
  2792  000B96  8CF2               	bsf	intcon,6,c	;volatile
  2793                           
  2794                           ;timer.c: 98: (INTCONbits.GIE = 1);
  2795  000B98  8EF2               	bsf	intcon,7,c	;volatile
  2796  000B9A  0012               	return	
  2797  000B9C                     __end_of_Config_Interrupt:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           intcon	equ	0xFF2
  2804                           postinc0	equ	0xFEE
  2805                           wreg	equ	0xFE8
  2806                           postdec1	equ	0xFE5
  2807                           fsr1l	equ	0xFE1
  2808                           indf2	equ	0xFDF
  2809                           fsr2h	equ	0xFDA
  2810                           fsr2l	equ	0xFD9
  2811                           status	equ	0xFD8
  2812                           
  2813 ;; *************** function _Blink *****************
  2814 ;; Defined at:
  2815 ;;		line 100 in file "timer.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		None
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2832 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2833 ;;Total ram usage:        0 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    5
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text20
  2844  000BC0                     __ptext20:
  2845                           	opt stack 0
  2846  000BC0                     _Blink:
  2847                           	opt stack 25
  2848                           
  2849                           ;timer.c: 102: LATBbits.LATB1= ~LATBbits.LATB1;
  2850                           
  2851                           ;incstack = 0
  2852  000BC0  728A               	btg	3978,1,c	;volatile
  2853  000BC2  0012               	return	
  2854  000BC4                     __end_of_Blink:
  2855                           	opt stack 0
  2856                           tblptru	equ	0xFF8
  2857                           tblptrh	equ	0xFF7
  2858                           tblptrl	equ	0xFF6
  2859                           tablat	equ	0xFF5
  2860                           intcon	equ	0xFF2
  2861                           postinc0	equ	0xFEE
  2862                           wreg	equ	0xFE8
  2863                           postdec1	equ	0xFE5
  2864                           fsr1l	equ	0xFE1
  2865                           indf2	equ	0xFDF
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function _Rx_isr *****************
  2871 ;; Defined at:
  2872 ;;		line 68 in file "main.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;		None               void
  2879 ;; Registers used:
  2880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2888 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2889 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2890 ;;Total ram usage:       14 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    4
  2893 ;; This function calls:
  2894 ;;		_Reset_TIME
  2895 ;;		i2_Read_BUF
  2896 ;;		i2_Set_TIME
  2897 ;;		i2_Switch_Relay
  2898 ;; This function is called by:
  2899 ;;		Interrupt level 2
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	intcode
  2904  000008                     __pintcode:
  2905                           	opt stack 0
  2906  000008                     _Rx_isr:
  2907                           	opt stack 22
  2908                           
  2909                           ;incstack = 0
  2910  000008  CFFA F049          	movff	pclath,??_Rx_isr
  2911  00000C  CFFB F04A          	movff	pclatu,??_Rx_isr+1
  2912  000010  CFE9 F04B          	movff	fsr0l,??_Rx_isr+2
  2913  000014  EDA2  F002         	call	int_func,f	;refresh shadow registers
  2914                           pclatu	equ	0xFFB
  2915                           pclath	equ	0xFFA
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           intcon	equ	0xFF2
  2921                           postinc0	equ	0xFEE
  2922                           fsr0l	equ	0xFE9
  2923                           wreg	equ	0xFE8
  2924                           postdec1	equ	0xFE5
  2925                           fsr1l	equ	0xFE1
  2926                           indf2	equ	0xFDF
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931                           	psect	intcode_body
  2932  000544                     __pintcode_body:
  2933                           	opt stack 22
  2934  000544                     int_func:
  2935                           	opt stack 22
  2936  000544  0006               	pop		; remove dummy address from shadow register refresh
  2937  000546  CFEA F04C          	movff	fsr0h,??_Rx_isr+3
  2938  00054A  CFE1 F04D          	movff	fsr1l,??_Rx_isr+4
  2939  00054E  CFE2 F04E          	movff	fsr1h,??_Rx_isr+5
  2940  000552  CFD9 F04F          	movff	fsr2l,??_Rx_isr+6
  2941  000556  CFDA F050          	movff	fsr2h,??_Rx_isr+7
  2942  00055A  CFF3 F051          	movff	prodl,??_Rx_isr+8
  2943  00055E  CFF4 F052          	movff	prodh,??_Rx_isr+9
  2944  000562  CFF6 F053          	movff	tblptrl,??_Rx_isr+10
  2945  000566  CFF7 F054          	movff	tblptrh,??_Rx_isr+11
  2946  00056A  CFF8 F055          	movff	tblptru,??_Rx_isr+12
  2947  00056E  CFF5 F056          	movff	tablat,??_Rx_isr+13
  2948                           
  2949                           ;main.c: 70: if(PIR1bits.RCIF == 1)
  2950  000572  AA9E               	btfss	3998,5,c	;volatile
  2951  000574  D00E               	goto	i2l46
  2952                           
  2953                           ;main.c: 71: {
  2954                           ;main.c: 72: Read_BUF();
  2955  000576  ECD3  F005         	call	i2_Read_BUF	;wreg free
  2956                           
  2957                           ;main.c: 73: Reset_TIME();
  2958  00057A  EC8F  F005         	call	_Reset_TIME	;wreg free
  2959                           
  2960                           ;main.c: 74: Switch_Relay(0);
  2961  00057E  0E00               	movlw	0
  2962  000580  EC66  F005         	call	i2_Switch_Relay
  2963                           
  2964                           ;main.c: 75: Set_TIME(str);
  2965  000584  0E00               	movlw	high _str
  2966  000586  6E48               	movwf	i2Set_TIME@str+1,c
  2967  000588  0E2A               	movlw	low _str
  2968  00058A  6E47               	movwf	i2Set_TIME@str,c
  2969  00058C  EC65  F003         	call	i2_Set_TIME	;wreg free
  2970                           
  2971                           ;main.c: 76: PIR1bits.RCIF = 0;
  2972  000590  9A9E               	bcf	3998,5,c	;volatile
  2973  000592                     i2l46:
  2974  000592  C056  FFF5         	movff	??_Rx_isr+13,tablat
  2975  000596  C055  FFF8         	movff	??_Rx_isr+12,tblptru
  2976  00059A  C054  FFF7         	movff	??_Rx_isr+11,tblptrh
  2977  00059E  C053  FFF6         	movff	??_Rx_isr+10,tblptrl
  2978  0005A2  C052  FFF4         	movff	??_Rx_isr+9,prodh
  2979  0005A6  C051  FFF3         	movff	??_Rx_isr+8,prodl
  2980  0005AA  C050  FFDA         	movff	??_Rx_isr+7,fsr2h
  2981  0005AE  C04F  FFD9         	movff	??_Rx_isr+6,fsr2l
  2982  0005B2  C04E  FFE2         	movff	??_Rx_isr+5,fsr1h
  2983  0005B6  C04D  FFE1         	movff	??_Rx_isr+4,fsr1l
  2984  0005BA  C04C  FFEA         	movff	??_Rx_isr+3,fsr0h
  2985  0005BE  C04B  FFE9         	movff	??_Rx_isr+2,fsr0l
  2986  0005C2  C04A  FFFB         	movff	??_Rx_isr+1,pclatu
  2987  0005C6  C049  FFFA         	movff	??_Rx_isr,pclath
  2988  0005CA  0011               	retfie		f
  2989  0005CC                     __end_of_Rx_isr:
  2990                           	opt stack 0
  2991                           pclatu	equ	0xFFB
  2992                           pclath	equ	0xFFA
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           prodh	equ	0xFF4
  2998                           prodl	equ	0xFF3
  2999                           intcon	equ	0xFF2
  3000                           postinc0	equ	0xFEE
  3001                           fsr0h	equ	0xFEA
  3002                           fsr0l	equ	0xFE9
  3003                           wreg	equ	0xFE8
  3004                           postdec1	equ	0xFE5
  3005                           fsr1h	equ	0xFE2
  3006                           fsr1l	equ	0xFE1
  3007                           indf2	equ	0xFDF
  3008                           fsr2h	equ	0xFDA
  3009                           fsr2l	equ	0xFD9
  3010                           status	equ	0xFD8
  3011                           
  3012 ;; *************** function i2_Set_TIME *****************
  3013 ;; Defined at:
  3014 ;;		line 79 in file "timer.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  str             2    7[COMRAM] PTR unsigned char 
  3017 ;;		 -> str(10), 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;		None               void
  3022 ;; Registers used:
  3023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3029 ;;      Params:         2       0       0       0       0       0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3032 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3033 ;;Total ram usage:        2 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    3
  3036 ;; This function calls:
  3037 ;;		i2_Format_DEC
  3038 ;;		i2_Read_BUF
  3039 ;;		i2_Read_string
  3040 ;;		i2_Write_string
  3041 ;; This function is called by:
  3042 ;;		_Rx_isr
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text22
  3047  0006CA                     __ptext22:
  3048                           	opt stack 0
  3049  0006CA                     i2_Set_TIME:
  3050                           	opt stack 22
  3051                           
  3052                           ;timer.c: 81: Write_string(str1);
  3053                           
  3054                           ;incstack = 0
  3055  0006CA  0100               	movlb	0	; () banked
  3056  0006CC  0E00               	movlw	high _str1
  3057  0006CE  6E43               	movwf	i2Write_string@c+1,c
  3058  0006D0  0100               	movlb	0	; () banked
  3059  0006D2  0E60               	movlw	low _str1
  3060  0006D4  6E42               	movwf	i2Write_string@c,c
  3061  0006D6  ECD4  F004         	call	i2_Write_string	;wreg free
  3062                           
  3063                           ;timer.c: 82: Read_BUF();
  3064  0006DA  ECD3  F005         	call	i2_Read_BUF	;wreg free
  3065                           
  3066                           ;timer.c: 83: Read_string(str, 4);
  3067  0006DE  C048  F043         	movff	i2Set_TIME@str+1,i2Read_string@buffer+1
  3068  0006E2  C047  F042         	movff	i2Set_TIME@str,i2Read_string@buffer
  3069  0006E6  0E04               	movlw	4
  3070  0006E8  6E44               	movwf	i2Read_string@len,c
  3071  0006EA  EC63  F004         	call	i2_Read_string	;wreg free
  3072                           
  3073                           ;timer.c: 84: Read_BUF();
  3074  0006EE  ECD3  F005         	call	i2_Read_BUF	;wreg free
  3075                           
  3076                           ;timer.c: 85: Format_DEC(str, array);
  3077  0006F2  C048  F041         	movff	i2Set_TIME@str+1,i2Format_DEC@p+1
  3078  0006F6  C047  F040         	movff	i2Set_TIME@str,i2Format_DEC@p
  3079  0006FA  0E00               	movlw	high _array
  3080  0006FC  6E43               	movwf	i2Format_DEC@q+1,c
  3081  0006FE  0E34               	movlw	low _array
  3082  000700  6E42               	movwf	i2Format_DEC@q,c
  3083  000702  ECA0  F003         	call	i2_Format_DEC	;wreg free
  3084                           
  3085                           ;timer.c: 86: Write_string(str2);
  3086  000706  0E00               	movlw	high _str2
  3087  000708  6E43               	movwf	i2Write_string@c+1,c
  3088  00070A  0E02               	movlw	low _str2
  3089  00070C  6E42               	movwf	i2Write_string@c,c
  3090  00070E  ECD4  F004         	call	i2_Write_string	;wreg free
  3091                           
  3092                           ;timer.c: 87: Read_BUF();
  3093  000712  ECD3  F005         	call	i2_Read_BUF	;wreg free
  3094                           
  3095                           ;timer.c: 88: Read_string(str, 4);
  3096  000716  C048  F043         	movff	i2Set_TIME@str+1,i2Read_string@buffer+1
  3097  00071A  C047  F042         	movff	i2Set_TIME@str,i2Read_string@buffer
  3098  00071E  0E04               	movlw	4
  3099  000720  6E44               	movwf	i2Read_string@len,c
  3100  000722  EC63  F004         	call	i2_Read_string	;wreg free
  3101                           
  3102                           ;timer.c: 89: Read_BUF();
  3103  000726  ECD3  F005         	call	i2_Read_BUF	;wreg free
  3104                           
  3105                           ;timer.c: 90: Format_DEC(str, array+4);
  3106  00072A  C048  F041         	movff	i2Set_TIME@str+1,i2Format_DEC@p+1
  3107  00072E  C047  F040         	movff	i2Set_TIME@str,i2Format_DEC@p
  3108  000732  0E00               	movlw	high (_array+4)
  3109  000734  6E43               	movwf	i2Format_DEC@q+1,c
  3110  000736  0E38               	movlw	low (_array+4)
  3111  000738  6E42               	movwf	i2Format_DEC@q,c
  3112  00073A  ECA0  F003         	call	i2_Format_DEC	;wreg free
  3113  00073E  0012               	return	
  3114  000740                     __end_ofi2_Set_TIME:
  3115                           	opt stack 0
  3116                           pclatu	equ	0xFFB
  3117                           pclath	equ	0xFFA
  3118                           tblptru	equ	0xFF8
  3119                           tblptrh	equ	0xFF7
  3120                           tblptrl	equ	0xFF6
  3121                           tablat	equ	0xFF5
  3122                           prodh	equ	0xFF4
  3123                           prodl	equ	0xFF3
  3124                           intcon	equ	0xFF2
  3125                           postinc0	equ	0xFEE
  3126                           fsr0h	equ	0xFEA
  3127                           fsr0l	equ	0xFE9
  3128                           wreg	equ	0xFE8
  3129                           postdec1	equ	0xFE5
  3130                           fsr1h	equ	0xFE2
  3131                           fsr1l	equ	0xFE1
  3132                           indf2	equ	0xFDF
  3133                           fsr2h	equ	0xFDA
  3134                           fsr2l	equ	0xFD9
  3135                           status	equ	0xFD8
  3136                           
  3137 ;; *************** function i2_Write_string *****************
  3138 ;; Defined at:
  3139 ;;		line 32 in file "uart.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  c               2    2[COMRAM] PTR unsigned char 
  3142 ;;		 -> str2(38), str1(39), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;		None               void
  3147 ;; Registers used:
  3148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3154 ;;      Params:         2       0       0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3157 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3158 ;;Total ram usage:        2 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    2
  3161 ;; This function calls:
  3162 ;;		i2_Write
  3163 ;;		i2_WriteUSART
  3164 ;; This function is called by:
  3165 ;;		i2_Set_TIME
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text23
  3170  0009A8                     __ptext23:
  3171                           	opt stack 0
  3172  0009A8                     i2_Write_string:
  3173                           	opt stack 22
  3174                           
  3175                           ;uart.c: 34: Write(0x0D);
  3176                           
  3177                           ;incstack = 0
  3178  0009A8  0E0D               	movlw	13
  3179  0009AA  ECC1  F005         	call	i2_Write
  3180                           
  3181                           ;uart.c: 35: while(*c != '\0')
  3182  0009AE  D00B               	goto	i2l1781
  3183  0009B0                     i2l1777:
  3184                           
  3185                           ;uart.c: 36: {
  3186                           ;uart.c: 37: WriteUSART(*c);
  3187  0009B0  C042  FFD9         	movff	i2Write_string@c,fsr2l
  3188  0009B4  C043  FFDA         	movff	i2Write_string@c+1,fsr2h
  3189  0009B8  50DF               	movf	indf2,w,c
  3190  0009BA  ECB8  F005         	call	i2_WriteUSART
  3191  0009BE                     i2l243:
  3192  0009BE  A2AC               	btfss	4012,1,c	;volatile
  3193  0009C0  D7FE               	goto	i2l243
  3194                           
  3195                           ;uart.c: 39: c++;
  3196  0009C2  4A42               	infsnz	i2Write_string@c,f,c
  3197  0009C4  2A43               	incf	i2Write_string@c+1,f,c
  3198  0009C6                     i2l1781:
  3199  0009C6  C042  FFD9         	movff	i2Write_string@c,fsr2l
  3200  0009CA  C043  FFDA         	movff	i2Write_string@c+1,fsr2h
  3201  0009CE  50DF               	movf	indf2,w,c
  3202  0009D0  B4D8               	btfsc	status,2,c
  3203  0009D2  0012               	return	
  3204  0009D4  D7ED               	goto	i2l1777
  3205  0009D6                     __end_ofi2_Write_string:
  3206                           	opt stack 0
  3207                           pclatu	equ	0xFFB
  3208                           pclath	equ	0xFFA
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           fsr0h	equ	0xFEA
  3218                           fsr0l	equ	0xFE9
  3219                           wreg	equ	0xFE8
  3220                           postdec1	equ	0xFE5
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           indf2	equ	0xFDF
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function i2_Read_string *****************
  3229 ;; Defined at:
  3230 ;;		line 51 in file "uart.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  3233 ;;		 -> str(10), 
  3234 ;;  len             1    4[COMRAM] unsigned char 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  Read_string     1    6[COMRAM] unsigned char 
  3237 ;;  Read_string     1    5[COMRAM] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;		None               void
  3240 ;; Registers used:
  3241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3247 ;;      Params:         3       0       0       0       0       0       0       0       0
  3248 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3250 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3251 ;;Total ram usage:        5 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    2
  3254 ;; This function calls:
  3255 ;;		i2_ReadUSART
  3256 ;;		i2_Write
  3257 ;;		i2_WriteUSART
  3258 ;; This function is called by:
  3259 ;;		i2_Set_TIME
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text24
  3264  0008C6                     __ptext24:
  3265                           	opt stack 0
  3266  0008C6                     i2_Read_string:
  3267                           	opt stack 22
  3268                           
  3269                           ;uart.c: 53: char i;
  3270                           ;uart.c: 54: unsigned char data;
  3271                           ;uart.c: 55: Write(0x0D);
  3272                           
  3273                           ;incstack = 0
  3274  0008C6  0E0D               	movlw	13
  3275  0008C8  ECC1  F005         	call	i2_Write
  3276                           
  3277                           ;uart.c: 56: Write('\n');
  3278  0008CC  0E0A               	movlw	10
  3279  0008CE  ECC1  F005         	call	i2_Write
  3280                           
  3281                           ;uart.c: 57: for(i=0;i<len;i++)
  3282  0008D2  0E00               	movlw	0
  3283  0008D4  6E45               	movwf	i2Read_string@i,c
  3284  0008D6  D013               	goto	i2l1795
  3285  0008D8                     i2l258:
  3286  0008D8  AA9E               	btfss	3998,5,c	;volatile
  3287  0008DA  D7FE               	goto	i2l258
  3288                           
  3289                           ;uart.c: 60: data = ReadUSART();
  3290  0008DC  EC57  F005         	call	i2_ReadUSART	;wreg free
  3291  0008E0  6E46               	movwf	i2Read_string@data,c
  3292                           
  3293                           ;uart.c: 61: *buffer = data;
  3294  0008E2  C042  FFD9         	movff	i2Read_string@buffer,fsr2l
  3295  0008E6  C043  FFDA         	movff	i2Read_string@buffer+1,fsr2h
  3296  0008EA  C046  FFDF         	movff	i2Read_string@data,indf2
  3297                           
  3298                           ;uart.c: 62: WriteUSART(data);
  3299  0008EE  5046               	movf	i2Read_string@data,w,c
  3300  0008F0  ECB8  F005         	call	i2_WriteUSART
  3301  0008F4                     i2l261:
  3302  0008F4  A2AC               	btfss	4012,1,c	;volatile
  3303  0008F6  D7FE               	goto	i2l261
  3304                           
  3305                           ;uart.c: 64: buffer++;
  3306  0008F8  4A42               	infsnz	i2Read_string@buffer,f,c
  3307  0008FA  2A43               	incf	i2Read_string@buffer+1,f,c
  3308  0008FC  2A45               	incf	i2Read_string@i,f,c
  3309  0008FE                     i2l1795:
  3310  0008FE  5044               	movf	i2Read_string@len,w,c
  3311  000900  5C45               	subwf	i2Read_string@i,w,c
  3312  000902  B0D8               	btfsc	status,0,c
  3313  000904  0012               	return	
  3314  000906  D7E8               	goto	i2l258
  3315  000908                     __end_ofi2_Read_string:
  3316                           	opt stack 0
  3317                           pclatu	equ	0xFFB
  3318                           pclath	equ	0xFFA
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           intcon	equ	0xFF2
  3326                           postinc0	equ	0xFEE
  3327                           fsr0h	equ	0xFEA
  3328                           fsr0l	equ	0xFE9
  3329                           wreg	equ	0xFE8
  3330                           postdec1	equ	0xFE5
  3331                           fsr1h	equ	0xFE2
  3332                           fsr1l	equ	0xFE1
  3333                           indf2	equ	0xFDF
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function i2_Write *****************
  3339 ;; Defined at:
  3340 ;;		line 26 in file "uart.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  data            1    wreg     unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  data            1    1[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;		None               void
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0
  3355 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3357 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3358 ;;Total ram usage:        1 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    1
  3361 ;; This function calls:
  3362 ;;		i2_WriteUSART
  3363 ;; This function is called by:
  3364 ;;		i2_Write_string
  3365 ;;		i2_Read_string
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text25
  3370  000B82                     __ptext25:
  3371                           	opt stack 0
  3372  000B82                     i2_Write:
  3373                           	opt stack 22
  3374                           
  3375                           ;incstack = 0
  3376                           ;i2Write@data stored from wreg
  3377  000B82  6E41               	movwf	i2Write@data,c
  3378                           
  3379                           ;uart.c: 28: WriteUSART(data);
  3380  000B84  5041               	movf	i2Write@data,w,c
  3381  000B86  ECB8  F005         	call	i2_WriteUSART
  3382  000B8A                     i2l235:
  3383  000B8A  B2AC               	btfsc	4012,1,c	;volatile
  3384  000B8C  0012               	return	
  3385  000B8E  D7FD               	goto	i2l235
  3386  000B90                     __end_ofi2_Write:
  3387                           	opt stack 0
  3388                           pclatu	equ	0xFFB
  3389                           pclath	equ	0xFFA
  3390                           tblptru	equ	0xFF8
  3391                           tblptrh	equ	0xFF7
  3392                           tblptrl	equ	0xFF6
  3393                           tablat	equ	0xFF5
  3394                           prodh	equ	0xFF4
  3395                           prodl	equ	0xFF3
  3396                           intcon	equ	0xFF2
  3397                           postinc0	equ	0xFEE
  3398                           fsr0h	equ	0xFEA
  3399                           fsr0l	equ	0xFE9
  3400                           wreg	equ	0xFE8
  3401                           postdec1	equ	0xFE5
  3402                           fsr1h	equ	0xFE2
  3403                           fsr1l	equ	0xFE1
  3404                           indf2	equ	0xFDF
  3405                           fsr2h	equ	0xFDA
  3406                           fsr2l	equ	0xFD9
  3407                           status	equ	0xFD8
  3408                           
  3409 ;; *************** function i2_WriteUSART *****************
  3410 ;; Defined at:
  3411 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  data            1    wreg     unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  data            1    0[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;		None               void
  3418 ;; Registers used:
  3419 ;;		wreg
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0
  3426 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3428 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3429 ;;Total ram usage:        1 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		i2_Write
  3435 ;;		i2_Write_string
  3436 ;;		i2_Read_string
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text26
  3441  000B70                     __ptext26:
  3442                           	opt stack 0
  3443  000B70                     i2_WriteUSART:
  3444                           	opt stack 23
  3445                           
  3446                           ;incstack = 0
  3447                           ;i2WriteUSART@data stored from wreg
  3448  000B70  6E40               	movwf	i2WriteUSART@data,c
  3449  000B72  ACAC               	btfss	4012,6,c	;volatile
  3450  000B74  D003               	goto	i2l1623
  3451  000B76  90AC               	bcf	4012,0,c	;volatile
  3452  000B78  B228               	btfsc	_USART_Status,1,c
  3453  000B7A  80AC               	bsf	4012,0,c	;volatile
  3454  000B7C                     i2l1623:
  3455  000B7C  C040  FFAD         	movff	i2WriteUSART@data,4013	;volatile
  3456  000B80  0012               	return	
  3457  000B82                     __end_ofi2_WriteUSART:
  3458                           	opt stack 0
  3459                           pclatu	equ	0xFFB
  3460                           pclath	equ	0xFFA
  3461                           tblptru	equ	0xFF8
  3462                           tblptrh	equ	0xFF7
  3463                           tblptrl	equ	0xFF6
  3464                           tablat	equ	0xFF5
  3465                           prodh	equ	0xFF4
  3466                           prodl	equ	0xFF3
  3467                           intcon	equ	0xFF2
  3468                           postinc0	equ	0xFEE
  3469                           fsr0h	equ	0xFEA
  3470                           fsr0l	equ	0xFE9
  3471                           wreg	equ	0xFE8
  3472                           postdec1	equ	0xFE5
  3473                           fsr1h	equ	0xFE2
  3474                           fsr1l	equ	0xFE1
  3475                           indf2	equ	0xFDF
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function i2_ReadUSART *****************
  3481 ;; Defined at:
  3482 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  ReadUSART       1    0[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      unsigned char 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0
  3497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3499 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		i2_Read_string
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text27
  3510  000AAE                     __ptext27:
  3511                           	opt stack 0
  3512  000AAE                     i2_ReadUSART:
  3513                           	opt stack 23
  3514                           
  3515                           ;incstack = 0
  3516  000AAE  0EF2               	movlw	242
  3517  000AB0  1628               	andwf	_USART_Status,f,c
  3518  000AB2  ACAB               	btfss	4011,6,c	;volatile
  3519  000AB4  D003               	goto	i2l307
  3520  000AB6  9028               	bcf	_USART_Status,0,c
  3521  000AB8  B0AB               	btfsc	4011,0,c	;volatile
  3522  000ABA  8028               	bsf	_USART_Status,0,c
  3523  000ABC                     i2l307:
  3524  000ABC  B4AB               	btfsc	4011,2,c	;volatile
  3525  000ABE  8428               	bsf	_USART_Status,2,c
  3526  000AC0  B2AB               	btfsc	4011,1,c	;volatile
  3527  000AC2  8628               	bsf	_USART_Status,3,c
  3528  000AC4  CFAE F040          	movff	4014,i2ReadUSART@data	;volatile
  3529  000AC8  5040               	movf	i2ReadUSART@data,w,c
  3530  000ACA  0012               	return	
  3531  000ACC                     __end_ofi2_ReadUSART:
  3532                           	opt stack 0
  3533                           pclatu	equ	0xFFB
  3534                           pclath	equ	0xFFA
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           prodh	equ	0xFF4
  3540                           prodl	equ	0xFF3
  3541                           intcon	equ	0xFF2
  3542                           postinc0	equ	0xFEE
  3543                           fsr0h	equ	0xFEA
  3544                           fsr0l	equ	0xFE9
  3545                           wreg	equ	0xFE8
  3546                           postdec1	equ	0xFE5
  3547                           fsr1h	equ	0xFE2
  3548                           fsr1l	equ	0xFE1
  3549                           indf2	equ	0xFDF
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8
  3553                           
  3554 ;; *************** function i2_Read_BUF *****************
  3555 ;; Defined at:
  3556 ;;		line 18 in file "timer.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;		None
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  Read_BUF        1    0[COMRAM] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;		None               void
  3563 ;; Registers used:
  3564 ;;		None
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3570 ;;      Params:         0       0       0       0       0       0       0       0       0
  3571 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3573 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3574 ;;Total ram usage:        1 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_Rx_isr
  3580 ;;		i2_Set_TIME
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text28
  3585  000BA6                     __ptext28:
  3586                           	opt stack 0
  3587  000BA6                     i2_Read_BUF:
  3588                           	opt stack 24
  3589                           
  3590                           ;timer.c: 20: unsigned char c;
  3591                           ;timer.c: 21: c = RCREG;
  3592                           
  3593                           ;incstack = 0
  3594  000BA6  CFAE F040          	movff	4014,i2Read_BUF@c	;volatile
  3595                           
  3596                           ;timer.c: 22: c = RCREG;
  3597  000BAA  CFAE F040          	movff	4014,i2Read_BUF@c	;volatile
  3598  000BAE  0012               	return	
  3599  000BB0                     __end_ofi2_Read_BUF:
  3600                           	opt stack 0
  3601                           pclatu	equ	0xFFB
  3602                           pclath	equ	0xFFA
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           fsr0h	equ	0xFEA
  3612                           fsr0l	equ	0xFE9
  3613                           wreg	equ	0xFE8
  3614                           postdec1	equ	0xFE5
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           indf2	equ	0xFDF
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function i2_Format_DEC *****************
  3623 ;; Defined at:
  3624 ;;		line 25 in file "timer.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  p               2    0[COMRAM] PTR unsigned char 
  3627 ;;		 -> str(10), 
  3628 ;;  q               2    2[COMRAM] PTR unsigned char 
  3629 ;;		 -> array(8), 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;		None               void
  3634 ;; Registers used:
  3635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3641 ;;      Params:         4       0       0       0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3644 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3645 ;;Total ram usage:        4 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		i2_Set_TIME
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text29
  3655  000740                     __ptext29:
  3656                           	opt stack 0
  3657  000740                     i2_Format_DEC:
  3658                           	opt stack 24
  3659                           
  3660                           ;timer.c: 27: *q = (*p-'0');
  3661                           
  3662                           ;incstack = 0
  3663  000740  C040  FFD9         	movff	i2Format_DEC@p,fsr2l
  3664  000744  C041  FFDA         	movff	i2Format_DEC@p+1,fsr2h
  3665  000748  50DF               	movf	indf2,w,c
  3666  00074A  0FD0               	addlw	208
  3667  00074C  C042  FFD9         	movff	i2Format_DEC@q,fsr2l
  3668  000750  C043  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  3669  000754  6EDF               	movwf	indf2,c
  3670                           
  3671                           ;timer.c: 28: p++;
  3672  000756  4A40               	infsnz	i2Format_DEC@p,f,c
  3673  000758  2A41               	incf	i2Format_DEC@p+1,f,c
  3674                           
  3675                           ;timer.c: 29: q++;
  3676  00075A  4A42               	infsnz	i2Format_DEC@q,f,c
  3677  00075C  2A43               	incf	i2Format_DEC@q+1,f,c
  3678                           
  3679                           ;timer.c: 30: *q = (*p-'0');
  3680  00075E  C040  FFD9         	movff	i2Format_DEC@p,fsr2l
  3681  000762  C041  FFDA         	movff	i2Format_DEC@p+1,fsr2h
  3682  000766  50DF               	movf	indf2,w,c
  3683  000768  0FD0               	addlw	208
  3684  00076A  C042  FFD9         	movff	i2Format_DEC@q,fsr2l
  3685  00076E  C043  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  3686  000772  6EDF               	movwf	indf2,c
  3687                           
  3688                           ;timer.c: 31: p++;
  3689  000774  4A40               	infsnz	i2Format_DEC@p,f,c
  3690  000776  2A41               	incf	i2Format_DEC@p+1,f,c
  3691                           
  3692                           ;timer.c: 32: q++;
  3693  000778  4A42               	infsnz	i2Format_DEC@q,f,c
  3694  00077A  2A43               	incf	i2Format_DEC@q+1,f,c
  3695                           
  3696                           ;timer.c: 33: *q = (*p-'0');
  3697  00077C  C040  FFD9         	movff	i2Format_DEC@p,fsr2l
  3698  000780  C041  FFDA         	movff	i2Format_DEC@p+1,fsr2h
  3699  000784  50DF               	movf	indf2,w,c
  3700  000786  0FD0               	addlw	208
  3701  000788  C042  FFD9         	movff	i2Format_DEC@q,fsr2l
  3702  00078C  C043  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  3703  000790  6EDF               	movwf	indf2,c
  3704                           
  3705                           ;timer.c: 34: p++;
  3706  000792  4A40               	infsnz	i2Format_DEC@p,f,c
  3707  000794  2A41               	incf	i2Format_DEC@p+1,f,c
  3708                           
  3709                           ;timer.c: 35: q++;
  3710  000796  4A42               	infsnz	i2Format_DEC@q,f,c
  3711  000798  2A43               	incf	i2Format_DEC@q+1,f,c
  3712                           
  3713                           ;timer.c: 36: *q = (*p-'0');
  3714  00079A  C040  FFD9         	movff	i2Format_DEC@p,fsr2l
  3715  00079E  C041  FFDA         	movff	i2Format_DEC@p+1,fsr2h
  3716  0007A2  50DF               	movf	indf2,w,c
  3717  0007A4  0FD0               	addlw	208
  3718  0007A6  C042  FFD9         	movff	i2Format_DEC@q,fsr2l
  3719  0007AA  C043  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  3720  0007AE  6EDF               	movwf	indf2,c
  3721  0007B0  0012               	return	
  3722  0007B2                     __end_ofi2_Format_DEC:
  3723                           	opt stack 0
  3724                           pclatu	equ	0xFFB
  3725                           pclath	equ	0xFFA
  3726                           tblptru	equ	0xFF8
  3727                           tblptrh	equ	0xFF7
  3728                           tblptrl	equ	0xFF6
  3729                           tablat	equ	0xFF5
  3730                           prodh	equ	0xFF4
  3731                           prodl	equ	0xFF3
  3732                           intcon	equ	0xFF2
  3733                           postinc0	equ	0xFEE
  3734                           fsr0h	equ	0xFEA
  3735                           fsr0l	equ	0xFE9
  3736                           wreg	equ	0xFE8
  3737                           postdec1	equ	0xFE5
  3738                           fsr1h	equ	0xFE2
  3739                           fsr1l	equ	0xFE1
  3740                           indf2	equ	0xFDF
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _Reset_TIME *****************
  3746 ;; Defined at:
  3747 ;;		line 74 in file "timer.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    3
  3768 ;; This function calls:
  3769 ;;		i2_Display
  3770 ;; This function is called by:
  3771 ;;		_Rx_isr
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text30
  3776  000B1E                     __ptext30:
  3777                           	opt stack 0
  3778  000B1E                     _Reset_TIME:
  3779                           	opt stack 22
  3780                           
  3781                           ;timer.c: 76: Num1=0;Num2=0; Num3=0; Num4=0;
  3782                           
  3783                           ;incstack = 0
  3784  000B1E  0E00               	movlw	0
  3785  000B20  6E3C               	movwf	_Num1,c
  3786  000B22  0E00               	movlw	0
  3787  000B24  6E3D               	movwf	_Num2,c
  3788  000B26  0E00               	movlw	0
  3789  000B28  6E3E               	movwf	_Num3,c
  3790  000B2A  0E00               	movlw	0
  3791  000B2C  6E3F               	movwf	_Num4,c
  3792                           
  3793                           ;timer.c: 77: Display();
  3794  000B2E  ECAA  F000         	call	i2_Display	;wreg free
  3795  000B32  0012               	return	
  3796  000B34                     __end_of_Reset_TIME:
  3797                           	opt stack 0
  3798                           pclatu	equ	0xFFB
  3799                           pclath	equ	0xFFA
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           prodh	equ	0xFF4
  3805                           prodl	equ	0xFF3
  3806                           intcon	equ	0xFF2
  3807                           postinc0	equ	0xFEE
  3808                           fsr0h	equ	0xFEA
  3809                           fsr0l	equ	0xFE9
  3810                           wreg	equ	0xFE8
  3811                           postdec1	equ	0xFE5
  3812                           fsr1h	equ	0xFE2
  3813                           fsr1l	equ	0xFE1
  3814                           indf2	equ	0xFDF
  3815                           fsr2h	equ	0xFDA
  3816                           fsr2l	equ	0xFD9
  3817                           status	equ	0xFD8
  3818                           
  3819 ;; *************** function i2_Display *****************
  3820 ;; Defined at:
  3821 ;;		line 49 in file "timer.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  Display         2    5[COMRAM] PTR unsigned char 
  3826 ;;		 -> array(8), 
  3827 ;;  Display         2    3[COMRAM] int 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;		None               void
  3830 ;; Registers used:
  3831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0
  3838 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3840 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3841 ;;Total ram usage:        4 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		i2_Delay_s_
  3846 ;;		i2_NumDisplay
  3847 ;;		i2_Switch_Relay
  3848 ;; This function is called by:
  3849 ;;		_Reset_TIME
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text31
  3854  000154                     __ptext31:
  3855                           	opt stack 0
  3856  000154                     i2_Display:
  3857                           	opt stack 22
  3858                           
  3859                           ;timer.c: 51: unsigned char *ptr = array;
  3860                           
  3861                           ;incstack = 0
  3862  000154  0E00               	movlw	high _array
  3863  000156  6E46               	movwf	i2Display@ptr+1,c
  3864  000158  0E34               	movlw	low _array
  3865  00015A  6E45               	movwf	i2Display@ptr,c
  3866                           
  3867                           ;timer.c: 52: if((Num4==*ptr)&&(Num3== *(ptr+1))&&(Num2==*(ptr+2))&&(Num1==*(ptr+3)))
  3868  00015C  503F               	movf	_Num4,w,c
  3869  00015E  C045  FFD9         	movff	i2Display@ptr,fsr2l
  3870  000162  C046  FFDA         	movff	i2Display@ptr+1,fsr2h
  3871  000166  62DF               	cpfseq	indf2,c
  3872  000168  D01F               	goto	i2l1749
  3873  00016A  EE20 F001          	lfsr	2,1
  3874  00016E  5045               	movf	i2Display@ptr,w,c
  3875  000170  26D9               	addwf	fsr2l,f,c
  3876  000172  5046               	movf	i2Display@ptr+1,w,c
  3877  000174  22DA               	addwfc	fsr2h,f,c
  3878  000176  503E               	movf	_Num3,w,c
  3879  000178  62DF               	cpfseq	indf2,c
  3880  00017A  D016               	goto	i2l1749
  3881  00017C  EE20 F002          	lfsr	2,2
  3882  000180  5045               	movf	i2Display@ptr,w,c
  3883  000182  26D9               	addwf	fsr2l,f,c
  3884  000184  5046               	movf	i2Display@ptr+1,w,c
  3885  000186  22DA               	addwfc	fsr2h,f,c
  3886  000188  503D               	movf	_Num2,w,c
  3887  00018A  62DF               	cpfseq	indf2,c
  3888  00018C  D00D               	goto	i2l1749
  3889  00018E  EE20 F003          	lfsr	2,3
  3890  000192  5045               	movf	i2Display@ptr,w,c
  3891  000194  26D9               	addwf	fsr2l,f,c
  3892  000196  5046               	movf	i2Display@ptr+1,w,c
  3893  000198  22DA               	addwfc	fsr2h,f,c
  3894  00019A  503C               	movf	_Num1,w,c
  3895  00019C  62DF               	cpfseq	indf2,c
  3896  00019E  D004               	goto	i2l1749
  3897                           
  3898                           ;timer.c: 53: {
  3899                           ;timer.c: 54: Switch_Relay(1);
  3900  0001A0  0E01               	movlw	1
  3901  0001A2  EC66  F005         	call	i2_Switch_Relay
  3902                           
  3903                           ;timer.c: 55: }
  3904  0001A6  D027               	goto	i2l1759
  3905  0001A8                     i2l1749:
  3906                           
  3907                           ;timer.c: 56: else if((Num4==*(ptr+4))&&(Num3==*(ptr+5))&&(Num2==*(ptr+6))&&(Num1==*(ptr
      +                          +7)))
  3908  0001A8  EE20 F004          	lfsr	2,4
  3909  0001AC  5045               	movf	i2Display@ptr,w,c
  3910  0001AE  26D9               	addwf	fsr2l,f,c
  3911  0001B0  5046               	movf	i2Display@ptr+1,w,c
  3912  0001B2  22DA               	addwfc	fsr2h,f,c
  3913  0001B4  503F               	movf	_Num4,w,c
  3914  0001B6  62DF               	cpfseq	indf2,c
  3915  0001B8  D01E               	goto	i2l1759
  3916  0001BA  EE20 F005          	lfsr	2,5
  3917  0001BE  5045               	movf	i2Display@ptr,w,c
  3918  0001C0  26D9               	addwf	fsr2l,f,c
  3919  0001C2  5046               	movf	i2Display@ptr+1,w,c
  3920  0001C4  22DA               	addwfc	fsr2h,f,c
  3921  0001C6  503E               	movf	_Num3,w,c
  3922  0001C8  62DF               	cpfseq	indf2,c
  3923  0001CA  D015               	goto	i2l1759
  3924  0001CC  EE20 F006          	lfsr	2,6
  3925  0001D0  5045               	movf	i2Display@ptr,w,c
  3926  0001D2  26D9               	addwf	fsr2l,f,c
  3927  0001D4  5046               	movf	i2Display@ptr+1,w,c
  3928  0001D6  22DA               	addwfc	fsr2h,f,c
  3929  0001D8  503D               	movf	_Num2,w,c
  3930  0001DA  62DF               	cpfseq	indf2,c
  3931  0001DC  D00C               	goto	i2l1759
  3932  0001DE  EE20 F007          	lfsr	2,7
  3933  0001E2  5045               	movf	i2Display@ptr,w,c
  3934  0001E4  26D9               	addwf	fsr2l,f,c
  3935  0001E6  5046               	movf	i2Display@ptr+1,w,c
  3936  0001E8  22DA               	addwfc	fsr2h,f,c
  3937  0001EA  503C               	movf	_Num1,w,c
  3938  0001EC  62DF               	cpfseq	indf2,c
  3939  0001EE  D003               	goto	i2l1759
  3940                           
  3941                           ;timer.c: 57: {
  3942                           ;timer.c: 58: Switch_Relay(0);
  3943  0001F0  0E00               	movlw	0
  3944  0001F2  EC66  F005         	call	i2_Switch_Relay
  3945  0001F6                     i2l1759:
  3946                           
  3947                           ;timer.c: 59: }
  3948                           ;timer.c: 60: int x = 0;
  3949  0001F6  0E00               	movlw	0
  3950  0001F8  6E44               	movwf	i2Display@x+1,c
  3951  0001FA  0E00               	movlw	0
  3952  0001FC  6E43               	movwf	i2Display@x,c
  3953                           
  3954                           ;timer.c: 61: while(x<63)
  3955  0001FE  D01E               	goto	i2l1773
  3956  000200                     i2l1761:
  3957                           
  3958                           ;timer.c: 62: {
  3959                           ;timer.c: 63: NumDisplay(Num1, 1);
  3960  000200  0E01               	movlw	1
  3961  000202  6E41               	movwf	i2NumDisplay@Segment,c
  3962  000204  503C               	movf	_Num1,w,c
  3963  000206  EC47  F005         	call	i2_NumDisplay
  3964                           
  3965                           ;timer.c: 64: Delay_s_();
  3966  00020A  ECDC  F005         	call	i2_Delay_s_	;wreg free
  3967                           
  3968                           ;timer.c: 65: NumDisplay(Num2, 2);
  3969  00020E  0E02               	movlw	2
  3970  000210  6E41               	movwf	i2NumDisplay@Segment,c
  3971  000212  503D               	movf	_Num2,w,c
  3972  000214  EC47  F005         	call	i2_NumDisplay
  3973                           
  3974                           ;timer.c: 66: Delay_s_();
  3975  000218  ECDC  F005         	call	i2_Delay_s_	;wreg free
  3976                           
  3977                           ;timer.c: 67: NumDisplay(Num3, 3);
  3978  00021C  0E03               	movlw	3
  3979  00021E  6E41               	movwf	i2NumDisplay@Segment,c
  3980  000220  503E               	movf	_Num3,w,c
  3981  000222  EC47  F005         	call	i2_NumDisplay
  3982                           
  3983                           ;timer.c: 68: Delay_s_();
  3984  000226  ECDC  F005         	call	i2_Delay_s_	;wreg free
  3985                           
  3986                           ;timer.c: 69: NumDisplay(Num4, 4);
  3987  00022A  0E04               	movlw	4
  3988  00022C  6E41               	movwf	i2NumDisplay@Segment,c
  3989  00022E  503F               	movf	_Num4,w,c
  3990  000230  EC47  F005         	call	i2_NumDisplay
  3991                           
  3992                           ;timer.c: 70: Delay_s_();
  3993  000234  ECDC  F005         	call	i2_Delay_s_	;wreg free
  3994                           
  3995                           ;timer.c: 71: x++;
  3996  000238  4A43               	infsnz	i2Display@x,f,c
  3997  00023A  2A44               	incf	i2Display@x+1,f,c
  3998  00023C                     i2l1773:
  3999  00023C  5044               	movf	i2Display@x+1,w,c
  4000  00023E  0A80               	xorlw	128
  4001  000240  0F80               	addlw	-128
  4002  000242  0E3F               	movlw	63
  4003  000244  B4D8               	btfsc	status,2,c
  4004  000246  5C43               	subwf	i2Display@x,w,c
  4005  000248  B0D8               	btfsc	status,0,c
  4006  00024A  0012               	return	
  4007  00024C  D7D9               	goto	i2l1761
  4008  00024E                     __end_ofi2_Display:
  4009                           	opt stack 0
  4010                           pclatu	equ	0xFFB
  4011                           pclath	equ	0xFFA
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           prodh	equ	0xFF4
  4017                           prodl	equ	0xFF3
  4018                           intcon	equ	0xFF2
  4019                           postinc0	equ	0xFEE
  4020                           fsr0h	equ	0xFEA
  4021                           fsr0l	equ	0xFE9
  4022                           wreg	equ	0xFE8
  4023                           postdec1	equ	0xFE5
  4024                           fsr1h	equ	0xFE2
  4025                           fsr1l	equ	0xFE1
  4026                           indf2	equ	0xFDF
  4027                           fsr2h	equ	0xFDA
  4028                           fsr2l	equ	0xFD9
  4029                           status	equ	0xFD8
  4030                           
  4031 ;; *************** function i2_Switch_Relay *****************
  4032 ;; Defined at:
  4033 ;;		line 38 in file "timer.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  sw              1    wreg     unsigned char 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  sw              1    0[COMRAM] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;		None               void
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4047 ;;      Params:         0       0       0       0       0       0       0       0       0
  4048 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4050 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4051 ;;Total ram usage:        1 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_Rx_isr
  4057 ;;		i2_Display
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text32
  4062  000ACC                     __ptext32:
  4063                           	opt stack 0
  4064  000ACC                     i2_Switch_Relay:
  4065                           	opt stack 25
  4066                           
  4067                           ;incstack = 0
  4068                           ;i2Switch_Relay@sw stored from wreg
  4069  000ACC  6E40               	movwf	i2Switch_Relay@sw,c
  4070                           
  4071                           ;timer.c: 40: switch(sw)
  4072  000ACE  D005               	goto	i2l1663
  4073  000AD0                     i2l195:
  4074  000AD0  808A               	bsf	3978,0,c	;volatile
  4075                           
  4076                           ;timer.c: 43: break;
  4077  000AD2  D00A               	goto	i2l198
  4078  000AD4                     i2l197:
  4079  000AD4  908A               	bcf	3978,0,c	;volatile
  4080                           
  4081                           ;timer.c: 45: LATBbits.LATB1 = 0;
  4082  000AD6  928A               	bcf	3978,1,c	;volatile
  4083                           
  4084                           ;timer.c: 46: break;
  4085  000AD8  D007               	goto	i2l198
  4086  000ADA                     i2l1663:
  4087  000ADA  5040               	movf	i2Switch_Relay@sw,w,c
  4088                           
  4089                           ; Switch size 1, requested type "space"
  4090                           ; Number of cases is 2, Range of values is 0 to 1
  4091                           ; switch strategies available:
  4092                           ; Name         Instructions Cycles
  4093                           ; simple_byte            7     4 (average)
  4094                           ;	Chosen strategy is simple_byte
  4095  000ADC  0A00               	xorlw	0	; case 0
  4096  000ADE  B4D8               	btfsc	status,2,c
  4097  000AE0  D7F9               	goto	i2l197
  4098  000AE2  0A01               	xorlw	1	; case 1
  4099  000AE4  B4D8               	btfsc	status,2,c
  4100  000AE6  D7F4               	goto	i2l195
  4101  000AE8                     i2l198:
  4102  000AE8  0012               	return	
  4103  000AEA                     __end_ofi2_Switch_Relay:
  4104                           	opt stack 0
  4105                           pclatu	equ	0xFFB
  4106                           pclath	equ	0xFFA
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           postinc0	equ	0xFEE
  4115                           fsr0h	equ	0xFEA
  4116                           fsr0l	equ	0xFE9
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           fsr2h	equ	0xFDA
  4123                           fsr2l	equ	0xFD9
  4124                           status	equ	0xFD8
  4125                           
  4126 ;; *************** function i2_NumDisplay *****************
  4127 ;; Defined at:
  4128 ;;		line 166 in file "segment.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  Number          1    wreg     unsigned char 
  4131 ;;  Segment         1    1[COMRAM] unsigned char 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  Number          1    2[COMRAM] unsigned char 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;		None               void
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4143 ;;      Params:         1       0       0       0       0       0       0       0       0
  4144 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4146 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4147 ;;Total ram usage:        2 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    1
  4150 ;; This function calls:
  4151 ;;		i2_DisplayValue
  4152 ;;		i2_Segment_init
  4153 ;; This function is called by:
  4154 ;;		i2_Display
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text33
  4159  000A8E                     __ptext33:
  4160                           	opt stack 0
  4161  000A8E                     i2_NumDisplay:
  4162                           	opt stack 22
  4163                           
  4164                           ;incstack = 0
  4165                           ;i2NumDisplay@Number stored from wreg
  4166  000A8E  6E42               	movwf	i2NumDisplay@Number,c
  4167                           
  4168                           ;segment.c: 168: Segment_init(Segment);
  4169  000A90  5041               	movf	i2NumDisplay@Segment,w,c
  4170  000A92  ECA2  F004         	call	i2_Segment_init
  4171                           
  4172                           ;segment.c: 169: if(Segment == 3 )
  4173  000A96  5041               	movf	i2NumDisplay@Segment,w,c
  4174  000A98  0A03               	xorlw	3
  4175  000A9A  A4D8               	btfss	status,2,c
  4176  000A9C  D002               	goto	i2l1655
  4177                           
  4178                           ;segment.c: 170: dot = 1;
  4179  000A9E  0E01               	movlw	1
  4180  000AA0  D001               	goto	L19
  4181  000AA2                     i2l1655:
  4182                           
  4183                           ;segment.c: 171: else
  4184                           ;segment.c: 172: dot = 0;
  4185  000AA2  0E00               	movlw	0
  4186  000AA4                     L19:
  4187  000AA4  6E29               	movwf	_dot,c
  4188                           
  4189                           ;segment.c: 173: DisplayValue(Number);
  4190  000AA6  5042               	movf	i2NumDisplay@Number,w,c
  4191  000AA8  EC9B  F001         	call	i2_DisplayValue
  4192  000AAC  0012               	return	
  4193  000AAE                     __end_ofi2_NumDisplay:
  4194                           	opt stack 0
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           tblptru	equ	0xFF8
  4198                           tblptrh	equ	0xFF7
  4199                           tblptrl	equ	0xFF6
  4200                           tablat	equ	0xFF5
  4201                           prodh	equ	0xFF4
  4202                           prodl	equ	0xFF3
  4203                           intcon	equ	0xFF2
  4204                           postinc0	equ	0xFEE
  4205                           fsr0h	equ	0xFEA
  4206                           fsr0l	equ	0xFE9
  4207                           wreg	equ	0xFE8
  4208                           postdec1	equ	0xFE5
  4209                           fsr1h	equ	0xFE2
  4210                           fsr1l	equ	0xFE1
  4211                           indf2	equ	0xFDF
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function i2_Segment_init *****************
  4217 ;; Defined at:
  4218 ;;		line 63 in file "segment.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  Segment         1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  Segment         1    0[COMRAM] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;		None               void
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0
  4233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4235 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		i2_NumDisplay
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text34
  4246  000944                     __ptext34:
  4247                           	opt stack 0
  4248  000944                     i2_Segment_init:
  4249                           	opt stack 22
  4250                           
  4251                           ;incstack = 0
  4252                           ;i2Segment_init@Segment stored from wreg
  4253  000944  6E40               	movwf	i2Segment_init@Segment,c
  4254                           
  4255                           ;segment.c: 68: TRISD = 0x00;
  4256  000946  0E00               	movlw	0
  4257  000948  6E95               	movwf	3989,c	;volatile
  4258                           
  4259                           ;segment.c: 69: TRISAbits.TRISA0 = 0;
  4260  00094A  9092               	bcf	3986,0,c	;volatile
  4261                           
  4262                           ;segment.c: 70: TRISAbits.TRISA1 = 0;
  4263  00094C  9292               	bcf	3986,1,c	;volatile
  4264                           
  4265                           ;segment.c: 71: TRISAbits.TRISA2 = 0;
  4266  00094E  9492               	bcf	3986,2,c	;volatile
  4267                           
  4268                           ;segment.c: 72: TRISAbits.TRISA3 = 0;
  4269  000950  9692               	bcf	3986,3,c	;volatile
  4270                           
  4271                           ;segment.c: 75: if(Segment == 1)
  4272  000952  0440               	decf	i2Segment_init@Segment,w,c
  4273  000954  A4D8               	btfss	status,2,c
  4274  000956  D002               	goto	i2l1557
  4275                           
  4276                           ;segment.c: 76: PORTAbits.RA0 = 1;
  4277  000958  8080               	bsf	3968,0,c	;volatile
  4278  00095A  D00D               	goto	i2l108
  4279  00095C                     i2l1557:
  4280                           
  4281                           ;segment.c: 77: else if(Segment == 2)
  4282  00095C  5040               	movf	i2Segment_init@Segment,w,c
  4283  00095E  0A02               	xorlw	2
  4284  000960  A4D8               	btfss	status,2,c
  4285  000962  D002               	goto	i2l1561
  4286                           
  4287                           ;segment.c: 78: PORTAbits.RA1 = 1;
  4288  000964  8280               	bsf	3968,1,c	;volatile
  4289  000966  D007               	goto	i2l108
  4290  000968                     i2l1561:
  4291                           
  4292                           ;segment.c: 79: else if(Segment== 3)
  4293  000968  5040               	movf	i2Segment_init@Segment,w,c
  4294  00096A  0A03               	xorlw	3
  4295  00096C  A4D8               	btfss	status,2,c
  4296  00096E  D002               	goto	i2l106
  4297                           
  4298                           ;segment.c: 80: PORTAbits.RA2 = 1;
  4299  000970  8480               	bsf	3968,2,c	;volatile
  4300  000972  D001               	goto	i2l108
  4301  000974                     i2l106:
  4302                           
  4303                           ;segment.c: 81: else
  4304                           ;segment.c: 82: PORTAbits.RA3 = 1;
  4305  000974  8680               	bsf	3968,3,c	;volatile
  4306  000976                     i2l108:
  4307  000976  0012               	return	
  4308  000978                     __end_ofi2_Segment_init:
  4309                           	opt stack 0
  4310                           pclatu	equ	0xFFB
  4311                           pclath	equ	0xFFA
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           intcon	equ	0xFF2
  4319                           postinc0	equ	0xFEE
  4320                           fsr0h	equ	0xFEA
  4321                           fsr0l	equ	0xFE9
  4322                           wreg	equ	0xFE8
  4323                           postdec1	equ	0xFE5
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           indf2	equ	0xFDF
  4327                           fsr2h	equ	0xFDA
  4328                           fsr2l	equ	0xFD9
  4329                           status	equ	0xFD8
  4330                           
  4331 ;; *************** function i2_DisplayValue *****************
  4332 ;; Defined at:
  4333 ;;		line 85 in file "segment.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  Number          1    wreg     unsigned char 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  Number          1    0[COMRAM] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;		None               void
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0
  4348 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4350 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4351 ;;Total ram usage:        1 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		i2_NumDisplay
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text35
  4361  000336                     __ptext35:
  4362                           	opt stack 0
  4363  000336                     i2_DisplayValue:
  4364                           	opt stack 22
  4365                           
  4366                           ;incstack = 0
  4367                           ;i2DisplayValue@Number stored from wreg
  4368  000336  6E40               	movwf	i2DisplayValue@Number,c
  4369                           
  4370                           ;segment.c: 87: if(dot==1)
  4371  000338  0429               	decf	_dot,w,c
  4372  00033A  B4D8               	btfsc	status,2,c
  4373  00033C  D016               	goto	i2l1589
  4374  00033E  D04C               	goto	i2l1615
  4375  000340                     i2l1569:
  4376                           
  4377                           ;segment.c: 92: PORTD = ((0b00111111) | (0b10000000));
  4378  000340  0EBF               	movlw	191
  4379  000342  D011               	goto	L27
  4380  000344                     i2l1571:
  4381                           
  4382                           ;segment.c: 95: PORTD = ((0b00000110) | (0b10000000));
  4383  000344  0E86               	movlw	134
  4384  000346  D00F               	goto	L27
  4385  000348                     i2l1573:
  4386                           
  4387                           ;segment.c: 98: PORTD = ((0b01011011) | (0b10000000));
  4388  000348  0EDB               	movlw	219
  4389  00034A  D00D               	goto	L27
  4390  00034C                     i2l1575:
  4391                           
  4392                           ;segment.c: 101: PORTD = ((0b01001111) | (0b10000000));
  4393  00034C  0ECF               	movlw	207
  4394  00034E  D00B               	goto	L27
  4395  000350                     i2l1577:
  4396                           
  4397                           ;segment.c: 104: PORTD = ((0b01100110) | (0b10000000));
  4398  000350  0EE6               	movlw	230
  4399  000352  D009               	goto	L27
  4400  000354                     i2l1579:
  4401                           
  4402                           ;segment.c: 107: PORTD = ((0b01101101) | (0b10000000));
  4403  000354  0EED               	movlw	237
  4404  000356  D007               	goto	L27
  4405  000358                     i2l1581:
  4406                           
  4407                           ;segment.c: 110: PORTD = ((0b01111101) | (0b10000000));
  4408  000358  0EFD               	movlw	253
  4409  00035A  D005               	goto	L27
  4410  00035C                     i2l1583:
  4411                           
  4412                           ;segment.c: 113: PORTD = ((0b00000111) | (0b10000000));
  4413  00035C  0E87               	movlw	135
  4414  00035E  D003               	goto	L27
  4415  000360                     i2l122:
  4416                           
  4417                           ;segment.c: 116: PORTD = ((0b01111111) | (0b10000000));
  4418  000360  6883               	setf	3971,c	;volatile
  4419                           
  4420                           ;segment.c: 117: break;
  4421  000362  D022               	goto	i2l1591
  4422  000364                     i2l1585:
  4423                           
  4424                           ;segment.c: 119: PORTD = ((0b01101111) | (0b10000000));
  4425  000364  0EEF               	movlw	239
  4426  000366                     L27:
  4427  000366  6E83               	movwf	3971,c	;volatile
  4428                           
  4429                           ;segment.c: 120: break;
  4430  000368  D01F               	goto	i2l1591
  4431  00036A                     i2l1589:
  4432  00036A  5040               	movf	i2DisplayValue@Number,w,c
  4433                           
  4434                           ; Switch size 1, requested type "space"
  4435                           ; Number of cases is 10, Range of values is 0 to 9
  4436                           ; switch strategies available:
  4437                           ; Name         Instructions Cycles
  4438                           ; simple_byte           31    16 (average)
  4439                           ;	Chosen strategy is simple_byte
  4440  00036C  0A00               	xorlw	0	; case 0
  4441  00036E  B4D8               	btfsc	status,2,c
  4442  000370  D7E7               	goto	i2l1569
  4443  000372  0A01               	xorlw	1	; case 1
  4444  000374  B4D8               	btfsc	status,2,c
  4445  000376  D7E6               	goto	i2l1571
  4446  000378  0A03               	xorlw	3	; case 2
  4447  00037A  B4D8               	btfsc	status,2,c
  4448  00037C  D7E5               	goto	i2l1573
  4449  00037E  0A01               	xorlw	1	; case 3
  4450  000380  B4D8               	btfsc	status,2,c
  4451  000382  D7E4               	goto	i2l1575
  4452  000384  0A07               	xorlw	7	; case 4
  4453  000386  B4D8               	btfsc	status,2,c
  4454  000388  D7E3               	goto	i2l1577
  4455  00038A  0A01               	xorlw	1	; case 5
  4456  00038C  B4D8               	btfsc	status,2,c
  4457  00038E  D7E2               	goto	i2l1579
  4458  000390  0A03               	xorlw	3	; case 6
  4459  000392  B4D8               	btfsc	status,2,c
  4460  000394  D7E1               	goto	i2l1581
  4461  000396  0A01               	xorlw	1	; case 7
  4462  000398  B4D8               	btfsc	status,2,c
  4463  00039A  D7E0               	goto	i2l1583
  4464  00039C  0A0F               	xorlw	15	; case 8
  4465  00039E  B4D8               	btfsc	status,2,c
  4466  0003A0  D7DF               	goto	i2l122
  4467  0003A2  0A01               	xorlw	1	; case 9
  4468  0003A4  B4D8               	btfsc	status,2,c
  4469  0003A6  D7DE               	goto	i2l1585
  4470  0003A8                     i2l1591:
  4471                           
  4472                           ;segment.c: 123: dot=0;
  4473  0003A8  0E00               	movlw	0
  4474  0003AA  6E29               	movwf	_dot,c
  4475                           
  4476                           ;segment.c: 124: }
  4477  0003AC  D034               	goto	i2l137
  4478  0003AE                     i2l1593:
  4479                           
  4480                           ;segment.c: 131: PORTD = 0b00111111;
  4481  0003AE  0E3F               	movlw	63
  4482  0003B0  D011               	goto	L36
  4483  0003B2                     i2l1595:
  4484                           
  4485                           ;segment.c: 134: PORTD = 0b00000110;
  4486  0003B2  0E06               	movlw	6
  4487  0003B4  D00F               	goto	L36
  4488  0003B6                     i2l1597:
  4489                           
  4490                           ;segment.c: 137: PORTD = 0b01011011;
  4491  0003B6  0E5B               	movlw	91
  4492  0003B8  D00D               	goto	L36
  4493  0003BA                     i2l1599:
  4494                           
  4495                           ;segment.c: 140: PORTD = 0b01001111;
  4496  0003BA  0E4F               	movlw	79
  4497  0003BC  D00B               	goto	L36
  4498  0003BE                     i2l1601:
  4499                           
  4500                           ;segment.c: 143: PORTD = 0b01100110;
  4501  0003BE  0E66               	movlw	102
  4502  0003C0  D009               	goto	L36
  4503  0003C2                     i2l1603:
  4504                           
  4505                           ;segment.c: 146: PORTD = 0b01101101;
  4506  0003C2  0E6D               	movlw	109
  4507  0003C4  D007               	goto	L36
  4508  0003C6                     i2l1605:
  4509                           
  4510                           ;segment.c: 149: PORTD = 0b01111101;
  4511  0003C6  0E7D               	movlw	125
  4512  0003C8  D005               	goto	L36
  4513  0003CA                     i2l1607:
  4514                           
  4515                           ;segment.c: 152: PORTD = 0b00000111;
  4516  0003CA  0E07               	movlw	7
  4517  0003CC  D003               	goto	L36
  4518  0003CE                     i2l1609:
  4519                           
  4520                           ;segment.c: 155: PORTD = 0b01111111;
  4521  0003CE  0E7F               	movlw	127
  4522  0003D0  D001               	goto	L36
  4523  0003D2                     i2l1611:
  4524                           
  4525                           ;segment.c: 158: PORTD = 0b01101111;
  4526  0003D2  0E6F               	movlw	111
  4527  0003D4                     L36:
  4528  0003D4  6E83               	movwf	3971,c	;volatile
  4529                           
  4530                           ;segment.c: 159: break;
  4531  0003D6  D01F               	goto	i2l137
  4532  0003D8                     i2l1615:
  4533  0003D8  5040               	movf	i2DisplayValue@Number,w,c
  4534                           
  4535                           ; Switch size 1, requested type "space"
  4536                           ; Number of cases is 10, Range of values is 0 to 9
  4537                           ; switch strategies available:
  4538                           ; Name         Instructions Cycles
  4539                           ; simple_byte           31    16 (average)
  4540                           ;	Chosen strategy is simple_byte
  4541  0003DA  0A00               	xorlw	0	; case 0
  4542  0003DC  B4D8               	btfsc	status,2,c
  4543  0003DE  D7E7               	goto	i2l1593
  4544  0003E0  0A01               	xorlw	1	; case 1
  4545  0003E2  B4D8               	btfsc	status,2,c
  4546  0003E4  D7E6               	goto	i2l1595
  4547  0003E6  0A03               	xorlw	3	; case 2
  4548  0003E8  B4D8               	btfsc	status,2,c
  4549  0003EA  D7E5               	goto	i2l1597
  4550  0003EC  0A01               	xorlw	1	; case 3
  4551  0003EE  B4D8               	btfsc	status,2,c
  4552  0003F0  D7E4               	goto	i2l1599
  4553  0003F2  0A07               	xorlw	7	; case 4
  4554  0003F4  B4D8               	btfsc	status,2,c
  4555  0003F6  D7E3               	goto	i2l1601
  4556  0003F8  0A01               	xorlw	1	; case 5
  4557  0003FA  B4D8               	btfsc	status,2,c
  4558  0003FC  D7E2               	goto	i2l1603
  4559  0003FE  0A03               	xorlw	3	; case 6
  4560  000400  B4D8               	btfsc	status,2,c
  4561  000402  D7E1               	goto	i2l1605
  4562  000404  0A01               	xorlw	1	; case 7
  4563  000406  B4D8               	btfsc	status,2,c
  4564  000408  D7E0               	goto	i2l1607
  4565  00040A  0A0F               	xorlw	15	; case 8
  4566  00040C  B4D8               	btfsc	status,2,c
  4567  00040E  D7DF               	goto	i2l1609
  4568  000410  0A01               	xorlw	1	; case 9
  4569  000412  B4D8               	btfsc	status,2,c
  4570  000414  D7DE               	goto	i2l1611
  4571  000416                     i2l137:
  4572  000416  0012               	return	
  4573  000418                     __end_ofi2_DisplayValue:
  4574                           	opt stack 0
  4575                           pclatu	equ	0xFFB
  4576                           pclath	equ	0xFFA
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           intcon	equ	0xFF2
  4584                           postinc0	equ	0xFEE
  4585                           fsr0h	equ	0xFEA
  4586                           fsr0l	equ	0xFE9
  4587                           wreg	equ	0xFE8
  4588                           postdec1	equ	0xFE5
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           indf2	equ	0xFDF
  4592                           fsr2h	equ	0xFDA
  4593                           fsr2l	equ	0xFD9
  4594                           status	equ	0xFD8
  4595                           
  4596 ;; *************** function i2_Delay_s_ *****************
  4597 ;; Defined at:
  4598 ;;		line 53 in file "delay.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;		None               void
  4605 ;; Registers used:
  4606 ;;		wreg, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    1
  4619 ;; This function calls:
  4620 ;;		i2_Delay10KTCYx
  4621 ;; This function is called by:
  4622 ;;		i2_Display
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text36
  4627  000BB8                     __ptext36:
  4628                           	opt stack 0
  4629  000BB8                     i2_Delay_s_:
  4630                           	opt stack 22
  4631                           
  4632                           ;delay.c: 55: Delay10KTCYx(2);
  4633                           
  4634                           ;incstack = 0
  4635  000BB8  0E02               	movlw	2
  4636  000BBA  EC9A  F005         	call	i2_Delay10KTCYx
  4637  000BBE  0012               	return	
  4638  000BC0                     __end_ofi2_Delay_s_:
  4639                           	opt stack 0
  4640                           pclatu	equ	0xFFB
  4641                           pclath	equ	0xFFA
  4642                           tblptru	equ	0xFF8
  4643                           tblptrh	equ	0xFF7
  4644                           tblptrl	equ	0xFF6
  4645                           tablat	equ	0xFF5
  4646                           prodh	equ	0xFF4
  4647                           prodl	equ	0xFF3
  4648                           intcon	equ	0xFF2
  4649                           postinc0	equ	0xFEE
  4650                           fsr0h	equ	0xFEA
  4651                           fsr0l	equ	0xFE9
  4652                           wreg	equ	0xFE8
  4653                           postdec1	equ	0xFE5
  4654                           fsr1h	equ	0xFE2
  4655                           fsr1l	equ	0xFE1
  4656                           indf2	equ	0xFDF
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661 ;; *************** function i2_Delay10KTCYx *****************
  4662 ;; Defined at:
  4663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d10ktcyx.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  unit            1    wreg     unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  unit            1    1[COMRAM] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;		None               void
  4670 ;; Registers used:
  4671 ;;		wreg
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0
  4678 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4679 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4680 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4681 ;;Total ram usage:        2 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		i2_Delay_s_
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text37
  4691  000B34                     __ptext37:
  4692                           	opt stack 0
  4693  000B34                     i2_Delay10KTCYx:
  4694                           	opt stack 22
  4695                           
  4696                           ;incstack = 0
  4697                           ;i2Delay10KTCYx@unit stored from wreg
  4698  000B34  6E41               	movwf	i2Delay10KTCYx@unit,c
  4699  000B36                     i2l548:
  4700  000B36  0E0D               	movlw	13
  4701  000B38  6E40               	movwf	??i2_Delay10KTCYx& (0+255),c
  4702  000B3A  0EFC               	movlw	252
  4703  000B3C                     i2u162_47:
  4704  000B3C  2EE8               	decfsz	wreg,f,c
  4705  000B3E  D7FE               	goto	i2u162_47
  4706  000B40  2E40               	decfsz	??i2_Delay10KTCYx& (0+255),f,c
  4707  000B42  D7FC               	goto	i2u162_47
  4708  000B44  2E41               	decfsz	i2Delay10KTCYx@unit,f,c
  4709  000B46  D7F7               	goto	i2l548
  4710  000B48  0012               	return	
  4711  000B4A                     __end_ofi2_Delay10KTCYx:
  4712                           	opt stack 0
  4713  0000                     pclatu	equ	0xFFB
  4714                           pclath	equ	0xFFA
  4715                           tblptru	equ	0xFF8
  4716                           tblptrh	equ	0xFF7
  4717                           tblptrl	equ	0xFF6
  4718                           tablat	equ	0xFF5
  4719                           prodh	equ	0xFF4
  4720                           prodl	equ	0xFF3
  4721                           intcon	equ	0xFF2
  4722                           postinc0	equ	0xFEE
  4723                           fsr0h	equ	0xFEA
  4724                           fsr0l	equ	0xFE9
  4725                           wreg	equ	0xFE8
  4726                           postdec1	equ	0xFE5
  4727                           fsr1h	equ	0xFE2
  4728                           fsr1l	equ	0xFE1
  4729                           indf2	equ	0xFDF
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           pclatu	equ	0xFFB
  4734                           pclath	equ	0xFFA
  4735                           tblptru	equ	0xFF8
  4736                           tblptrh	equ	0xFF7
  4737                           tblptrl	equ	0xFF6
  4738                           tablat	equ	0xFF5
  4739                           prodh	equ	0xFF4
  4740                           prodl	equ	0xFF3
  4741                           intcon	equ	0xFF2
  4742                           postinc0	equ	0xFEE
  4743                           fsr0h	equ	0xFEA
  4744                           fsr0l	equ	0xFE9
  4745                           wreg	equ	0xFE8
  4746                           postdec1	equ	0xFE5
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754                           	psect	rparam
  4755  0000                     pclatu	equ	0xFFB
  4756                           pclath	equ	0xFFA
  4757                           tblptru	equ	0xFF8
  4758                           tblptrh	equ	0xFF7
  4759                           tblptrl	equ	0xFF6
  4760                           tablat	equ	0xFF5
  4761                           prodh	equ	0xFF4
  4762                           prodl	equ	0xFF3
  4763                           intcon	equ	0xFF2
  4764                           postinc0	equ	0xFEE
  4765                           fsr0h	equ	0xFEA
  4766                           fsr0l	equ	0xFE9
  4767                           wreg	equ	0xFE8
  4768                           postdec1	equ	0xFE5
  4769                           fsr1h	equ	0xFE2
  4770                           fsr1l	equ	0xFE1
  4771                           indf2	equ	0xFDF
  4772                           fsr2h	equ	0xFDA
  4773                           fsr2l	equ	0xFD9
  4774                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        78
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      86
    BANK0           160      9      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Read_string@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> str(COMRAM[10]), 

    Write_string@c	PTR unsigned char  size(2) Largest target is 39
		 -> str2(COMRAM[38]), str1(BANK0[39]), 

    Set_TIME@str	PTR unsigned char  size(2) Largest target is 10
		 -> str(COMRAM[10]), 

    Display@ptr	PTR unsigned char  size(2) Largest target is 8
		 -> array(COMRAM[8]), 

    Format_DEC@p	PTR unsigned char  size(2) Largest target is 10
		 -> str(COMRAM[10]), 

    Format_DEC@q	PTR unsigned char  size(2) Largest target is 8
		 -> array(COMRAM[8]), 

    Seq_count@ptr4	PTR unsigned char  size(2) Largest target is 1
		 -> Num4(COMRAM[1]), 

    Seq_count@ptr3	PTR unsigned char  size(2) Largest target is 1
		 -> Num3(COMRAM[1]), 

    Seq_count@ptr2	PTR unsigned char  size(2) Largest target is 1
		 -> Num2(COMRAM[1]), 

    Seq_count@ptr1	PTR unsigned char  size(2) Largest target is 1
		 -> Num1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Rx_isr in COMRAM

    _Rx_isr->i2_Set_TIME
    i2_Set_TIME->i2_Read_string
    i2_Write_string->i2_Write
    i2_Read_string->i2_Write
    i2_Write->i2_WriteUSART
    _Reset_TIME->i2_Display
    i2_Display->i2_NumDisplay
    i2_NumDisplay->i2_DisplayValue
    i2_NumDisplay->i2_Segment_init
    i2_Delay_s_->i2_Delay10KTCYx

Critical Paths under _main in BANK0

    _main->_Set_TIME
    _UsartConfig->_OpenUSART
    _Set_TIME->_Read_string
    _Write_string->_Write
    _Read_string->_Write
    _Write->_WriteUSART
    _Display->_NumDisplay
    _NumDisplay->_DisplayValue
    _NumDisplay->_Segment_init
    _Delay_s_->_Delay10KTCYx

Critical Paths under _Rx_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Rx_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Rx_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3358
                              _Blink
                   _Config_Interrupt
                            _Display
                          _Seq_count
                           _Set_TIME
                       _Switch_Relay
                        _UsartConfig
 ---------------------------------------------------------------------------------
 (1) _UsartConfig                                          2     1      1     394
                                              6 BANK0      2     1      1
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Set_TIME                                             2     0      2    1737
                                              7 BANK0      2     0      2
                         _Format_DEC
                           _Read_BUF
                        _Read_string
                       _Write_string
 ---------------------------------------------------------------------------------
 (2) _Write_string                                         2     0      2     312
                                              2 BANK0      2     0      2
                              _Write
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Read_string                                          5     2      3     602
                                              2 BANK0      5     2      3
                          _ReadUSART
                              _Write
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _Write                                                1     1      0      62
                                              1 BANK0      1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (3) _WriteUSART                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Read_BUF                                             1     1      0       6
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Format_DEC                                           4     0      4     574
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Seq_count                                            8     0      8     528
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _Display                                              4     4      0     677
                                              3 BANK0      4     4      0
                           _Delay_s_
                         _NumDisplay
                       _Switch_Relay
 ---------------------------------------------------------------------------------
 (1) _Switch_Relay                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _NumDisplay                                           2     1      1     432
                                              1 BANK0      2     1      1
                       _DisplayValue
                       _Segment_init
 ---------------------------------------------------------------------------------
 (3) _Segment_init                                         1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DisplayValue                                         1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay_s_                                             0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Blink                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_isr                                              14    14      0    1421
                                              9 COMRAM    14    14      0
                         _Reset_TIME
                         i2_Read_BUF
                         i2_Set_TIME
                     i2_Switch_Relay
 ---------------------------------------------------------------------------------
 (6) i2_Set_TIME                                           2     0      2     872
                                              7 COMRAM     2     0      2
                       i2_Format_DEC
                         i2_Read_BUF
                      i2_Read_string
                     i2_Write_string
 ---------------------------------------------------------------------------------
 (7) i2_Write_string                                       2     0      2     163
                                              2 COMRAM     2     0      2
                            i2_Write
                       i2_WriteUSART
 ---------------------------------------------------------------------------------
 (7) i2_Read_string                                        5     2      3     307
                                              2 COMRAM     5     2      3
                        i2_ReadUSART
                            i2_Write
                       i2_WriteUSART
 ---------------------------------------------------------------------------------
 (8) i2_Write                                              1     1      0      44
                                              1 COMRAM     1     1      0
                       i2_WriteUSART
 ---------------------------------------------------------------------------------
 (8) i2_WriteUSART                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_Read_BUF                                           1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_Format_DEC                                         4     0      4     286
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _Reset_TIME                                           0     0      0     525
                          i2_Display
 ---------------------------------------------------------------------------------
 (7) i2_Display                                            4     4      0     525
                                              3 COMRAM     4     4      0
                         i2_Delay_s_
                       i2_NumDisplay
                     i2_Switch_Relay
 ---------------------------------------------------------------------------------
 (6) i2_Switch_Relay                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_NumDisplay                                         2     1      1     280
                                              1 COMRAM     2     1      1
                     i2_DisplayValue
                     i2_Segment_init
 ---------------------------------------------------------------------------------
 (9) i2_Segment_init                                       1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_DisplayValue                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_Delay_s_                                           0     0      0      22
                     i2_Delay10KTCYx
 ---------------------------------------------------------------------------------
 (9) i2_Delay10KTCYx                                       2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Blink
   _Config_Interrupt
   _Display
     _Delay_s_
       _Delay10KTCYx
     _NumDisplay
       _DisplayValue
       _Segment_init
     _Switch_Relay
   _Seq_count
   _Set_TIME
     _Format_DEC
     _Read_BUF
     _Read_string
       _ReadUSART
       _Write
         _WriteUSART
       _WriteUSART
     _Write_string
       _Write
         _WriteUSART
       _WriteUSART
   _Switch_Relay
   _UsartConfig
     _OpenUSART

 _Rx_isr (ROOT)
   _Reset_TIME
     i2_Display
       i2_Delay_s_
         i2_Delay10KTCYx
       i2_NumDisplay
         i2_DisplayValue
         i2_Segment_init
       i2_Switch_Relay
   i2_Read_BUF
   i2_Set_TIME
     i2_Format_DEC
     i2_Read_BUF
     i2_Read_string
       i2_ReadUSART
       i2_Write
         i2_WriteUSART
       i2_WriteUSART
     i2_Write_string
       i2_Write
         i2_WriteUSART
       i2_WriteUSART
   i2_Switch_Relay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      9      30       5       30.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      56       1       90.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      86      20        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Oct 06 12:44:37 2014

    __size_of_Switch_Relay 0022                __CFG_BORV$3 000000                        l122 027A  
                      l106 0940                        l108 0942      __size_ofi2_WriteUSART 0012  
                      l137 0334                        l307 0A7C                        l235 0B6A  
                      l243 098E                        l149 0542                        l261 08AA  
                      l258 0888                        l195 0A52                        l197 0A56  
                      l293 0612                        l198 0A6C                        l294 0614  
                      l295 0620                        l296 0622                        l289 05F8  
                      l298 064A                        l548 0AEE               __CFG_BOR$OFF 000000  
                      _dot 0029                        _str 002A                        wreg 000FE8  
             __CFG_FOSC$HS 000000               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     l2005 0980                       l2023 08B8                       l2105 0086  
                     l2009 0998                       l2115 00EC                       l2043 05FA  
                     l2035 05E8                       l2117 00FA                       l2129 0140  
                     l2167 07DC                       l1911 026A                       l1903 025A  
                     l1913 026E                       l1905 025E                       l1931 02D2  
                     l1915 0272                       l1907 0262                       l1923 0284  
                     l1941 02E6                       l1933 02D6                       l1917 0276  
                     l1909 0266                       l1925 02C4                       l1943 02EA  
                     l1935 02DA                       l1927 02CA                       l1919 027E  
                     l1871 0B58                       l1945 02EE                       l1937 02DE  
                     l1929 02CE                       l1939 02E2                       l1891 0924  
                     l1949 02F4                       l1895 0932                       l1975 0A5C  
                     l1985 09F0                       u1617 0AF6                       _PEIE 007F96  
                     _RCIE 007CED                       _RCIF 007CF5                       i2l46 0592  
                     _RCIP 007CFD                       _Num1 003C                       _Num2 003D  
                     _Num3 003E                       _Num4 003F                       _main 07B2  
                     _str1 0060                       _str2 0002                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
             _Switch_Relay 0A4C                       pclat 000FFA            __end_ofi2_Write 0B90  
                     prodh 000FF4                       prodl 000FF3                       start 0018  
            __CFG_IESO$OFF 000000                i2Write@data 0041            ?i2_Segment_init 0040  
      Segment_init@Segment 0087              __CFG_MCLRE$ON 000000    __size_ofi2_Switch_Relay 001E  
          __end_of_Display 0154               i2_WriteUSART 0B70      __size_of_Write_string 0030  
            __CFG_PLLDIV$5 000000                      ?_main 0040                      _LATB0 007C50  
              Format_DEC@p 0087                Format_DEC@q 0089                      i2l122 0360  
                    i2l106 0974                      i2l108 0976                      i2l137 0416  
                    i2l307 0ABC                      i2l235 0B8A                      i2l243 09BE  
                    i2l261 08F4                      i2l258 08D8                      i2l195 0AD0  
                    i2l197 0AD4                      i2l198 0AE8                      i2l548 0B36  
                    _RCREG 000FAE                      _RCSTA 000FAB                      _SPBRG 000FAF  
                    _PORTD 000F83              __CFG_USBDIV$1 000000                      _TRISD 000F95  
                    _TXREG 000FAD      __size_of_Delay10KTCYx 001C                      _TXSTA 000FAC  
            __CFG_PWRT$OFF 000000            ??i2_Read_string 0045                      _Blink 0BC0  
              ?i2_Delay_s_ 0040             __CFG_FCMEN$OFF 000000              ??_Read_string 008C  
                    _Write 0B5E                      _array 0034         __size_ofi2_Display 00FA  
                    tablat 000FF5         i2Delay10KTCYx@unit 0041                ?i2_Read_BUF 0040  
                    status 000FD8               _Write_string 0978             __CFG_ICPRT$OFF 000000  
         __end_of_Delay_s_ 0BB8                ?i2_Set_TIME 0047             WriteUSART@data 0087  
               _Format_DEC 064C            __initialization 081E    __size_ofi2_Write_string 002E  
             __end_of_main 081E           __end_of_Read_BUF 0BA6               _Delay10KTCYx 0AEA  
         __end_of_Set_TIME 04B2                     ??_main 0090    __size_ofi2_Delay10KTCYx 0016  
            __activetblptr 000002                     ?_Blink 0040            __CFG_CCP2MX$OFF 000000  
     __end_of_DisplayValue 0336                     ?_Write 0040            i2Write_string@c 0042  
                ??i2_Write 0041                     i2l1601 03BE                     i2l1611 03D2  
                   i2l1603 03C2                     i2l1605 03C6                     i2l1607 03CA  
                   i2l1615 03D8                     i2l1623 0B7C                     i2l1609 03CE  
                   i2l1561 0968                     i2l1571 0344                     i2l1581 0358  
                   i2l1573 0348                     i2l1557 095C                     i2l1583 035C  
                   i2l1575 034C                     i2l1591 03A8                     i2l1655 0AA2  
                   i2l1663 0ADA                     i2l1593 03AE                     i2l1585 0364  
                   i2l1577 0350                     i2l1569 0340                     i2l1761 0200  
                   i2l1595 03B2                     i2l1579 0354                     i2l1597 03B6  
                   i2l1589 036A                     i2l1773 023C                     i2l1749 01A8  
                   i2l1781 09C6                     i2l1599 03BA                     i2l1759 01F6  
                   i2l1777 09B0                     i2l1795 08FE                 _NumDisplay 09D6  
       __size_of_ReadUSART 0020        __end_of_Read_string 08C6                     _SPBRGH 000FB0  
               _Reset_TIME 0B1E                  ??_Display 008A   __end_of_Config_Interrupt 0B9C  
           __CFG_XINST$OFF 000000                     _Rx_isr 0008         __size_of_OpenUSART 0080  
      __size_ofi2_Delay_s_ 0008             __CFG_STVREN$ON 000000          __end_ofi2_Display 024E  
         i2Read_string@len 0044        i2NumDisplay@Segment 0041         __size_of_Seq_count 0092  
                   clear_0 0824        __size_ofi2_Read_BUF 000A               __pdataCOMRAM 0001  
      __size_ofi2_Set_TIME 0076               ?i2_ReadUSART 0040                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                Set_TIME@str 008E  
               __accesstop 0060    __end_of__initialization 086A            __CFG_PBADEN$OFF 000000  
         NumDisplay@Number 0089              ?_Segment_init 0040                ?_Format_DEC 0087  
           i2_Switch_Relay 0ACC              __end_of_Blink 0BC4                 _WriteUSART 0B4A  
           __pcstackCOMRAM 0040               __pidataBANK0 0A25              __end_of_Write 0B70  
        __end_of_ReadUSART 0A8E              Seq_count@ptr1 0087              Seq_count@ptr2 0089  
            Seq_count@ptr3 008B              Seq_count@ptr4 008D              ??_UsartConfig 008E  
                  ??_Blink 0087                  ?_Delay_s_ 0040                _Read_string 0874  
                  ??_Write 0088              ReadUSART@data 0087          __end_of_OpenUSART 064C  
              ?_NumDisplay 0088          __end_of_Seq_count 0544                  ?_Read_BUF 0040  
         ??i2_Segment_init 0040                ?_Reset_TIME 0040     __end_ofi2_Switch_Relay 0AEA  
           ??_Segment_init 0087                  ?_Set_TIME 008E             i2_Write_string 09A8  
                  ?_Rx_isr 0040               Read_string@i 008C             i2_Delay10KTCYx 0B34  
    __size_of_DisplayValue 00E8         DisplayValue@Number 0087               ??i2_Delay_s_ 0042  
               ??_Delay_s_ 0089        __size_of_Format_DEC 007E             Read_string@len 008B  
                  i2_Write 0B82        __end_of_UsartConfig 0B1E               ??i2_Read_BUF 0040  
               ??_Read_BUF 0087            __CFG_VREGEN$OFF 000000                    _Display 001C  
   __end_ofi2_Write_string 09D6            ?i2_Switch_Relay 0040               ??i2_Set_TIME 0049  
               ??_Set_TIME 0090                    __Hparam 0000                    __Lparam 0000  
              ?_WriteUSART 0040               _DisplayValue 024E            __size_of_Rx_isr 05C4  
       __end_ofi2_Delay_s_ 0BC0     __end_ofi2_Delay10KTCYx 0B4A                    __pcinit 081E  
  __size_ofi2_DisplayValue 00E2                    __ramtop 0800        __size_of_NumDisplay 0028  
        i2Read_string@data 0046                    __ptext0 07B2                    __ptext1 0B06  
                  __ptext2 05CC                    __ptext3 0418                    __ptext4 0978  
                  __ptext5 0874                    __ptext6 0B5E                    __ptext7 0B4A  
                  __ptext8 0A6E                    __ptext9 0B9C                    _config1 0001  
       __end_ofi2_Read_BUF 0BB0        __size_of_Reset_TIME 0016         __end_ofi2_Set_TIME 0740  
    __end_ofi2_Read_string 0908       __size_ofi2_ReadUSART 001E             __pintcode_body 0544  
     end_of_initialization 086A              __Lmediumconst 0000                    int_func 0544  
          ?i2_Write_string 0042          ?_Config_Interrupt 0040              ?i2_Format_DEC 0040  
                _RCSTAbits 000FAB         ??_Config_Interrupt 0087                    postdec1 000FE5  
                  postinc0 000FEE            ?i2_Delay10KTCYx 0040                  _PORTAbits 000F80  
                i2_Display 0154         UsartConfig@config1 008E         UsartConfig@config2 008D  
     __end_of_Segment_init 0944                _UsartConfig 0B06                  _TRISAbits 000F92  
                _TRISBbits 000F93                  _TRISCbits 000F94        __size_of_WriteUSART 0014  
        NumDisplay@Segment 0088              ?i2_NumDisplay 0041                  Read_BUF@c 0087  
                _TXSTAbits 000FAC             ??i2_Format_DEC 0044               ??_Format_DEC 008B  
           __end_of_Rx_isr 05CC              __pidataCOMRAM 09FE             i2Read_string@i 0045  
               ?i2_Display 0040        start_initialization 081E                  _ReadUSART 0A6E  
             ?_Read_string 0089         __end_of_Format_DEC 06CA          __size_of_Delay_s_ 0008  
           ??i2_NumDisplay 0042               ??_NumDisplay 0089                  _OpenUSART 05CC  
             ??_Reset_TIME 0047              ?_Switch_Relay 0040          __size_of_Read_BUF 000A  
                _Seq_count 04B2          __size_of_Set_TIME 009A                   ??_Rx_isr 0049  
            ?i2_WriteUSART 0040         i2NumDisplay@Number 0042                __pdataBANK0 0060  
         __CFG_LPT1OSC$OFF 000000             i2_DisplayValue 0336         __end_of_NumDisplay 09FE  
       __end_of_Reset_TIME 0B34                __pbssCOMRAM 0028                 ?_ReadUSART 0040  
            __pcstackBANK0 0087           ??i2_Switch_Relay 0040                   ?i2_Write 0040  
           ??_Switch_Relay 0087                 ?_OpenUSART 0087              ?_Write_string 0089  
                 ?_Display 0040                  Write@data 0088                 ?_Seq_count 0087  
           ??i2_WriteUSART 0040               ??_WriteUSART 0087                  __pintcode 0008  
   __end_ofi2_DisplayValue 0418              ?_Delay10KTCYx 0040        i2Read_string@buffer 0042  
    __size_of_Segment_init 003C                ??i2_Display 0043              i2Format_DEC@p 0040  
            i2Format_DEC@q 0042             __size_of_Blink 0004       __end_ofi2_Format_DEC 07B2  
           __size_of_Write 0012           ??i2_Write_string 0044         __end_of_WriteUSART 0B5E  
           ??_Write_string 008B                   _LATBbits 000F8A            i2ReadUSART@data 0040  
                 _PIE1bits 000F9D               _Segment_init 0908                   i2u162_47 0B3C  
         ??i2_Delay10KTCYx 0040                   _PIR1bits 000F9E           __CFG_WDTPS$32768 000000  
           ??_Delay10KTCYx 0087            ?i2_DisplayValue 0040    __size_ofi2_Segment_init 0034  
          Read_string@data 008D                   Display@x 008A       __end_ofi2_NumDisplay 0AAE  
            Write_string@c 0089  __size_of_Config_Interrupt 000C       i2DisplayValue@Number 0040  
             ?_UsartConfig 008D              ??i2_ReadUSART 0040                ??_ReadUSART 0087  
                 _Delay_s_ 0BB0           Delay10KTCYx@unit 0088                  copy_data0 083E  
                copy_data1 085E       __size_of_Read_string 0052           __size_ofi2_Write 000E  
                 _Read_BUF 0B9C                ??_OpenUSART 0089               i2Display@ptr 0045  
          OpenUSART@config 008C                   _Set_TIME 0418           __size_of_Display 0138  
              ??_Seq_count 008F                   __Hrparam 0000                   __Lrparam 0000  
   __size_ofi2_Read_string 0042           i2Switch_Relay@sw 0040       __end_of_Switch_Relay 0A6E  
     __end_ofi2_WriteUSART 0B82                   __ptext10 064C                   __ptext11 04B2  
                 __ptext20 0BC0                   __ptext12 001C                   __ptext13 0A4C  
                 __ptext30 0B1E                   __ptext22 06CA                   __ptext14 09D6  
                 __ptext31 0154                   __ptext23 09A8                   __ptext15 0908  
                 __ptext32 0ACC                   __ptext24 08C6                   __ptext16 024E  
                 __ptext33 0A8E                   __ptext25 0B82                   __ptext17 0BB0  
                 __ptext34 0944                   __ptext26 0B70                   __ptext18 0AEA  
                 __ptext35 0336                   __ptext27 0AAE                   __ptext19 0B90  
                 __ptext36 0BB8                   __ptext28 0BA6                   __ptext37 0B34  
                 __ptext29 0740              i2Set_TIME@str 0047        __end_ofi2_ReadUSART 0ACC  
            __size_of_main 006C      i2Segment_init@Segment 0040      __size_ofi2_Format_DEC 0072  
     __end_of_Write_string 09A8      __CFG_CPUDIV$OSC1_PLL2 000000                 _INTCONbits 000FF2  
           OpenUSART@spbrg 0087              i2_Read_string 08C6       __end_of_Delay10KTCYx 0B06  
                 intlevel2 0000                i2Read_BUF@c 0040               i2_Format_DEC 0740  
    __size_ofi2_NumDisplay 0020              ?_DisplayValue 0040             i2_Segment_init 0944  
               i2Display@x 0043           _Config_Interrupt 0B90                i2_ReadUSART 0AAE  
               i2_Delay_s_ 0BB8           i2WriteUSART@data 0040             ?i2_Read_string 0042  
     __size_of_UsartConfig 0018          Read_string@buffer 0089             Switch_Relay@sw 0087  
             i2_NumDisplay 0A8E                 i2_Read_BUF 0BA6                 Display@ptr 008C  
         ??i2_DisplayValue 0040                 i2_Set_TIME 06CA               _USART_Status 0028  
   __end_ofi2_Segment_init 0978             ??_DisplayValue 0087  
