

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Jan 29 13:18:14 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataCOMRAM,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataBANK0
    44  001206                     __pidataBANK0:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _str2
    48  001206  45                 	db	69
    49  001207  6E                 	db	110
    50  001208  74                 	db	116
    51  001209  65                 	db	101
    52  00120A  72                 	db	114
    53  00120B  20                 	db	32
    54  00120C  74                 	db	116
    55  00120D  68                 	db	104
    56  00120E  65                 	db	101
    57  00120F  20                 	db	32
    58  001210  49                 	db	73
    59  001211  6E                 	db	110
    60  001212  69                 	db	105
    61  001213  74                 	db	116
    62  001214  69                 	db	105
    63  001215  61                 	db	97
    64  001216  6C                 	db	108
    65  001217  20                 	db	32
    66  001218  54                 	db	84
    67  001219  69                 	db	105
    68  00121A  6D                 	db	109
    69  00121B  65                 	db	101
    70  00121C  00                 	db	0
    71                           
    72                           ;initializer for _str3
    73                           
    74                           	psect	idataCOMRAM
    75  0011B8                     __pidataCOMRAM:
    76                           	opt stack 0
    77  0011B8  45                 	db	69
    78  0011B9  6E                 	db	110
    79  0011BA  74                 	db	116
    80  0011BB  65                 	db	101
    81  0011BC  72                 	db	114
    82  0011BD  20                 	db	32
    83  0011BE  74                 	db	116
    84  0011BF  68                 	db	104
    85  0011C0  65                 	db	101
    86  0011C1  20                 	db	32
    87  0011C2  46                 	db	70
    88  0011C3  69                 	db	105
    89  0011C4  6E                 	db	110
    90  0011C5  61                 	db	97
    91  0011C6  6C                 	db	108
    92  0011C7  20                 	db	32
    93  0011C8  54                 	db	84
    94  0011C9  69                 	db	105
    95  0011CA  6D                 	db	109
    96  0011CB  65                 	db	101
    97  0011CC  00                 	db	0
    98  0011CD  00                 	db	0
    99                           
   100                           ;initializer for _Num1
   101  0011CE  01                 	db	1
   102                           
   103                           ;initializer for _Num2
   104  0011CF  02                 	db	2
   105                           
   106                           ;initializer for _Num3
   107  0011D0  03                 	db	3
   108                           
   109                           ;initializer for _Num4
   110  0011D1  04                 	db	4
   111  0000                     _INTCONbits	set	4082
   112  0000                     _LATBbits	set	3978
   113  0000                     _PIE1bits	set	3997
   114  0000                     _PIR1bits	set	3998
   115  0000                     _PORTAbits	set	3968
   116  0000                     _PORTD	set	3971
   117  0000                     _RCREG	set	4014
   118  0000                     _RCSTA	set	4011
   119  0000                     _RCSTAbits	set	4011
   120  0000                     _SPBRG	set	4015
   121  0000                     _SPBRGH	set	4016
   122  0000                     _TRISAbits	set	3986
   123  0000                     _TRISBbits	set	3987
   124  0000                     _TRISCbits	set	3988
   125  0000                     _TRISD	set	3989
   126  0000                     _TXREG	set	4013
   127  0000                     _TXSTA	set	4012
   128  0000                     _TXSTAbits	set	4012
   129  0000                     _PEIE	set	32662
   130  0000                     _RCIE	set	31981
   131  0000                     _RCIF	set	31989
   132  0000                     _RCIP	set	31997
   133                           
   134                           	psect	smallconst
   135  000800                     __psmallconst:
   136                           	opt stack 0
   137  000800                     __stringdata:
   138                           	opt stack 0
   139  000800                     STR_2:
   140  000800  31                 	db	49	;'1'
   141  000801  32                 	db	50	;'2'
   142  000802  33                 	db	51	;'3'
   143  000803  34                 	db	52	;'4'
   144  000804  00                 	db	0
   145  000805                     STR_1:
   146  000805  31                 	db	49	;'1'
   147  000806  32                 	db	50	;'2'
   148  000807  33                 	db	51	;'3'
   149  000808  37                 	db	55	;'7'
   150  000809  00                 	db	0
   151  00080A                     __end_of__stringdata:
   152                           	opt stack 0
   153                           
   154                           ; #config settings
   155  00080A  00                 	db	0	; dummy byte at the end
   156  0000                     
   157                           	psect	cinit
   158  000FD4                     __pcinit:
   159                           	opt stack 0
   160  000FD4                     start_initialization:
   161                           	opt stack 0
   162  000FD4                     __initialization:
   163                           	opt stack 0
   164                           
   165                           ; Clear objects allocated to COMRAM (19 bytes)
   166  000FD4  EE00  F049         	lfsr	0,__pbssCOMRAM
   167  000FD8  0E13               	movlw	19
   168  000FDA                     clear_0:
   169  000FDA  6AEE               	clrf	postinc0,c
   170  000FDC  06E8               	decf	wreg,f,c
   171  000FDE  E1FD               	bnz	clear_0
   172                           
   173                           ; Initialize objects allocated to BANK0 (23 bytes)
   174                           ; load TBLPTR registers with __pidataBANK0
   175  000FE0  0E06               	movlw	low __pidataBANK0
   176  000FE2  6EF6               	movwf	tblptrl,c
   177  000FE4  0E12               	movlw	high __pidataBANK0
   178  000FE6  6EF7               	movwf	tblptrh,c
   179  000FE8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   180  000FEA  6EF8               	movwf	tblptru,c
   181  000FEC  EE00  F060         	lfsr	0,__pdataBANK0
   182  000FF0  EE10 F017          	lfsr	1,23
   183  000FF4                     copy_data0:
   184  000FF4  0009               	tblrd		*+
   185  000FF6  CFF5 FFEE          	movff	tablat,postinc0
   186  000FFA  50E5               	movf	postdec1,w,c
   187  000FFC  50E1               	movf	fsr1l,w,c
   188  000FFE  E1FA               	bnz	copy_data0
   189                           
   190                           ; Initialize objects allocated to COMRAM (26 bytes)
   191                           ; load TBLPTR registers with __pidataCOMRAM
   192  001000  0EB8               	movlw	low __pidataCOMRAM
   193  001002  6EF6               	movwf	tblptrl,c
   194  001004  0E11               	movlw	high __pidataCOMRAM
   195  001006  6EF7               	movwf	tblptrh,c
   196  001008  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   197  00100A  6EF8               	movwf	tblptru,c
   198  00100C  EE00  F02F         	lfsr	0,__pdataCOMRAM
   199  001010  EE10 F01A          	lfsr	1,26
   200  001014                     copy_data1:
   201  001014  0009               	tblrd		*+
   202  001016  CFF5 FFEE          	movff	tablat,postinc0
   203  00101A  50E5               	movf	postdec1,w,c
   204  00101C  50E1               	movf	fsr1l,w,c
   205  00101E  E1FA               	bnz	copy_data1
   206  001020                     end_of_initialization:
   207                           	opt stack 0
   208  001020                     __end_of__initialization:
   209                           	opt stack 0
   210  001020  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211  001022  6EF8               	movwf	tblptru,c
   212  001024  0100               	movlb	0
   213  001026  EF53  F008         	goto	_main	;jump to C main() function
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           postdec1	equ	0xFE5
   221                           fsr1l	equ	0xFE1
   222                           
   223                           	psect	bssCOMRAM
   224  000049                     __pbssCOMRAM:
   225                           	opt stack 0
   226  000049                     _USART_Status:
   227                           	opt stack 0
   228  000049                     	ds	1
   229  00004A                     _dot:
   230                           	opt stack 0
   231  00004A                     	ds	1
   232  00004B                     _str:
   233                           	opt stack 0
   234  00004B                     	ds	10
   235  000055                     _array:
   236                           	opt stack 0
   237  000055                     	ds	7
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1l	equ	0xFE1
   246                           
   247                           	psect	dataCOMRAM
   248  00002F                     __pdataCOMRAM:
   249                           	opt stack 0
   250  00002F                     _str3:
   251                           	opt stack 0
   252  00002F                     	ds	22
   253  000045                     _Num1:
   254                           	opt stack 0
   255  000045                     	ds	1
   256  000046                     _Num2:
   257                           	opt stack 0
   258  000046                     	ds	1
   259  000047                     _Num3:
   260                           	opt stack 0
   261  000047                     	ds	1
   262  000048                     _Num4:
   263                           	opt stack 0
   264  000048                     	ds	1
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	dataBANK0
   275  000060                     __pdataBANK0:
   276                           	opt stack 0
   277  000060                     _str2:
   278                           	opt stack 0
   279  000060                     	ds	23
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	cstackCOMRAM
   290  000001                     __pcstackCOMRAM:
   291                           	opt stack 0
   292  000001                     ?i2_Format_DEC:
   293                           	opt stack 0
   294  000001                     ?i2_Switch_Relay:
   295                           	opt stack 0
   296  000001                     ?i2_Segment_init:
   297                           	opt stack 0
   298  000001                     ?i2_DisplayValue:
   299                           	opt stack 0
   300  000001                     ?i2_Seq_count:
   301                           	opt stack 0
   302  000001                     ?i2_Delay10KTCYx:
   303                           	opt stack 0
   304  000001                     i2Switch_Relay@sw:
   305                           	opt stack 0
   306  000001                     i2Segment_init@Segment:
   307                           	opt stack 0
   308  000001                     i2DisplayValue@Number:
   309                           	opt stack 0
   310  000001                     i2Delay10KTCYx@unit:
   311                           	opt stack 0
   312  000001                     i2Format_DEC@p:
   313                           	opt stack 0
   314  000001                     i2Seq_count@ptr1:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x0
   318  000001                     	ds	1
   319  000002                     ??i2_DisplayValue:
   320  000002                     ??i2_Delay10KTCYx:
   321                           
   322                           ; 0 bytes @ 0x1
   323  000002                     	ds	1
   324  000003                     ??i2_Delay_s_:
   325  000003                     ?i2_NumDisplay:
   326                           	opt stack 0
   327  000003                     i2NumDisplay@Number:
   328                           	opt stack 0
   329  000003                     i2Format_DEC@q:
   330                           	opt stack 0
   331  000003                     i2Seq_count@ptr2:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x2
   335  000003                     	ds	1
   336  000004                     i2NumDisplay@Segment:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x3
   340  000004                     	ds	1
   341  000005                     ??i2_NumDisplay:
   342  000005                     i2Seq_count@ptr3:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x4
   346  000005                     	ds	2
   347  000007                     i2Seq_count@ptr4:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351  000007                     	ds	2
   352  000009                     ??i2_Display:
   353  000009                     
   354                           ; 0 bytes @ 0x8
   355  000009                     	ds	1
   356  00000A                     i2Display@x:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x9
   360  00000A                     	ds	2
   361  00000C                     i2Display@ptr:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0xB
   365  00000C                     	ds	2
   366  00000E                     ??_Reset_TIME:
   367  00000E                     ?i2_Set_TIME:
   368                           	opt stack 0
   369  00000E                     i2Set_TIME@str:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0xD
   373  00000E                     	ds	2
   374  000010                     ??_Rx_isr:
   375  000010                     
   376                           ; 0 bytes @ 0xF
   377  000010                     	ds	14
   378  00001E                     ?_Seq_count:
   379                           	opt stack 0
   380  00001E                     ?_Delay10KTCYx:
   381                           	opt stack 0
   382  00001E                     ?_OpenUSART:
   383                           	opt stack 0
   384  00001E                     ?_Format_DEC:
   385                           	opt stack 0
   386  00001E                     ?_Switch_Relay:
   387                           	opt stack 0
   388  00001E                     ?_Segment_init:
   389                           	opt stack 0
   390  00001E                     ?_DisplayValue:
   391                           	opt stack 0
   392  00001E                     Switch_Relay@sw:
   393                           	opt stack 0
   394  00001E                     Segment_init@Segment:
   395                           	opt stack 0
   396  00001E                     DisplayValue@Number:
   397                           	opt stack 0
   398  00001E                     OpenUSART@config:
   399                           	opt stack 0
   400  00001E                     Delay10KTCYx@unit:
   401                           	opt stack 0
   402  00001E                     Format_DEC@p:
   403                           	opt stack 0
   404  00001E                     Seq_count@ptr1:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x1D
   408  00001E                     	ds	1
   409  00001F                     ??_Delay10KTCYx:
   410  00001F                     ??_DisplayValue:
   411  00001F                     OpenUSART@spbrg:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x1E
   415  00001F                     	ds	1
   416  000020                     ?_NumDisplay:
   417                           	opt stack 0
   418  000020                     ??_Delay_s_:
   419  000020                     NumDisplay@Number:
   420                           	opt stack 0
   421  000020                     Format_DEC@q:
   422                           	opt stack 0
   423  000020                     Seq_count@ptr2:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x1F
   427  000020                     	ds	1
   428  000021                     ?_UsartConfig:
   429                           	opt stack 0
   430  000021                     NumDisplay@Segment:
   431                           	opt stack 0
   432  000021                     UsartConfig@config1:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x20
   436  000021                     	ds	1
   437  000022                     ??_NumDisplay:
   438  000022                     UsartConfig@config2:
   439                           	opt stack 0
   440  000022                     Seq_count@ptr3:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x21
   444  000022                     	ds	1
   445  000023                     
   446                           ; 0 bytes @ 0x22
   447  000023                     	ds	1
   448  000024                     Seq_count@ptr4:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x23
   452  000024                     	ds	2
   453  000026                     ??_Display:
   454                           
   455                           ; 0 bytes @ 0x25
   456  000026                     	ds	1
   457  000027                     Display@x:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x26
   461  000027                     	ds	2
   462  000029                     Display@ptr:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x28
   466  000029                     	ds	2
   467  00002B                     ?_Set_TIME:
   468                           	opt stack 0
   469  00002B                     Set_TIME@str:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x2A
   473  00002B                     	ds	2
   474  00002D                     ??_main:
   475                           
   476                           ; 0 bytes @ 0x2C
   477  00002D                     	ds	1
   478  00002E                     main@config1:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x2D
   482  00002E                     	ds	1
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 138 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  config1         1   45[COMRAM] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;		None               void
   504 ;; Registers used:
   505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   511 ;;      Params:         0       0       0       0       0       0       0       0       0
   512 ;;      Locals:         1       0       0       0       0       0       0       0       0
   513 ;;      Temps:          1       0       0       0       0       0       0       0       0
   514 ;;      Totals:         2       0       0       0       0       0       0       0       0
   515 ;;Total ram usage:        2 bytes
   516 ;; Hardware stack levels required when called:    9
   517 ;; This function calls:
   518 ;;		_Display
   519 ;;		_Set_TIME
   520 ;;		_Config_Interrupt
   521 ;;		_UsartConfig
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text0
   528  0010A6                     __ptext0:
   529                           	opt stack 0
   530  0010A6                     _main:
   531                           	opt stack 22
   532                           
   533                           ;main.c: 140: unsigned char config1 = 0x00;
   534                           
   535                           ;incstack = 0
   536                           ;incstack = 0
   537  0010A6  6E2D               	movwf	??_main& (0+255),c
   538  0010A8  0E00               	movlw	0
   539  0010AA  6E2E               	movwf	main@config1,c
   540  0010AC  502D               	movf	??_main& (0+255),w,c
   541                           
   542                           ;main.c: 141: TRISBbits.TRISB0=0;
   543  0010AE  9093               	bcf	3987,0,c	;volatile
   544                           
   545                           ;main.c: 142: config1 = 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 &
      +                           0b11101111;
   546  0010B0  6E2D               	movwf	??_main& (0+255),c
   547  0010B2  0E2C               	movlw	44
   548  0010B4  6E2E               	movwf	main@config1,c
   549  0010B6  502D               	movf	??_main& (0+255),w,c
   550                           
   551                           ;main.c: 143: UsartConfig(config1, ((20000000/9600/64)-1));
   552  0010B8  C02E  F021         	movff	main@config1,?_UsartConfig
   553  0010BC  6E2D               	movwf	??_main& (0+255),c
   554  0010BE  0E1F               	movlw	31
   555  0010C0  6E22               	movwf	?_UsartConfig+1,c
   556  0010C2  502D               	movf	??_main& (0+255),w,c
   557  0010C4  EC25  F009         	call	_UsartConfig	;wreg free
   558                           
   559                           ;main.c: 145: Set_TIME(str);
   560  0010C8  0E00               	movlw	high _str
   561  0010CA  6E2C               	movwf	?_Set_TIME+1,c
   562  0010CC  0E4B               	movlw	low _str
   563  0010CE  6E2B               	movwf	?_Set_TIME,c
   564  0010D0  EC15  F008         	call	_Set_TIME	;wreg free
   565                           
   566                           ;main.c: 146: Config_Interrupt();
   567  0010D4  EC3B  F009         	call	_Config_Interrupt	;wreg free
   568  0010D8                     l987:
   569                           
   570                           ;main.c: 148: {
   571                           ;main.c: 149: Display();
   572  0010D8  EC06  F004         	call	_Display	;wreg free
   573  0010DC  D7FD               	goto	l987
   574  0010DE                     __end_of_main:
   575                           	opt stack 0
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           postdec1	equ	0xFE5
   583                           fsr1l	equ	0xFE1
   584                           
   585 ;; *************** function _UsartConfig *****************
   586 ;; Defined at:
   587 ;;		line 19 in file "uart_1.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  config1         1   32[COMRAM] unsigned char 
   590 ;;  config2         1   33[COMRAM] unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;		None               void
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         2       0       0       0       0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0
   605 ;;      Totals:         2       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        2 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    6
   609 ;; This function calls:
   610 ;;		_OpenUSART
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text1
   617  00124A                     __ptext1:
   618                           	opt stack 0
   619  00124A                     _UsartConfig:
   620                           	opt stack 24
   621                           
   622                           ;uart_1.c: 20: OpenUSART( config1, config2);
   623                           
   624                           ;incstack = 0
   625                           ;incstack = 0
   626  00124A  C021  F01E         	movff	UsartConfig@config1,?_OpenUSART
   627  00124E  C022  F01F         	movff	UsartConfig@config2,?_OpenUSART+1
   628  001252  6A20               	clrf	?_OpenUSART+2,c
   629  001254  ECBC  F007         	call	_OpenUSART	;wreg free
   630  001258  0012               	return	
   631  00125A                     __end_of_UsartConfig:
   632                           	opt stack 0
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642 ;; *************** function _OpenUSART *****************
   643 ;; Defined at:
   644 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  config          1   29[COMRAM] unsigned char 
   647 ;;  spbrg           2   30[COMRAM] unsigned int 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;		None               void
   652 ;; Registers used:
   653 ;;		wreg, status,2
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   659 ;;      Params:         3       0       0       0       0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0
   662 ;;      Totals:         3       0       0       0       0       0       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    5
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_UsartConfig
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text2
   674  000F78                     __ptext2:
   675                           	opt stack 0
   676  000F78                     _OpenUSART:
   677                           	opt stack 24
   678                           
   679                           ;incstack = 0
   680                           ;incstack = 0
   681  000F78  0E00               	movlw	0
   682  000F7A  6EAC               	movwf	4012,c	;volatile
   683  000F7C  0E00               	movlw	0
   684  000F7E  6EAB               	movwf	4011,c	;volatile
   685  000F80  B01E               	btfsc	OpenUSART@config,0,c
   686  000F82  88AC               	bsf	4012,4,c	;volatile
   687  000F84  A21E               	btfss	OpenUSART@config,1,c
   688  000F86  D002               	goto	l237
   689  000F88  8CAC               	bsf	4012,6,c	;volatile
   690  000F8A  8CAB               	bsf	4011,6,c	;volatile
   691  000F8C                     l237:
   692  000F8C  B41E               	btfsc	OpenUSART@config,2,c
   693  000F8E  8EAC               	bsf	4012,7,c	;volatile
   694  000F90  A61E               	btfss	OpenUSART@config,3,c
   695  000F92  D002               	goto	l239
   696  000F94  88AB               	bsf	4011,4,c	;volatile
   697  000F96  D001               	goto	l240
   698  000F98                     l239:
   699  000F98  8AAB               	bsf	4011,5,c	;volatile
   700  000F9A                     l240:
   701  000F9A  B81E               	btfsc	OpenUSART@config,4,c
   702  000F9C  84AC               	bsf	4012,2,c	;volatile
   703  000F9E  989E               	bcf	3998,4,c	;volatile
   704  000FA0  BA1E               	btfsc	OpenUSART@config,5,c
   705  000FA2  86AB               	bsf	4011,3,c	;volatile
   706  000FA4  AC1E               	btfss	OpenUSART@config,6,c
   707  000FA6  D002               	goto	l243
   708  000FA8  8A9D               	bsf	3997,5,c	;volatile
   709  000FAA  D001               	goto	l244
   710  000FAC                     l243:
   711  000FAC  9A9D               	bcf	3997,5,c	;volatile
   712  000FAE                     l244:
   713  000FAE  9A9E               	bcf	3998,5,c	;volatile
   714  000FB0  AE1E               	btfss	OpenUSART@config,7,c
   715  000FB2  D002               	goto	l245
   716  000FB4  889D               	bsf	3997,4,c	;volatile
   717  000FB6  D001               	goto	l246
   718  000FB8                     l245:
   719  000FB8  989D               	bcf	3997,4,c	;volatile
   720  000FBA                     l246:
   721  000FBA  C01F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   722  000FBE  5020               	movf	OpenUSART@spbrg+1,w,c
   723  000FC0  6EB0               	movwf	4016,c	;volatile
   724  000FC2  8AAC               	bsf	4012,5,c	;volatile
   725  000FC4  8EAB               	bsf	4011,7,c	;volatile
   726  000FC6  9C94               	bcf	3988,6,c	;volatile
   727  000FC8  8E94               	bsf	3988,7,c	;volatile
   728  000FCA  B8AC               	btfsc	4012,4,c	;volatile
   729  000FCC  BEAC               	btfsc	4012,7,c	;volatile
   730  000FCE  D001               	goto	l248
   731  000FD0  8C94               	bsf	3988,6,c	;volatile
   732  000FD2                     l248:
   733  000FD2  0012               	return	
   734  000FD4                     __end_of_OpenUSART:
   735                           	opt stack 0
   736                           tblptru	equ	0xFF8
   737                           tblptrh	equ	0xFF7
   738                           tblptrl	equ	0xFF6
   739                           tablat	equ	0xFF5
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           postdec1	equ	0xFE5
   743                           fsr1l	equ	0xFE1
   744                           
   745 ;; *************** function _Config_Interrupt *****************
   746 ;; Defined at:
   747 ;;		line 115 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;		None               void
   754 ;; Registers used:
   755 ;;		None
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   761 ;;      Params:         0       0       0       0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    5
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text3
   776  001276                     __ptext3:
   777                           	opt stack 0
   778  001276                     _Config_Interrupt:
   779                           	opt stack 25
   780                           
   781                           ;main.c: 116: RCIF = 0;
   782                           
   783                           ;incstack = 0
   784                           ;incstack = 0
   785  001276  9A9E               	bcf	3998,5,c	;volatile
   786                           
   787                           ;main.c: 117: RCIP = 0;
   788  001278  9A9F               	bcf	3999,5,c	;volatile
   789                           
   790                           ;main.c: 118: RCIE = 1;
   791  00127A  8A9D               	bsf	3997,5,c	;volatile
   792                           
   793                           ;main.c: 119: PEIE = 1;
   794  00127C  8CF2               	bsf	intcon,6,c	;volatile
   795                           
   796                           ;main.c: 120: (INTCONbits.GIE = 1);
   797  00127E  8EF2               	bsf	intcon,7,c	;volatile
   798  001280  0012               	return	
   799  001282                     __end_of_Config_Interrupt:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           intcon	equ	0xFF2
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           postdec1	equ	0xFE5
   809                           fsr1l	equ	0xFE1
   810                           
   811 ;; *************** function _Set_TIME *****************
   812 ;; Defined at:
   813 ;;		line 100 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  str             2   42[COMRAM] PTR unsigned char 
   816 ;;		 -> str(10), STR_2(5), STR_1(5), 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2   42[COMRAM] int 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         2       0       0       0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0
   831 ;;      Totals:         2       0       0       0       0       0       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    8
   835 ;; This function calls:
   836 ;;		_Format_DEC
   837 ;;		_Display
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text4
   844  00102A                     __ptext4:
   845                           	opt stack 0
   846  00102A                     _Set_TIME:
   847                           	opt stack 22
   848                           
   849                           ;main.c: 101: str = "1237";
   850                           
   851                           ;incstack = 0
   852                           ;incstack = 0
   853  00102A  0E08               	movlw	high STR_1
   854  00102C  6E2C               	movwf	Set_TIME@str+1,c
   855  00102E  0E05               	movlw	low STR_1
   856  001030  6E2B               	movwf	Set_TIME@str,c
   857                           
   858                           ;main.c: 106: Format_DEC(str, array);
   859  001032  C02B  F01E         	movff	Set_TIME@str,?_Format_DEC
   860  001036  C02C  F01F         	movff	Set_TIME@str+1,?_Format_DEC+1
   861  00103A  0E00               	movlw	high _array
   862  00103C  6E21               	movwf	?_Format_DEC+3,c
   863  00103E  0E55               	movlw	low _array
   864  001040  6E20               	movwf	?_Format_DEC+2,c
   865  001042  EC2C  F006         	call	_Format_DEC	;wreg free
   866                           
   867                           ;main.c: 110: str = "1234";
   868  001046  0E08               	movlw	high STR_2
   869  001048  6E2C               	movwf	Set_TIME@str+1,c
   870  00104A  0E00               	movlw	low STR_2
   871  00104C  6E2B               	movwf	Set_TIME@str,c
   872                           
   873                           ;main.c: 111: Format_DEC(str, array+4);
   874  00104E  C02B  F01E         	movff	Set_TIME@str,?_Format_DEC
   875  001052  C02C  F01F         	movff	Set_TIME@str+1,?_Format_DEC+1
   876  001056  0E00               	movlw	high (_array+4)
   877  001058  6E21               	movwf	?_Format_DEC+3,c
   878  00105A  0E59               	movlw	low (_array+4)
   879  00105C  6E20               	movwf	?_Format_DEC+2,c
   880  00105E  EC2C  F006         	call	_Format_DEC	;wreg free
   881                           
   882                           ;main.c: 112: Display();
   883  001062  EC06  F004         	call	_Display	;wreg free
   884  001066  0012               	return	
   885  001068                     __end_of_Set_TIME:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           postdec1	equ	0xFE5
   895                           fsr1l	equ	0xFE1
   896                           
   897 ;; *************** function _Display *****************
   898 ;; Defined at:
   899 ;;		line 69 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  ptr             2   40[COMRAM] PTR unsigned char 
   904 ;;		 -> array(7), 
   905 ;;  x               2   38[COMRAM] int 
   906 ;; Return value:  Size  Location     Type
   907 ;;		None               void
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         4       0       0       0       0       0       0       0       0
   917 ;;      Temps:          1       0       0       0       0       0       0       0       0
   918 ;;      Totals:         5       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        5 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    7
   922 ;; This function calls:
   923 ;;		_Switch_Relay
   924 ;;		_NumDisplay
   925 ;;		_Delay_s_
   926 ;;		_Seq_count
   927 ;; This function is called by:
   928 ;;		_Set_TIME
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text5
   934  00080C                     __ptext5:
   935                           	opt stack 0
   936  00080C                     _Display:
   937                           	opt stack 22
   938                           
   939                           ;main.c: 70: unsigned char *ptr = array;
   940                           
   941                           ;incstack = 0
   942                           ;incstack = 0
   943  00080C  0E00               	movlw	high _array
   944  00080E  6E2A               	movwf	Display@ptr+1,c
   945  000810  0E55               	movlw	low _array
   946  000812  6E29               	movwf	Display@ptr,c
   947                           
   948                           ;main.c: 71: if((Num1==*ptr)&&(Num2== *(ptr+1))&&(Num3==*(ptr+2))&&(Num4==*(ptr+3)))
   949  000814  5045               	movf	_Num1,w,c
   950  000816  C029  FFD9         	movff	Display@ptr,fsr2l
   951  00081A  C02A  FFDA         	movff	Display@ptr+1,fsr2h
   952  00081E  62DF               	cpfseq	indf2,c
   953  000820  D022               	goto	l911
   954  000822  EE20 F001          	lfsr	2,1
   955  000826  5029               	movf	Display@ptr,w,c
   956  000828  26D9               	addwf	fsr2l,f,c
   957  00082A  502A               	movf	Display@ptr+1,w,c
   958  00082C  22DA               	addwfc	fsr2h,f,c
   959  00082E  5046               	movf	_Num2,w,c
   960  000830  62DF               	cpfseq	indf2,c
   961  000832  D019               	goto	l911
   962  000834  EE20 F002          	lfsr	2,2
   963  000838  5029               	movf	Display@ptr,w,c
   964  00083A  26D9               	addwf	fsr2l,f,c
   965  00083C  502A               	movf	Display@ptr+1,w,c
   966  00083E  22DA               	addwfc	fsr2h,f,c
   967  000840  5047               	movf	_Num3,w,c
   968  000842  62DF               	cpfseq	indf2,c
   969  000844  D010               	goto	l911
   970  000846  EE20 F003          	lfsr	2,3
   971  00084A  5029               	movf	Display@ptr,w,c
   972  00084C  26D9               	addwf	fsr2l,f,c
   973  00084E  502A               	movf	Display@ptr+1,w,c
   974  000850  22DA               	addwfc	fsr2h,f,c
   975  000852  5048               	movf	_Num4,w,c
   976  000854  62DF               	cpfseq	indf2,c
   977  000856  D007               	goto	l911
   978                           
   979                           ;main.c: 72: {
   980                           ;main.c: 73: Switch_Relay(1);
   981  000858  6E26               	movwf	??_Display& (0+255),c
   982  00085A  0E01               	movlw	1
   983  00085C  6E1E               	movwf	?_Switch_Relay,c
   984  00085E  5026               	movf	??_Display& (0+255),w,c
   985  000860  ECE9  F008         	call	_Switch_Relay	;wreg free
   986                           
   987                           ;main.c: 74: }
   988  000864  D02A               	goto	l921
   989  000866                     l911:
   990                           
   991                           ;main.c: 75: else if((Num1==*(ptr+4))&&(Num2==*(ptr+5))&&(Num3==*(ptr+6))&&(Num4==*(ptr+
      +                          7)))
   992  000866  EE20 F004          	lfsr	2,4
   993  00086A  5029               	movf	Display@ptr,w,c
   994  00086C  26D9               	addwf	fsr2l,f,c
   995  00086E  502A               	movf	Display@ptr+1,w,c
   996  000870  22DA               	addwfc	fsr2h,f,c
   997  000872  5045               	movf	_Num1,w,c
   998  000874  62DF               	cpfseq	indf2,c
   999  000876  D021               	goto	l921
  1000  000878  EE20 F005          	lfsr	2,5
  1001  00087C  5029               	movf	Display@ptr,w,c
  1002  00087E  26D9               	addwf	fsr2l,f,c
  1003  000880  502A               	movf	Display@ptr+1,w,c
  1004  000882  22DA               	addwfc	fsr2h,f,c
  1005  000884  5046               	movf	_Num2,w,c
  1006  000886  62DF               	cpfseq	indf2,c
  1007  000888  D018               	goto	l921
  1008  00088A  EE20 F006          	lfsr	2,6
  1009  00088E  5029               	movf	Display@ptr,w,c
  1010  000890  26D9               	addwf	fsr2l,f,c
  1011  000892  502A               	movf	Display@ptr+1,w,c
  1012  000894  22DA               	addwfc	fsr2h,f,c
  1013  000896  5047               	movf	_Num3,w,c
  1014  000898  62DF               	cpfseq	indf2,c
  1015  00089A  D00F               	goto	l921
  1016  00089C  EE20 F007          	lfsr	2,7
  1017  0008A0  5029               	movf	Display@ptr,w,c
  1018  0008A2  26D9               	addwf	fsr2l,f,c
  1019  0008A4  502A               	movf	Display@ptr+1,w,c
  1020  0008A6  22DA               	addwfc	fsr2h,f,c
  1021  0008A8  5048               	movf	_Num4,w,c
  1022  0008AA  62DF               	cpfseq	indf2,c
  1023  0008AC  D006               	goto	l921
  1024                           
  1025                           ;main.c: 76: {
  1026                           ;main.c: 77: Switch_Relay(0);
  1027  0008AE  6E26               	movwf	??_Display& (0+255),c
  1028  0008B0  0E00               	movlw	0
  1029  0008B2  6E1E               	movwf	?_Switch_Relay,c
  1030  0008B4  5026               	movf	??_Display& (0+255),w,c
  1031  0008B6  ECE9  F008         	call	_Switch_Relay	;wreg free
  1032  0008BA                     l921:
  1033                           
  1034                           ;main.c: 78: }
  1035                           ;main.c: 79: int x = 0;
  1036  0008BA  0E00               	movlw	0
  1037  0008BC  6E28               	movwf	Display@x+1,c
  1038  0008BE  0E00               	movlw	0
  1039  0008C0  6E27               	movwf	Display@x,c
  1040                           
  1041                           ;main.c: 80: while(x<63)
  1042  0008C2  D02A               	goto	l927
  1043  0008C4                     l923:
  1044                           
  1045                           ;main.c: 81: {
  1046                           ;main.c: 82: NumDisplay(Num1, 1);
  1047  0008C4  C045  F020         	movff	_Num1,?_NumDisplay
  1048  0008C8  6E26               	movwf	??_Display& (0+255),c
  1049  0008CA  0E01               	movlw	1
  1050  0008CC  6E21               	movwf	?_NumDisplay+1,c
  1051  0008CE  5026               	movf	??_Display& (0+255),w,c
  1052  0008D0  ECA1  F008         	call	_NumDisplay	;wreg free
  1053                           
  1054                           ;main.c: 83: Delay_s_();
  1055  0008D4  EC2D  F009         	call	_Delay_s_	;wreg free
  1056                           
  1057                           ;main.c: 84: NumDisplay(Num2, 2);
  1058  0008D8  C046  F020         	movff	_Num2,?_NumDisplay
  1059  0008DC  6E26               	movwf	??_Display& (0+255),c
  1060  0008DE  0E02               	movlw	2
  1061  0008E0  6E21               	movwf	?_NumDisplay+1,c
  1062  0008E2  5026               	movf	??_Display& (0+255),w,c
  1063  0008E4  ECA1  F008         	call	_NumDisplay	;wreg free
  1064                           
  1065                           ;main.c: 85: Delay_s_();
  1066  0008E8  EC2D  F009         	call	_Delay_s_	;wreg free
  1067                           
  1068                           ;main.c: 86: NumDisplay(Num3, 3);
  1069  0008EC  C047  F020         	movff	_Num3,?_NumDisplay
  1070  0008F0  6E26               	movwf	??_Display& (0+255),c
  1071  0008F2  0E03               	movlw	3
  1072  0008F4  6E21               	movwf	?_NumDisplay+1,c
  1073  0008F6  5026               	movf	??_Display& (0+255),w,c
  1074  0008F8  ECA1  F008         	call	_NumDisplay	;wreg free
  1075                           
  1076                           ;main.c: 87: Delay_s_();
  1077  0008FC  EC2D  F009         	call	_Delay_s_	;wreg free
  1078                           
  1079                           ;main.c: 88: NumDisplay(Num4, 4);
  1080  000900  C048  F020         	movff	_Num4,?_NumDisplay
  1081  000904  6E26               	movwf	??_Display& (0+255),c
  1082  000906  0E04               	movlw	4
  1083  000908  6E21               	movwf	?_NumDisplay+1,c
  1084  00090A  5026               	movf	??_Display& (0+255),w,c
  1085  00090C  ECA1  F008         	call	_NumDisplay	;wreg free
  1086                           
  1087                           ;main.c: 89: Delay_s_();
  1088  000910  EC2D  F009         	call	_Delay_s_	;wreg free
  1089                           
  1090                           ;main.c: 90: x++;
  1091  000914  4A27               	infsnz	Display@x,f,c
  1092  000916  2A28               	incf	Display@x+1,f,c
  1093  000918                     l927:
  1094  000918  5028               	movf	Display@x+1,w,c
  1095  00091A  0A80               	xorlw	128
  1096  00091C  0F80               	addlw	-128
  1097  00091E  0E3F               	movlw	63
  1098  000920  B4D8               	btfsc	status,2,c
  1099  000922  5C27               	subwf	Display@x,w,c
  1100  000924  A0D8               	btfss	status,0,c
  1101  000926  D7CE               	goto	l923
  1102                           
  1103                           ;main.c: 91: }
  1104                           ;main.c: 92: Seq_count(&Num1, &Num2, &Num3, &Num4);
  1105  000928  0E00               	movlw	high _Num1
  1106  00092A  6E1F               	movwf	?_Seq_count+1,c
  1107  00092C  0E45               	movlw	low _Num1
  1108  00092E  6E1E               	movwf	?_Seq_count,c
  1109  000930  0E00               	movlw	high _Num2
  1110  000932  6E21               	movwf	?_Seq_count+3,c
  1111  000934  0E46               	movlw	low _Num2
  1112  000936  6E20               	movwf	?_Seq_count+2,c
  1113  000938  0E00               	movlw	high _Num3
  1114  00093A  6E23               	movwf	?_Seq_count+5,c
  1115  00093C  0E47               	movlw	low _Num3
  1116  00093E  6E22               	movwf	?_Seq_count+4,c
  1117  000940  0E00               	movlw	high _Num4
  1118  000942  6E25               	movwf	?_Seq_count+7,c
  1119  000944  0E48               	movlw	low _Num4
  1120  000946  6E24               	movwf	?_Seq_count+6,c
  1121  000948  ECE6  F006         	call	_Seq_count	;wreg free
  1122  00094C  0012               	return	
  1123  00094E                     __end_of_Display:
  1124                           	opt stack 0
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           intcon	equ	0xFF2
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           postdec1	equ	0xFE5
  1133                           fsr1l	equ	0xFE1
  1134                           indf2	equ	0xFDF
  1135                           fsr2h	equ	0xFDA
  1136                           fsr2l	equ	0xFD9
  1137                           status	equ	0xFD8
  1138                           
  1139 ;; *************** function _Seq_count *****************
  1140 ;; Defined at:
  1141 ;;		line 12 in file "counter.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  ptr1            2   29[COMRAM] PTR unsigned char 
  1144 ;;		 -> Num1(1), 
  1145 ;;  ptr2            2   31[COMRAM] PTR unsigned char 
  1146 ;;		 -> Num2(1), 
  1147 ;;  ptr3            2   33[COMRAM] PTR unsigned char 
  1148 ;;		 -> Num3(1), 
  1149 ;;  ptr4            2   35[COMRAM] PTR unsigned char 
  1150 ;;		 -> Num4(1), 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;		None               void
  1155 ;; Registers used:
  1156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1162 ;;      Params:         8       0       0       0       0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1165 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1166 ;;Total ram usage:        8 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    5
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_Display
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text6
  1177  000DCC                     __ptext6:
  1178                           	opt stack 0
  1179  000DCC                     _Seq_count:
  1180                           	opt stack 23
  1181                           
  1182                           ;counter.c: 13: ++*ptr1;
  1183                           
  1184                           ;incstack = 0
  1185                           ;incstack = 0
  1186  000DCC  C01E  FFD9         	movff	Seq_count@ptr1,fsr2l
  1187  000DD0  C01F  FFDA         	movff	Seq_count@ptr1+1,fsr2h
  1188  000DD4  2ADF               	incf	indf2,f,c
  1189                           
  1190                           ;counter.c: 14: if(*ptr1==10)
  1191  000DD6  0E0A               	movlw	10
  1192  000DD8  C01E  FFD9         	movff	Seq_count@ptr1,fsr2l
  1193  000DDC  C01F  FFDA         	movff	Seq_count@ptr1+1,fsr2h
  1194  000DE0  62DF               	cpfseq	indf2,c
  1195  000DE2  D03C               	goto	l169
  1196                           
  1197                           ;counter.c: 15: {
  1198                           ;counter.c: 16: ++*ptr2;
  1199  000DE4  C020  FFD9         	movff	Seq_count@ptr2,fsr2l
  1200  000DE8  C021  FFDA         	movff	Seq_count@ptr2+1,fsr2h
  1201  000DEC  2ADF               	incf	indf2,f,c
  1202                           
  1203                           ;counter.c: 17: *ptr1 = 0;
  1204  000DEE  C01E  FFD9         	movff	Seq_count@ptr1,fsr2l
  1205  000DF2  C01F  FFDA         	movff	Seq_count@ptr1+1,fsr2h
  1206  000DF6  0E00               	movlw	0
  1207  000DF8  6EDF               	movwf	indf2,c
  1208                           
  1209                           ;counter.c: 18: if(*ptr2==6)
  1210  000DFA  0E06               	movlw	6
  1211  000DFC  C020  FFD9         	movff	Seq_count@ptr2,fsr2l
  1212  000E00  C021  FFDA         	movff	Seq_count@ptr2+1,fsr2h
  1213  000E04  62DF               	cpfseq	indf2,c
  1214  000E06  D02A               	goto	l169
  1215                           
  1216                           ;counter.c: 19: {
  1217                           ;counter.c: 20: ++*ptr3;
  1218  000E08  C022  FFD9         	movff	Seq_count@ptr3,fsr2l
  1219  000E0C  C023  FFDA         	movff	Seq_count@ptr3+1,fsr2h
  1220  000E10  2ADF               	incf	indf2,f,c
  1221                           
  1222                           ;counter.c: 21: *ptr2=0;
  1223  000E12  C020  FFD9         	movff	Seq_count@ptr2,fsr2l
  1224  000E16  C021  FFDA         	movff	Seq_count@ptr2+1,fsr2h
  1225  000E1A  0E00               	movlw	0
  1226  000E1C  6EDF               	movwf	indf2,c
  1227                           
  1228                           ;counter.c: 22: if(*ptr3==10)
  1229  000E1E  0E0A               	movlw	10
  1230  000E20  C022  FFD9         	movff	Seq_count@ptr3,fsr2l
  1231  000E24  C023  FFDA         	movff	Seq_count@ptr3+1,fsr2h
  1232  000E28  62DF               	cpfseq	indf2,c
  1233  000E2A  D018               	goto	l169
  1234                           
  1235                           ;counter.c: 23: {
  1236                           ;counter.c: 24: ++*ptr4;
  1237  000E2C  C024  FFD9         	movff	Seq_count@ptr4,fsr2l
  1238  000E30  C025  FFDA         	movff	Seq_count@ptr4+1,fsr2h
  1239  000E34  2ADF               	incf	indf2,f,c
  1240                           
  1241                           ;counter.c: 25: *ptr3=0;
  1242  000E36  C022  FFD9         	movff	Seq_count@ptr3,fsr2l
  1243  000E3A  C023  FFDA         	movff	Seq_count@ptr3+1,fsr2h
  1244  000E3E  0E00               	movlw	0
  1245  000E40  6EDF               	movwf	indf2,c
  1246                           
  1247                           ;counter.c: 26: if(*ptr4==6)
  1248  000E42  0E06               	movlw	6
  1249  000E44  C024  FFD9         	movff	Seq_count@ptr4,fsr2l
  1250  000E48  C025  FFDA         	movff	Seq_count@ptr4+1,fsr2h
  1251  000E4C  62DF               	cpfseq	indf2,c
  1252  000E4E  D006               	goto	l169
  1253                           
  1254                           ;counter.c: 27: {
  1255                           ;counter.c: 28: *ptr4=0;
  1256  000E50  C024  FFD9         	movff	Seq_count@ptr4,fsr2l
  1257  000E54  C025  FFDA         	movff	Seq_count@ptr4+1,fsr2h
  1258  000E58  0E00               	movlw	0
  1259  000E5A  6EDF               	movwf	indf2,c
  1260  000E5C                     l169:
  1261  000E5C  0012               	return	
  1262  000E5E                     __end_of_Seq_count:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           intcon	equ	0xFF2
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           postdec1	equ	0xFE5
  1272                           fsr1l	equ	0xFE1
  1273                           indf2	equ	0xFDF
  1274                           fsr2h	equ	0xFDA
  1275                           fsr2l	equ	0xFD9
  1276                           status	equ	0xFD8
  1277                           
  1278 ;; *************** function _Delay_s_ *****************
  1279 ;; Defined at:
  1280 ;;		line 48 in file "delay.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;		None               void
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1296 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1297 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1298 ;;Total ram usage:        1 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    6
  1301 ;; This function calls:
  1302 ;;		_Delay10KTCYx
  1303 ;; This function is called by:
  1304 ;;		_Display
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text7
  1309  00125A                     __ptext7:
  1310                           	opt stack 0
  1311  00125A                     _Delay_s_:
  1312                           	opt stack 22
  1313                           
  1314                           ;delay.c: 49: Delay10KTCYx(2);
  1315                           
  1316                           ;incstack = 0
  1317                           ;incstack = 0
  1318  00125A  6E20               	movwf	??_Delay_s_& (0+255),c
  1319  00125C  0E02               	movlw	2
  1320  00125E  6E1E               	movwf	?_Delay10KTCYx,c
  1321  001260  5020               	movf	??_Delay_s_& (0+255),w,c
  1322  001262  EC0F  F009         	call	_Delay10KTCYx	;wreg free
  1323  001266  0012               	return	
  1324  001268                     __end_of_Delay_s_:
  1325                           	opt stack 0
  1326                           tblptru	equ	0xFF8
  1327                           tblptrh	equ	0xFF7
  1328                           tblptrl	equ	0xFF6
  1329                           tablat	equ	0xFF5
  1330                           intcon	equ	0xFF2
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           postdec1	equ	0xFE5
  1334                           fsr1l	equ	0xFE1
  1335                           indf2	equ	0xFDF
  1336                           fsr2h	equ	0xFDA
  1337                           fsr2l	equ	0xFD9
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _Delay10KTCYx *****************
  1341 ;; Defined at:
  1342 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d10ktcyx.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  unit            1   29[COMRAM] unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1356 ;;      Params:         1       0       0       0       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1358 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1359 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    5
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_Delay_s_
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text8
  1371  00121E                     __ptext8:
  1372                           	opt stack 0
  1373  00121E                     _Delay10KTCYx:
  1374                           	opt stack 22
  1375  00121E                     l483:
  1376  00121E  0E0D               	movlw	13
  1377  001220  6E1F               	movwf	??_Delay10KTCYx& (0+255),c
  1378  001222  0EFB               	movlw	251
  1379  001224                     u907:
  1380  001224  2EE8               	decfsz	wreg,f,c
  1381  001226  D7FE               	goto	u907
  1382  001228  2E1F               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1383  00122A  D7FC               	goto	u907
  1384  00122C  D000               	nop2	
  1385  00122E  2E1E               	decfsz	Delay10KTCYx@unit,f,c
  1386  001230  D7F6               	goto	l483
  1387  001232  0012               	return	
  1388  001234                     __end_of_Delay10KTCYx:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           intcon	equ	0xFF2
  1395                           postinc0	equ	0xFEE
  1396                           wreg	equ	0xFE8
  1397                           postdec1	equ	0xFE5
  1398                           fsr1l	equ	0xFE1
  1399                           indf2	equ	0xFDF
  1400                           fsr2h	equ	0xFDA
  1401                           fsr2l	equ	0xFD9
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _NumDisplay *****************
  1405 ;; Defined at:
  1406 ;;		line 162 in file "segment.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  Number          1   31[COMRAM] unsigned char 
  1409 ;;  Segment         1   32[COMRAM] unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;		None               void
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1421 ;;      Params:         2       0       0       0       0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1423 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1424 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1425 ;;Total ram usage:        3 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    6
  1428 ;; This function calls:
  1429 ;;		_Segment_init
  1430 ;;		_DisplayValue
  1431 ;; This function is called by:
  1432 ;;		_Display
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text9
  1437  001142                     __ptext9:
  1438                           	opt stack 0
  1439  001142                     _NumDisplay:
  1440                           	opt stack 22
  1441                           
  1442                           ;segment.c: 163: Segment_init(Segment);
  1443                           
  1444                           ;incstack = 0
  1445                           ;incstack = 0
  1446  001142  C021  F01E         	movff	NumDisplay@Segment,?_Segment_init
  1447  001146  EC6F  F008         	call	_Segment_init	;wreg free
  1448                           
  1449                           ;segment.c: 164: if(Segment == 3 )
  1450  00114A  5021               	movf	NumDisplay@Segment,w,c
  1451  00114C  0A03               	xorlw	3
  1452  00114E  A4D8               	btfss	status,2,c
  1453  001150  D003               	goto	l937
  1454                           
  1455                           ;segment.c: 165: dot = 1;
  1456  001152  6E22               	movwf	??_NumDisplay& (0+255),c
  1457  001154  0E01               	movlw	1
  1458  001156  D002               	goto	L1
  1459  001158                     l937:
  1460                           
  1461                           ;segment.c: 166: else
  1462                           ;segment.c: 167: dot = 0;
  1463  001158  6E22               	movwf	??_NumDisplay& (0+255),c
  1464  00115A  0E00               	movlw	0
  1465  00115C                     L1:
  1466  00115C  6E4A               	movwf	_dot,c
  1467  00115E  5022               	movf	??_NumDisplay& (0+255),w,c
  1468                           
  1469                           ;segment.c: 168: DisplayValue(Number);
  1470  001160  C020  F01E         	movff	NumDisplay@Number,?_DisplayValue
  1471  001164  EC48  F005         	call	_DisplayValue	;wreg free
  1472  001168  0012               	return	
  1473  00116A                     __end_of_NumDisplay:
  1474                           	opt stack 0
  1475                           tblptru	equ	0xFF8
  1476                           tblptrh	equ	0xFF7
  1477                           tblptrl	equ	0xFF6
  1478                           tablat	equ	0xFF5
  1479                           intcon	equ	0xFF2
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           postdec1	equ	0xFE5
  1483                           fsr1l	equ	0xFE1
  1484                           indf2	equ	0xFDF
  1485                           fsr2h	equ	0xFDA
  1486                           fsr2l	equ	0xFD9
  1487                           status	equ	0xFD8
  1488                           
  1489 ;; *************** function _DisplayValue *****************
  1490 ;; Defined at:
  1491 ;;		line 81 in file "segment.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  Number          1   29[COMRAM] unsigned char 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;		None               void
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1505 ;;      Params:         1       0       0       0       0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1507 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1508 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1509 ;;Total ram usage:        2 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    5
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_NumDisplay
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text10
  1520  000A90                     __ptext10:
  1521                           	opt stack 0
  1522  000A90                     _DisplayValue:
  1523                           	opt stack 22
  1524                           
  1525                           ;segment.c: 82: if(dot==1)
  1526                           
  1527                           ;incstack = 0
  1528                           ;incstack = 0
  1529  000A90  044A               	decf	_dot,w,c
  1530  000A92  B4D8               	btfsc	status,2,c
  1531  000A94  D016               	goto	l1077
  1532  000A96  D04E               	goto	l1103
  1533  000A98                     l1055:
  1534                           
  1535                           ;segment.c: 87: PORTD = ((0b11000000) & (0b01111111));
  1536  000A98  0E40               	movlw	64
  1537  000A9A  D011               	goto	L10
  1538  000A9C                     l1057:
  1539                           
  1540                           ;segment.c: 90: PORTD = ((0b11111001) & (0b01111111));
  1541  000A9C  0E79               	movlw	121
  1542  000A9E  D00F               	goto	L10
  1543  000AA0                     l1059:
  1544                           
  1545                           ;segment.c: 93: PORTD = ((0b10100100) & (0b01111111));
  1546  000AA0  0E24               	movlw	36
  1547  000AA2  D00D               	goto	L10
  1548  000AA4                     l1061:
  1549                           
  1550                           ;segment.c: 96: PORTD = ((0b10110000) & (0b01111111));
  1551  000AA4  0E30               	movlw	48
  1552  000AA6  D00B               	goto	L10
  1553  000AA8                     l1063:
  1554                           
  1555                           ;segment.c: 99: PORTD = ((0b10011001) & (0b01111111));
  1556  000AA8  0E19               	movlw	25
  1557  000AAA  D009               	goto	L10
  1558  000AAC                     l1065:
  1559                           
  1560                           ;segment.c: 102: PORTD = ((0b10010010) & (0b01111111));
  1561  000AAC  0E12               	movlw	18
  1562  000AAE  D007               	goto	L10
  1563  000AB0                     l1067:
  1564                           
  1565                           ;segment.c: 105: PORTD = ((0b10000010) & (0b01111111));
  1566  000AB0  0E02               	movlw	2
  1567  000AB2  D005               	goto	L10
  1568  000AB4                     l1069:
  1569                           
  1570                           ;segment.c: 108: PORTD = ((0b11111000) & (0b01111111));
  1571  000AB4  0E78               	movlw	120
  1572  000AB6  D003               	goto	L10
  1573  000AB8                     l1071:
  1574                           
  1575                           ;segment.c: 111: PORTD = ((0b10000000) & (0b01111111));
  1576  000AB8  0E00               	movlw	0
  1577  000ABA  D001               	goto	L10
  1578  000ABC                     l1073:
  1579                           
  1580                           ;segment.c: 114: PORTD = ((0b10010000) & (0b01111111));
  1581  000ABC  0E10               	movlw	16
  1582  000ABE                     L10:
  1583  000ABE  6E83               	movwf	3971,c	;volatile
  1584                           
  1585                           ;segment.c: 115: break;
  1586  000AC0  D01F               	goto	l1079
  1587  000AC2                     l1077:
  1588  000AC2  501E               	movf	DisplayValue@Number,w,c
  1589                           
  1590                           ; Switch size 1, requested type "space"
  1591                           ; Number of cases is 10, Range of values is 0 to 9
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte           31    16 (average)
  1595                           ;	Chosen strategy is simple_byte
  1596  000AC4  0A00               	xorlw	0	; case 0
  1597  000AC6  B4D8               	btfsc	status,2,c
  1598  000AC8  D7E7               	goto	l1055
  1599  000ACA  0A01               	xorlw	1	; case 1
  1600  000ACC  B4D8               	btfsc	status,2,c
  1601  000ACE  D7E6               	goto	l1057
  1602  000AD0  0A03               	xorlw	3	; case 2
  1603  000AD2  B4D8               	btfsc	status,2,c
  1604  000AD4  D7E5               	goto	l1059
  1605  000AD6  0A01               	xorlw	1	; case 3
  1606  000AD8  B4D8               	btfsc	status,2,c
  1607  000ADA  D7E4               	goto	l1061
  1608  000ADC  0A07               	xorlw	7	; case 4
  1609  000ADE  B4D8               	btfsc	status,2,c
  1610  000AE0  D7E3               	goto	l1063
  1611  000AE2  0A01               	xorlw	1	; case 5
  1612  000AE4  B4D8               	btfsc	status,2,c
  1613  000AE6  D7E2               	goto	l1065
  1614  000AE8  0A03               	xorlw	3	; case 6
  1615  000AEA  B4D8               	btfsc	status,2,c
  1616  000AEC  D7E1               	goto	l1067
  1617  000AEE  0A01               	xorlw	1	; case 7
  1618  000AF0  B4D8               	btfsc	status,2,c
  1619  000AF2  D7E0               	goto	l1069
  1620  000AF4  0A0F               	xorlw	15	; case 8
  1621  000AF6  B4D8               	btfsc	status,2,c
  1622  000AF8  D7DF               	goto	l1071
  1623  000AFA  0A01               	xorlw	1	; case 9
  1624  000AFC  B4D8               	btfsc	status,2,c
  1625  000AFE  D7DE               	goto	l1073
  1626  000B00                     l1079:
  1627                           
  1628                           ;segment.c: 118: dot=0;
  1629  000B00  6E1F               	movwf	??_DisplayValue& (0+255),c
  1630  000B02  0E00               	movlw	0
  1631  000B04  6E4A               	movwf	_dot,c
  1632  000B06  501F               	movf	??_DisplayValue& (0+255),w,c
  1633                           
  1634                           ;segment.c: 119: }
  1635  000B08  D034               	goto	l157
  1636  000B0A                     l1081:
  1637                           
  1638                           ;segment.c: 126: PORTD = 0b11000000;
  1639  000B0A  0EC0               	movlw	192
  1640  000B0C  D011               	goto	L19
  1641  000B0E                     l1083:
  1642                           
  1643                           ;segment.c: 129: PORTD = 0b11111001;
  1644  000B0E  0EF9               	movlw	249
  1645  000B10  D00F               	goto	L19
  1646  000B12                     l1085:
  1647                           
  1648                           ;segment.c: 132: PORTD = 0b10100100;
  1649  000B12  0EA4               	movlw	164
  1650  000B14  D00D               	goto	L19
  1651  000B16                     l1087:
  1652                           
  1653                           ;segment.c: 135: PORTD = 0b10110000;
  1654  000B16  0EB0               	movlw	176
  1655  000B18  D00B               	goto	L19
  1656  000B1A                     l1089:
  1657                           
  1658                           ;segment.c: 138: PORTD = 0b10011001;
  1659  000B1A  0E99               	movlw	153
  1660  000B1C  D009               	goto	L19
  1661  000B1E                     l1091:
  1662                           
  1663                           ;segment.c: 141: PORTD = 0b10010010;
  1664  000B1E  0E92               	movlw	146
  1665  000B20  D007               	goto	L19
  1666  000B22                     l1093:
  1667                           
  1668                           ;segment.c: 144: PORTD = 0b10000010;
  1669  000B22  0E82               	movlw	130
  1670  000B24  D005               	goto	L19
  1671  000B26                     l1095:
  1672                           
  1673                           ;segment.c: 147: PORTD = 0b11111000;
  1674  000B26  0EF8               	movlw	248
  1675  000B28  D003               	goto	L19
  1676  000B2A                     l1097:
  1677                           
  1678                           ;segment.c: 150: PORTD = 0b10000000;
  1679  000B2A  0E80               	movlw	128
  1680  000B2C  D001               	goto	L19
  1681  000B2E                     l1099:
  1682                           
  1683                           ;segment.c: 153: PORTD = 0b10010000;
  1684  000B2E  0E90               	movlw	144
  1685  000B30                     L19:
  1686  000B30  6E83               	movwf	3971,c	;volatile
  1687                           
  1688                           ;segment.c: 154: break;
  1689  000B32  D01F               	goto	l157
  1690  000B34                     l1103:
  1691  000B34  501E               	movf	DisplayValue@Number,w,c
  1692                           
  1693                           ; Switch size 1, requested type "space"
  1694                           ; Number of cases is 10, Range of values is 0 to 9
  1695                           ; switch strategies available:
  1696                           ; Name         Instructions Cycles
  1697                           ; simple_byte           31    16 (average)
  1698                           ;	Chosen strategy is simple_byte
  1699  000B36  0A00               	xorlw	0	; case 0
  1700  000B38  B4D8               	btfsc	status,2,c
  1701  000B3A  D7E7               	goto	l1081
  1702  000B3C  0A01               	xorlw	1	; case 1
  1703  000B3E  B4D8               	btfsc	status,2,c
  1704  000B40  D7E6               	goto	l1083
  1705  000B42  0A03               	xorlw	3	; case 2
  1706  000B44  B4D8               	btfsc	status,2,c
  1707  000B46  D7E5               	goto	l1085
  1708  000B48  0A01               	xorlw	1	; case 3
  1709  000B4A  B4D8               	btfsc	status,2,c
  1710  000B4C  D7E4               	goto	l1087
  1711  000B4E  0A07               	xorlw	7	; case 4
  1712  000B50  B4D8               	btfsc	status,2,c
  1713  000B52  D7E3               	goto	l1089
  1714  000B54  0A01               	xorlw	1	; case 5
  1715  000B56  B4D8               	btfsc	status,2,c
  1716  000B58  D7E2               	goto	l1091
  1717  000B5A  0A03               	xorlw	3	; case 6
  1718  000B5C  B4D8               	btfsc	status,2,c
  1719  000B5E  D7E1               	goto	l1093
  1720  000B60  0A01               	xorlw	1	; case 7
  1721  000B62  B4D8               	btfsc	status,2,c
  1722  000B64  D7E0               	goto	l1095
  1723  000B66  0A0F               	xorlw	15	; case 8
  1724  000B68  B4D8               	btfsc	status,2,c
  1725  000B6A  D7DF               	goto	l1097
  1726  000B6C  0A01               	xorlw	1	; case 9
  1727  000B6E  B4D8               	btfsc	status,2,c
  1728  000B70  D7DE               	goto	l1099
  1729  000B72                     l157:
  1730  000B72  0012               	return	
  1731  000B74                     __end_of_DisplayValue:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           intcon	equ	0xFF2
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1l	equ	0xFE1
  1742                           indf2	equ	0xFDF
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _Segment_init *****************
  1748 ;; Defined at:
  1749 ;;		line 58 in file "segment.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  Segment         1   29[COMRAM] unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;		None               void
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1763 ;;      Params:         1       0       0       0       0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1766 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1767 ;;Total ram usage:        1 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    5
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_NumDisplay
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text11
  1778  0010DE                     __ptext11:
  1779                           	opt stack 0
  1780  0010DE                     _Segment_init:
  1781                           	opt stack 22
  1782                           
  1783                           ;segment.c: 62: TRISD = 0x00;
  1784                           
  1785                           ;incstack = 0
  1786                           ;incstack = 0
  1787  0010DE  0E00               	movlw	0
  1788  0010E0  6E95               	movwf	3989,c	;volatile
  1789                           
  1790                           ;segment.c: 63: TRISAbits.TRISA0 = 0;
  1791  0010E2  9092               	bcf	3986,0,c	;volatile
  1792                           
  1793                           ;segment.c: 64: TRISAbits.TRISA1 = 0;
  1794  0010E4  9292               	bcf	3986,1,c	;volatile
  1795                           
  1796                           ;segment.c: 65: TRISAbits.TRISA2 = 0;
  1797  0010E6  9492               	bcf	3986,2,c	;volatile
  1798                           
  1799                           ;segment.c: 66: TRISAbits.TRISA3 = 0;
  1800  0010E8  9692               	bcf	3986,3,c	;volatile
  1801                           
  1802                           ;segment.c: 69: if(Segment == 1)
  1803  0010EA  041E               	decf	Segment_init@Segment,w,c
  1804  0010EC  A4D8               	btfss	status,2,c
  1805  0010EE  D002               	goto	l1043
  1806                           
  1807                           ;segment.c: 70: PORTAbits.RA0 = 1;
  1808  0010F0  8080               	bsf	3968,0,c	;volatile
  1809  0010F2  D00D               	goto	l128
  1810  0010F4                     l1043:
  1811                           
  1812                           ;segment.c: 71: else if(Segment == 2)
  1813  0010F4  501E               	movf	Segment_init@Segment,w,c
  1814  0010F6  0A02               	xorlw	2
  1815  0010F8  A4D8               	btfss	status,2,c
  1816  0010FA  D002               	goto	l1047
  1817                           
  1818                           ;segment.c: 72: PORTAbits.RA1 = 1;
  1819  0010FC  8280               	bsf	3968,1,c	;volatile
  1820  0010FE  D007               	goto	l128
  1821  001100                     l1047:
  1822                           
  1823                           ;segment.c: 73: else if(Segment== 3)
  1824  001100  501E               	movf	Segment_init@Segment,w,c
  1825  001102  0A03               	xorlw	3
  1826  001104  A4D8               	btfss	status,2,c
  1827  001106  D002               	goto	l126
  1828                           
  1829                           ;segment.c: 74: PORTAbits.RA2 = 1;
  1830  001108  8480               	bsf	3968,2,c	;volatile
  1831  00110A  D001               	goto	l128
  1832  00110C                     l126:
  1833                           
  1834                           ;segment.c: 75: else
  1835                           ;segment.c: 76: PORTAbits.RA3 = 1;
  1836  00110C  8680               	bsf	3968,3,c	;volatile
  1837  00110E                     l128:
  1838  00110E  0012               	return	
  1839  001110                     __end_of_Segment_init:
  1840                           	opt stack 0
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           intcon	equ	0xFF2
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           postdec1	equ	0xFE5
  1849                           fsr1l	equ	0xFE1
  1850                           indf2	equ	0xFDF
  1851                           fsr2h	equ	0xFDA
  1852                           fsr2l	equ	0xFD9
  1853                           status	equ	0xFD8
  1854                           
  1855 ;; *************** function _Switch_Relay *****************
  1856 ;; Defined at:
  1857 ;;		line 58 in file "main.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  sw              1   29[COMRAM] unsigned char 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;		None               void
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1871 ;;      Params:         1       0       0       0       0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1874 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1875 ;;Total ram usage:        1 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    5
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_Display
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text12
  1886  0011D2                     __ptext12:
  1887                           	opt stack 0
  1888  0011D2                     _Switch_Relay:
  1889                           	opt stack 23
  1890                           
  1891                           ;main.c: 59: switch(sw)
  1892                           
  1893                           ;incstack = 0
  1894                           ;incstack = 0
  1895  0011D2  D004               	goto	l897
  1896  0011D4                     l47:
  1897  0011D4  808A               	bsf	3978,0,c	;volatile
  1898                           
  1899                           ;main.c: 62: break;
  1900  0011D6  D009               	goto	l50
  1901  0011D8                     l49:
  1902  0011D8  908A               	bcf	3978,0,c	;volatile
  1903                           
  1904                           ;main.c: 64: break;
  1905  0011DA  D007               	goto	l50
  1906  0011DC                     l897:
  1907  0011DC  501E               	movf	Switch_Relay@sw,w,c
  1908                           
  1909                           ; Switch size 1, requested type "space"
  1910                           ; Number of cases is 2, Range of values is 0 to 1
  1911                           ; switch strategies available:
  1912                           ; Name         Instructions Cycles
  1913                           ; simple_byte            7     4 (average)
  1914                           ;	Chosen strategy is simple_byte
  1915  0011DE  0A00               	xorlw	0	; case 0
  1916  0011E0  B4D8               	btfsc	status,2,c
  1917  0011E2  D7FA               	goto	l49
  1918  0011E4  0A01               	xorlw	1	; case 1
  1919  0011E6  B4D8               	btfsc	status,2,c
  1920  0011E8  D7F5               	goto	l47
  1921  0011EA                     l50:
  1922  0011EA  0012               	return	
  1923  0011EC                     __end_of_Switch_Relay:
  1924                           	opt stack 0
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           intcon	equ	0xFF2
  1930                           postinc0	equ	0xFEE
  1931                           wreg	equ	0xFE8
  1932                           postdec1	equ	0xFE5
  1933                           fsr1l	equ	0xFE1
  1934                           indf2	equ	0xFDF
  1935                           fsr2h	equ	0xFDA
  1936                           fsr2l	equ	0xFD9
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _Format_DEC *****************
  1940 ;; Defined at:
  1941 ;;		line 44 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  p               2   29[COMRAM] PTR unsigned char 
  1944 ;;		 -> str(10), STR_2(5), STR_1(5), 
  1945 ;;  q               2   31[COMRAM] PTR unsigned char 
  1946 ;;		 -> array(7), 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;		None               void
  1951 ;; Registers used:
  1952 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1958 ;;      Params:         4       0       0       0       0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1961 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1962 ;;Total ram usage:        4 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    5
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_Set_TIME
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text13
  1973  000C58                     __ptext13:
  1974                           	opt stack 0
  1975  000C58                     _Format_DEC:
  1976                           	opt stack 24
  1977                           
  1978                           ;main.c: 45: *q = (*p-'0');
  1979                           
  1980                           ;incstack = 0
  1981                           ;incstack = 0
  1982  000C58  501E               	movf	Format_DEC@p,w,c
  1983  000C5A  6EF6               	movwf	tblptrl,c
  1984  000C5C  6EE9               	movwf	fsr0l,c
  1985  000C5E  0E07               	movlw	(high __ramtop+-1)
  1986  000C60  6EEA               	movwf	fsr0h,c
  1987  000C62  501F               	movf	Format_DEC@p+1,w,c
  1988  000C64  64EA               	cpfsgt	fsr0h,c
  1989  000C66  D003               	bra	u17
  1990  000C68  6EEA               	movwf	fsr0h,c
  1991  000C6A  50EF               	movf	indf0,w,c
  1992  000C6C  D003               	bra	u10
  1993  000C6E                     u17:
  1994  000C6E  6EF7               	movwf	tblptrh,c
  1995  000C70  0008               	tblrd		*
  1996  000C72  50F5               	movf	tablat,w,c
  1997  000C74                     u10:
  1998  000C74  0FD0               	addlw	208
  1999  000C76  C020  FFD9         	movff	Format_DEC@q,fsr2l
  2000  000C7A  C021  FFDA         	movff	Format_DEC@q+1,fsr2h
  2001  000C7E  6EDF               	movwf	indf2,c
  2002                           
  2003                           ;main.c: 46: p++;
  2004  000C80  4A1E               	infsnz	Format_DEC@p,f,c
  2005  000C82  2A1F               	incf	Format_DEC@p+1,f,c
  2006                           
  2007                           ;main.c: 47: q++;
  2008  000C84  4A20               	infsnz	Format_DEC@q,f,c
  2009  000C86  2A21               	incf	Format_DEC@q+1,f,c
  2010                           
  2011                           ;main.c: 48: *q = (*p-'0');
  2012  000C88  501E               	movf	Format_DEC@p,w,c
  2013  000C8A  6EF6               	movwf	tblptrl,c
  2014  000C8C  6EE9               	movwf	fsr0l,c
  2015  000C8E  0E07               	movlw	(high __ramtop+-1)
  2016  000C90  6EEA               	movwf	fsr0h,c
  2017  000C92  501F               	movf	Format_DEC@p+1,w,c
  2018  000C94  64EA               	cpfsgt	fsr0h,c
  2019  000C96  D003               	bra	u27
  2020  000C98  6EEA               	movwf	fsr0h,c
  2021  000C9A  50EF               	movf	indf0,w,c
  2022  000C9C  D003               	bra	u20
  2023  000C9E                     u27:
  2024  000C9E  6EF7               	movwf	tblptrh,c
  2025  000CA0  0008               	tblrd		*
  2026  000CA2  50F5               	movf	tablat,w,c
  2027  000CA4                     u20:
  2028  000CA4  0FD0               	addlw	208
  2029  000CA6  C020  FFD9         	movff	Format_DEC@q,fsr2l
  2030  000CAA  C021  FFDA         	movff	Format_DEC@q+1,fsr2h
  2031  000CAE  6EDF               	movwf	indf2,c
  2032                           
  2033                           ;main.c: 49: p++;
  2034  000CB0  4A1E               	infsnz	Format_DEC@p,f,c
  2035  000CB2  2A1F               	incf	Format_DEC@p+1,f,c
  2036                           
  2037                           ;main.c: 50: q++;
  2038  000CB4  4A20               	infsnz	Format_DEC@q,f,c
  2039  000CB6  2A21               	incf	Format_DEC@q+1,f,c
  2040                           
  2041                           ;main.c: 51: *q = (*p-'0');
  2042  000CB8  501E               	movf	Format_DEC@p,w,c
  2043  000CBA  6EF6               	movwf	tblptrl,c
  2044  000CBC  6EE9               	movwf	fsr0l,c
  2045  000CBE  0E07               	movlw	(high __ramtop+-1)
  2046  000CC0  6EEA               	movwf	fsr0h,c
  2047  000CC2  501F               	movf	Format_DEC@p+1,w,c
  2048  000CC4  64EA               	cpfsgt	fsr0h,c
  2049  000CC6  D003               	bra	u37
  2050  000CC8  6EEA               	movwf	fsr0h,c
  2051  000CCA  50EF               	movf	indf0,w,c
  2052  000CCC  D003               	bra	u30
  2053  000CCE                     u37:
  2054  000CCE  6EF7               	movwf	tblptrh,c
  2055  000CD0  0008               	tblrd		*
  2056  000CD2  50F5               	movf	tablat,w,c
  2057  000CD4                     u30:
  2058  000CD4  0FD0               	addlw	208
  2059  000CD6  C020  FFD9         	movff	Format_DEC@q,fsr2l
  2060  000CDA  C021  FFDA         	movff	Format_DEC@q+1,fsr2h
  2061  000CDE  6EDF               	movwf	indf2,c
  2062                           
  2063                           ;main.c: 52: p++;
  2064  000CE0  4A1E               	infsnz	Format_DEC@p,f,c
  2065  000CE2  2A1F               	incf	Format_DEC@p+1,f,c
  2066                           
  2067                           ;main.c: 53: q++;
  2068  000CE4  4A20               	infsnz	Format_DEC@q,f,c
  2069  000CE6  2A21               	incf	Format_DEC@q+1,f,c
  2070                           
  2071                           ;main.c: 54: *q = (*p-'0');
  2072  000CE8  501E               	movf	Format_DEC@p,w,c
  2073  000CEA  6EF6               	movwf	tblptrl,c
  2074  000CEC  6EE9               	movwf	fsr0l,c
  2075  000CEE  0E07               	movlw	(high __ramtop+-1)
  2076  000CF0  6EEA               	movwf	fsr0h,c
  2077  000CF2  501F               	movf	Format_DEC@p+1,w,c
  2078  000CF4  64EA               	cpfsgt	fsr0h,c
  2079  000CF6  D003               	bra	u47
  2080  000CF8  6EEA               	movwf	fsr0h,c
  2081  000CFA  50EF               	movf	indf0,w,c
  2082  000CFC  D003               	bra	u40
  2083  000CFE                     u47:
  2084  000CFE  6EF7               	movwf	tblptrh,c
  2085  000D00  0008               	tblrd		*
  2086  000D02  50F5               	movf	tablat,w,c
  2087  000D04                     u40:
  2088  000D04  0FD0               	addlw	208
  2089  000D06  C020  FFD9         	movff	Format_DEC@q,fsr2l
  2090  000D0A  C021  FFDA         	movff	Format_DEC@q+1,fsr2h
  2091  000D0E  6EDF               	movwf	indf2,c
  2092  000D10  0012               	return	
  2093  000D12                     __end_of_Format_DEC:
  2094                           	opt stack 0
  2095                           tblptru	equ	0xFF8
  2096                           tblptrh	equ	0xFF7
  2097                           tblptrl	equ	0xFF6
  2098                           tablat	equ	0xFF5
  2099                           intcon	equ	0xFF2
  2100                           indf0	equ	0xFEF
  2101                           postinc0	equ	0xFEE
  2102                           fsr0h	equ	0xFEA
  2103                           fsr0l	equ	0xFE9
  2104                           wreg	equ	0xFE8
  2105                           postdec1	equ	0xFE5
  2106                           fsr1l	equ	0xFE1
  2107                           indf2	equ	0xFDF
  2108                           fsr2h	equ	0xFDA
  2109                           fsr2l	equ	0xFD9
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _Rx_isr *****************
  2113 ;; Defined at:
  2114 ;;		line 125 in file "main.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;		None               void
  2121 ;; Registers used:
  2122 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2130 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2131 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2132 ;;Total ram usage:       14 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    4
  2135 ;; This function calls:
  2136 ;;		_Reset_TIME
  2137 ;;		i2_Set_TIME
  2138 ;; This function is called by:
  2139 ;;		Interrupt level 2
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	intcode
  2144  000008                     __pintcode:
  2145                           	opt stack 0
  2146  000008                     _Rx_isr:
  2147                           	opt stack 22
  2148                           
  2149                           ;incstack = 0
  2150  000008  CFFA F010          	movff	pclath,??_Rx_isr
  2151  00000C  CFFB F011          	movff	pclatu,??_Rx_isr+1
  2152  000010  ED78  F007         	call	int_func,f	;refresh shadow registers
  2153                           pclatu	equ	0xFFB
  2154                           pclath	equ	0xFFA
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           intcon	equ	0xFF2
  2160                           indf0	equ	0xFEF
  2161                           postinc0	equ	0xFEE
  2162                           fsr0h	equ	0xFEA
  2163                           fsr0l	equ	0xFE9
  2164                           wreg	equ	0xFE8
  2165                           postdec1	equ	0xFE5
  2166                           fsr1l	equ	0xFE1
  2167                           indf2	equ	0xFDF
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           
  2172                           	psect	intcode_body
  2173  000EF0                     __pintcode_body:
  2174                           	opt stack 22
  2175  000EF0                     int_func:
  2176                           	opt stack 22
  2177  000EF0  0006               	pop		; remove dummy address from shadow register refresh
  2178  000EF2  CFE9 F012          	movff	fsr0l,??_Rx_isr+2
  2179  000EF6  CFEA F013          	movff	fsr0h,??_Rx_isr+3
  2180  000EFA  CFE1 F014          	movff	fsr1l,??_Rx_isr+4
  2181  000EFE  CFE2 F015          	movff	fsr1h,??_Rx_isr+5
  2182  000F02  CFD9 F016          	movff	fsr2l,??_Rx_isr+6
  2183  000F06  CFDA F017          	movff	fsr2h,??_Rx_isr+7
  2184  000F0A  CFF3 F018          	movff	prodl,??_Rx_isr+8
  2185  000F0E  CFF4 F019          	movff	prodh,??_Rx_isr+9
  2186  000F12  CFF6 F01A          	movff	tblptrl,??_Rx_isr+10
  2187  000F16  CFF7 F01B          	movff	tblptrh,??_Rx_isr+11
  2188  000F1A  CFF8 F01C          	movff	tblptru,??_Rx_isr+12
  2189  000F1E  CFF5 F01D          	movff	tablat,??_Rx_isr+13
  2190  000F22                     
  2191                           ;main.c: 126: if(PIR1bits.RCIF == 1)
  2192  000F22  AA9E               	btfss	3998,5,c	;volatile
  2193  000F24  D001               	goto	i2u89_41
  2194  000F26  D001               	goto	i2u89_40
  2195  000F28                     i2u89_41:
  2196  000F28  D00A               	goto	i2l72
  2197  000F2A                     i2u89_40:
  2198  000F2A                     
  2199                           ;main.c: 127: {
  2200                           ;main.c: 128: Reset_TIME();
  2201  000F2A  ECC9  F008         	call	_Reset_TIME	;wreg free
  2202  000F2E                     
  2203                           ;main.c: 129: Set_TIME(str);
  2204  000F2E  0E00               	movlw	high _str
  2205  000F30  6E0F               	movwf	?i2_Set_TIME+1,c
  2206  000F32  0E4B               	movlw	low _str
  2207  000F34  6E0E               	movwf	?i2_Set_TIME,c
  2208  000F36  EC34  F008         	call	i2_Set_TIME	;wreg free
  2209  000F3A                     
  2210                           ;main.c: 130: PIR1bits.RCIF = 0;
  2211  000F3A  9A9E               	bcf	3998,5,c	;volatile
  2212  000F3C  D000               	goto	i2l72
  2213  000F3E                     i2l72:
  2214  000F3E  C01D  FFF5         	movff	??_Rx_isr+13,tablat
  2215  000F42  C01C  FFF8         	movff	??_Rx_isr+12,tblptru
  2216  000F46  C01B  FFF7         	movff	??_Rx_isr+11,tblptrh
  2217  000F4A  C01A  FFF6         	movff	??_Rx_isr+10,tblptrl
  2218  000F4E  C019  FFF4         	movff	??_Rx_isr+9,prodh
  2219  000F52  C018  FFF3         	movff	??_Rx_isr+8,prodl
  2220  000F56  C017  FFDA         	movff	??_Rx_isr+7,fsr2h
  2221  000F5A  C016  FFD9         	movff	??_Rx_isr+6,fsr2l
  2222  000F5E  C015  FFE2         	movff	??_Rx_isr+5,fsr1h
  2223  000F62  C014  FFE1         	movff	??_Rx_isr+4,fsr1l
  2224  000F66  C013  FFEA         	movff	??_Rx_isr+3,fsr0h
  2225  000F6A  C012  FFE9         	movff	??_Rx_isr+2,fsr0l
  2226  000F6E  C011  FFFB         	movff	??_Rx_isr+1,pclatu
  2227  000F72  C010  FFFA         	movff	??_Rx_isr,pclath
  2228  000F76  0011               	retfie		f
  2229  000F78                     __end_of_Rx_isr:
  2230                           	opt stack 0
  2231                           pclatu	equ	0xFFB
  2232                           pclath	equ	0xFFA
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           prodh	equ	0xFF4
  2238                           prodl	equ	0xFF3
  2239                           intcon	equ	0xFF2
  2240                           indf0	equ	0xFEF
  2241                           postinc0	equ	0xFEE
  2242                           fsr0h	equ	0xFEA
  2243                           fsr0l	equ	0xFE9
  2244                           wreg	equ	0xFE8
  2245                           postdec1	equ	0xFE5
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           indf2	equ	0xFDF
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function i2_Set_TIME *****************
  2254 ;; Defined at:
  2255 ;;		line 100 in file "main.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  str             2   13[COMRAM] PTR unsigned char 
  2258 ;;		 -> str(10), STR_2(5), STR_1(5), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2   13[COMRAM] int 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2270 ;;      Params:         2       0       0       0       0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2273 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2274 ;;Total ram usage:        2 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    3
  2277 ;; This function calls:
  2278 ;;		i2_Format_DEC
  2279 ;;		i2_Display
  2280 ;; This function is called by:
  2281 ;;		_Rx_isr
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text15
  2286  001068                     __ptext15:
  2287                           	opt stack 0
  2288  001068                     i2_Set_TIME:
  2289                           	opt stack 22
  2290                           
  2291                           ;main.c: 101: str = "1237";
  2292                           
  2293                           ;incstack = 0
  2294                           ;incstack = 0
  2295  001068  0E08               	movlw	high STR_1
  2296  00106A  6E0F               	movwf	i2Set_TIME@str+1,c
  2297  00106C  0E05               	movlw	low STR_1
  2298  00106E  6E0E               	movwf	i2Set_TIME@str,c
  2299                           
  2300                           ;main.c: 106: Format_DEC(str, array);
  2301  001070  C00E  F001         	movff	i2Set_TIME@str,?i2_Format_DEC
  2302  001074  C00F  F002         	movff	i2Set_TIME@str+1,?i2_Format_DEC+1
  2303  001078  0E00               	movlw	high _array
  2304  00107A  6E04               	movwf	?i2_Format_DEC+3,c
  2305  00107C  0E55               	movlw	low _array
  2306  00107E  6E03               	movwf	?i2_Format_DEC+2,c
  2307  001080  EC89  F006         	call	i2_Format_DEC	;wreg free
  2308                           
  2309                           ;main.c: 110: str = "1234";
  2310  001084  0E08               	movlw	high STR_2
  2311  001086  6E0F               	movwf	i2Set_TIME@str+1,c
  2312  001088  0E00               	movlw	low STR_2
  2313  00108A  6E0E               	movwf	i2Set_TIME@str,c
  2314                           
  2315                           ;main.c: 111: Format_DEC(str, array+4);
  2316  00108C  C00E  F001         	movff	i2Set_TIME@str,?i2_Format_DEC
  2317  001090  C00F  F002         	movff	i2Set_TIME@str+1,?i2_Format_DEC+1
  2318  001094  0E00               	movlw	high (_array+4)
  2319  001096  6E04               	movwf	?i2_Format_DEC+3,c
  2320  001098  0E59               	movlw	low (_array+4)
  2321  00109A  6E03               	movwf	?i2_Format_DEC+2,c
  2322  00109C  EC89  F006         	call	i2_Format_DEC	;wreg free
  2323                           
  2324                           ;main.c: 112: Display();
  2325  0010A0  ECA7  F004         	call	i2_Display	;wreg free
  2326  0010A4  0012               	return	
  2327  0010A6                     __end_ofi2_Set_TIME:
  2328                           	opt stack 0
  2329                           pclatu	equ	0xFFB
  2330                           pclath	equ	0xFFA
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           prodh	equ	0xFF4
  2336                           prodl	equ	0xFF3
  2337                           intcon	equ	0xFF2
  2338                           indf0	equ	0xFEF
  2339                           postinc0	equ	0xFEE
  2340                           fsr0h	equ	0xFEA
  2341                           fsr0l	equ	0xFE9
  2342                           wreg	equ	0xFE8
  2343                           postdec1	equ	0xFE5
  2344                           fsr1h	equ	0xFE2
  2345                           fsr1l	equ	0xFE1
  2346                           indf2	equ	0xFDF
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function i2_Format_DEC *****************
  2352 ;; Defined at:
  2353 ;;		line 44 in file "main.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  p               2    0[COMRAM] PTR unsigned char 
  2356 ;;		 -> str(10), STR_2(5), STR_1(5), 
  2357 ;;  q               2    2[COMRAM] PTR unsigned char 
  2358 ;;		 -> array(7), 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;		None               void
  2363 ;; Registers used:
  2364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         4       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2373 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:        4 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		i2_Set_TIME
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text16
  2384  000D12                     __ptext16:
  2385                           	opt stack 0
  2386  000D12                     i2_Format_DEC:
  2387                           	opt stack 24
  2388                           
  2389                           ;main.c: 45: *q = (*p-'0');
  2390                           
  2391                           ;incstack = 0
  2392                           ;incstack = 0
  2393  000D12  5001               	movf	i2Format_DEC@p,w,c
  2394  000D14  6EF6               	movwf	tblptrl,c
  2395  000D16  6EE9               	movwf	fsr0l,c
  2396  000D18  0E07               	movlw	(high __ramtop+-1)
  2397  000D1A  6EEA               	movwf	fsr0h,c
  2398  000D1C  5002               	movf	i2Format_DEC@p+1,w,c
  2399  000D1E  64EA               	cpfsgt	fsr0h,c
  2400  000D20  D003               	bra	i2u49_47
  2401  000D22  6EEA               	movwf	fsr0h,c
  2402  000D24  50EF               	movf	indf0,w,c
  2403  000D26  D003               	bra	i2u49_40
  2404  000D28                     i2u49_47:
  2405  000D28  6EF7               	movwf	tblptrh,c
  2406  000D2A  0008               	tblrd		*
  2407  000D2C  50F5               	movf	tablat,w,c
  2408  000D2E                     i2u49_40:
  2409  000D2E  0FD0               	addlw	208
  2410  000D30  C003  FFD9         	movff	i2Format_DEC@q,fsr2l
  2411  000D34  C004  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  2412  000D38  6EDF               	movwf	indf2,c
  2413                           
  2414                           ;main.c: 46: p++;
  2415  000D3A  4A01               	infsnz	i2Format_DEC@p,f,c
  2416  000D3C  2A02               	incf	i2Format_DEC@p+1,f,c
  2417                           
  2418                           ;main.c: 47: q++;
  2419  000D3E  4A03               	infsnz	i2Format_DEC@q,f,c
  2420  000D40  2A04               	incf	i2Format_DEC@q+1,f,c
  2421                           
  2422                           ;main.c: 48: *q = (*p-'0');
  2423  000D42  5001               	movf	i2Format_DEC@p,w,c
  2424  000D44  6EF6               	movwf	tblptrl,c
  2425  000D46  6EE9               	movwf	fsr0l,c
  2426  000D48  0E07               	movlw	(high __ramtop+-1)
  2427  000D4A  6EEA               	movwf	fsr0h,c
  2428  000D4C  5002               	movf	i2Format_DEC@p+1,w,c
  2429  000D4E  64EA               	cpfsgt	fsr0h,c
  2430  000D50  D003               	bra	i2u50_47
  2431  000D52  6EEA               	movwf	fsr0h,c
  2432  000D54  50EF               	movf	indf0,w,c
  2433  000D56  D003               	bra	i2u50_40
  2434  000D58                     i2u50_47:
  2435  000D58  6EF7               	movwf	tblptrh,c
  2436  000D5A  0008               	tblrd		*
  2437  000D5C  50F5               	movf	tablat,w,c
  2438  000D5E                     i2u50_40:
  2439  000D5E  0FD0               	addlw	208
  2440  000D60  C003  FFD9         	movff	i2Format_DEC@q,fsr2l
  2441  000D64  C004  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  2442  000D68  6EDF               	movwf	indf2,c
  2443                           
  2444                           ;main.c: 49: p++;
  2445  000D6A  4A01               	infsnz	i2Format_DEC@p,f,c
  2446  000D6C  2A02               	incf	i2Format_DEC@p+1,f,c
  2447                           
  2448                           ;main.c: 50: q++;
  2449  000D6E  4A03               	infsnz	i2Format_DEC@q,f,c
  2450  000D70  2A04               	incf	i2Format_DEC@q+1,f,c
  2451                           
  2452                           ;main.c: 51: *q = (*p-'0');
  2453  000D72  5001               	movf	i2Format_DEC@p,w,c
  2454  000D74  6EF6               	movwf	tblptrl,c
  2455  000D76  6EE9               	movwf	fsr0l,c
  2456  000D78  0E07               	movlw	(high __ramtop+-1)
  2457  000D7A  6EEA               	movwf	fsr0h,c
  2458  000D7C  5002               	movf	i2Format_DEC@p+1,w,c
  2459  000D7E  64EA               	cpfsgt	fsr0h,c
  2460  000D80  D003               	bra	i2u51_47
  2461  000D82  6EEA               	movwf	fsr0h,c
  2462  000D84  50EF               	movf	indf0,w,c
  2463  000D86  D003               	bra	i2u51_40
  2464  000D88                     i2u51_47:
  2465  000D88  6EF7               	movwf	tblptrh,c
  2466  000D8A  0008               	tblrd		*
  2467  000D8C  50F5               	movf	tablat,w,c
  2468  000D8E                     i2u51_40:
  2469  000D8E  0FD0               	addlw	208
  2470  000D90  C003  FFD9         	movff	i2Format_DEC@q,fsr2l
  2471  000D94  C004  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  2472  000D98  6EDF               	movwf	indf2,c
  2473                           
  2474                           ;main.c: 52: p++;
  2475  000D9A  4A01               	infsnz	i2Format_DEC@p,f,c
  2476  000D9C  2A02               	incf	i2Format_DEC@p+1,f,c
  2477                           
  2478                           ;main.c: 53: q++;
  2479  000D9E  4A03               	infsnz	i2Format_DEC@q,f,c
  2480  000DA0  2A04               	incf	i2Format_DEC@q+1,f,c
  2481                           
  2482                           ;main.c: 54: *q = (*p-'0');
  2483  000DA2  5001               	movf	i2Format_DEC@p,w,c
  2484  000DA4  6EF6               	movwf	tblptrl,c
  2485  000DA6  6EE9               	movwf	fsr0l,c
  2486  000DA8  0E07               	movlw	(high __ramtop+-1)
  2487  000DAA  6EEA               	movwf	fsr0h,c
  2488  000DAC  5002               	movf	i2Format_DEC@p+1,w,c
  2489  000DAE  64EA               	cpfsgt	fsr0h,c
  2490  000DB0  D003               	bra	i2u52_47
  2491  000DB2  6EEA               	movwf	fsr0h,c
  2492  000DB4  50EF               	movf	indf0,w,c
  2493  000DB6  D003               	bra	i2u52_40
  2494  000DB8                     i2u52_47:
  2495  000DB8  6EF7               	movwf	tblptrh,c
  2496  000DBA  0008               	tblrd		*
  2497  000DBC  50F5               	movf	tablat,w,c
  2498  000DBE                     i2u52_40:
  2499  000DBE  0FD0               	addlw	208
  2500  000DC0  C003  FFD9         	movff	i2Format_DEC@q,fsr2l
  2501  000DC4  C004  FFDA         	movff	i2Format_DEC@q+1,fsr2h
  2502  000DC8  6EDF               	movwf	indf2,c
  2503  000DCA  0012               	return	
  2504  000DCC                     __end_ofi2_Format_DEC:
  2505                           	opt stack 0
  2506                           pclatu	equ	0xFFB
  2507                           pclath	equ	0xFFA
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           prodh	equ	0xFF4
  2513                           prodl	equ	0xFF3
  2514                           intcon	equ	0xFF2
  2515                           indf0	equ	0xFEF
  2516                           postinc0	equ	0xFEE
  2517                           fsr0h	equ	0xFEA
  2518                           fsr0l	equ	0xFE9
  2519                           wreg	equ	0xFE8
  2520                           postdec1	equ	0xFE5
  2521                           fsr1h	equ	0xFE2
  2522                           fsr1l	equ	0xFE1
  2523                           indf2	equ	0xFDF
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _Reset_TIME *****************
  2529 ;; Defined at:
  2530 ;;		line 95 in file "main.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;		None               void
  2537 ;; Registers used:
  2538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2544 ;;      Params:         0       0       0       0       0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2546 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2547 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2548 ;;Total ram usage:        1 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    3
  2551 ;; This function calls:
  2552 ;;		i2_Display
  2553 ;; This function is called by:
  2554 ;;		_Rx_isr
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text17
  2559  001192                     __ptext17:
  2560                           	opt stack 0
  2561  001192                     _Reset_TIME:
  2562                           	opt stack 22
  2563                           
  2564                           ;main.c: 96: Num1=0;Num2=0; Num3=0; Num4=0;
  2565                           
  2566                           ;incstack = 0
  2567                           ;incstack = 0
  2568  001192  6E0E               	movwf	??_Reset_TIME& (0+255),c
  2569  001194  0E00               	movlw	0
  2570  001196  6E45               	movwf	_Num1,c
  2571  001198  500E               	movf	??_Reset_TIME& (0+255),w,c
  2572  00119A  6E0E               	movwf	??_Reset_TIME& (0+255),c
  2573  00119C  0E00               	movlw	0
  2574  00119E  6E46               	movwf	_Num2,c
  2575  0011A0  500E               	movf	??_Reset_TIME& (0+255),w,c
  2576  0011A2  6E0E               	movwf	??_Reset_TIME& (0+255),c
  2577  0011A4  0E00               	movlw	0
  2578  0011A6  6E47               	movwf	_Num3,c
  2579  0011A8  500E               	movf	??_Reset_TIME& (0+255),w,c
  2580  0011AA  6E0E               	movwf	??_Reset_TIME& (0+255),c
  2581  0011AC  0E00               	movlw	0
  2582  0011AE  6E48               	movwf	_Num4,c
  2583  0011B0  500E               	movf	??_Reset_TIME& (0+255),w,c
  2584                           
  2585                           ;main.c: 97: Display();
  2586  0011B2  ECA7  F004         	call	i2_Display	;wreg free
  2587  0011B6  0012               	return	
  2588  0011B8                     __end_of_Reset_TIME:
  2589                           	opt stack 0
  2590                           pclatu	equ	0xFFB
  2591                           pclath	equ	0xFFA
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           prodh	equ	0xFF4
  2597                           prodl	equ	0xFF3
  2598                           intcon	equ	0xFF2
  2599                           indf0	equ	0xFEF
  2600                           postinc0	equ	0xFEE
  2601                           fsr0h	equ	0xFEA
  2602                           fsr0l	equ	0xFE9
  2603                           wreg	equ	0xFE8
  2604                           postdec1	equ	0xFE5
  2605                           fsr1h	equ	0xFE2
  2606                           fsr1l	equ	0xFE1
  2607                           indf2	equ	0xFDF
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function i2_Display *****************
  2613 ;; Defined at:
  2614 ;;		line 69 in file "main.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  Display         2   11[COMRAM] PTR unsigned char 
  2619 ;;		 -> array(7), 
  2620 ;;  Display         2    9[COMRAM] int 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;		None               void
  2623 ;; Registers used:
  2624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0
  2631 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2632 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2633 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2634 ;;Total ram usage:        5 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    2
  2637 ;; This function calls:
  2638 ;;		i2_Switch_Relay
  2639 ;;		i2_Delay_s_
  2640 ;;		i2_NumDisplay
  2641 ;;		i2_Seq_count
  2642 ;; This function is called by:
  2643 ;;		_Reset_TIME
  2644 ;;		i2_Set_TIME
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text18
  2649  00094E                     __ptext18:
  2650                           	opt stack 0
  2651  00094E                     i2_Display:
  2652                           	opt stack 22
  2653                           
  2654                           ;main.c: 70: unsigned char *ptr = array;
  2655                           
  2656                           ;incstack = 0
  2657                           ;incstack = 0
  2658  00094E  0E00               	movlw	high _array
  2659  000950  6E0D               	movwf	i2Display@ptr+1,c
  2660  000952  0E55               	movlw	low _array
  2661  000954  6E0C               	movwf	i2Display@ptr,c
  2662                           
  2663                           ;main.c: 71: if((Num1==*ptr)&&(Num2== *(ptr+1))&&(Num3==*(ptr+2))&&(Num4==*(ptr+3)))
  2664  000956  5045               	movf	_Num1,w,c
  2665  000958  C00C  FFD9         	movff	i2Display@ptr,fsr2l
  2666  00095C  C00D  FFDA         	movff	i2Display@ptr+1,fsr2h
  2667  000960  62DF               	cpfseq	indf2,c
  2668  000962  D022               	goto	i2l1493
  2669  000964  EE20 F001          	lfsr	2,1
  2670  000968  500C               	movf	i2Display@ptr,w,c
  2671  00096A  26D9               	addwf	fsr2l,f,c
  2672  00096C  500D               	movf	i2Display@ptr+1,w,c
  2673  00096E  22DA               	addwfc	fsr2h,f,c
  2674  000970  5046               	movf	_Num2,w,c
  2675  000972  62DF               	cpfseq	indf2,c
  2676  000974  D019               	goto	i2l1493
  2677  000976  EE20 F002          	lfsr	2,2
  2678  00097A  500C               	movf	i2Display@ptr,w,c
  2679  00097C  26D9               	addwf	fsr2l,f,c
  2680  00097E  500D               	movf	i2Display@ptr+1,w,c
  2681  000980  22DA               	addwfc	fsr2h,f,c
  2682  000982  5047               	movf	_Num3,w,c
  2683  000984  62DF               	cpfseq	indf2,c
  2684  000986  D010               	goto	i2l1493
  2685  000988  EE20 F003          	lfsr	2,3
  2686  00098C  500C               	movf	i2Display@ptr,w,c
  2687  00098E  26D9               	addwf	fsr2l,f,c
  2688  000990  500D               	movf	i2Display@ptr+1,w,c
  2689  000992  22DA               	addwfc	fsr2h,f,c
  2690  000994  5048               	movf	_Num4,w,c
  2691  000996  62DF               	cpfseq	indf2,c
  2692  000998  D007               	goto	i2l1493
  2693                           
  2694                           ;main.c: 72: {
  2695                           ;main.c: 73: Switch_Relay(1);
  2696  00099A  6E09               	movwf	??i2_Display& (0+255),c
  2697  00099C  0E01               	movlw	1
  2698  00099E  6E01               	movwf	?i2_Switch_Relay,c
  2699  0009A0  5009               	movf	??i2_Display& (0+255),w,c
  2700  0009A2  ECF6  F008         	call	i2_Switch_Relay	;wreg free
  2701                           
  2702                           ;main.c: 74: }
  2703  0009A6  D02A               	goto	i2l1503
  2704  0009A8                     i2l1493:
  2705                           
  2706                           ;main.c: 75: else if((Num1==*(ptr+4))&&(Num2==*(ptr+5))&&(Num3==*(ptr+6))&&(Num4==*(ptr+
      +                          7)))
  2707  0009A8  EE20 F004          	lfsr	2,4
  2708  0009AC  500C               	movf	i2Display@ptr,w,c
  2709  0009AE  26D9               	addwf	fsr2l,f,c
  2710  0009B0  500D               	movf	i2Display@ptr+1,w,c
  2711  0009B2  22DA               	addwfc	fsr2h,f,c
  2712  0009B4  5045               	movf	_Num1,w,c
  2713  0009B6  62DF               	cpfseq	indf2,c
  2714  0009B8  D021               	goto	i2l1503
  2715  0009BA  EE20 F005          	lfsr	2,5
  2716  0009BE  500C               	movf	i2Display@ptr,w,c
  2717  0009C0  26D9               	addwf	fsr2l,f,c
  2718  0009C2  500D               	movf	i2Display@ptr+1,w,c
  2719  0009C4  22DA               	addwfc	fsr2h,f,c
  2720  0009C6  5046               	movf	_Num2,w,c
  2721  0009C8  62DF               	cpfseq	indf2,c
  2722  0009CA  D018               	goto	i2l1503
  2723  0009CC  EE20 F006          	lfsr	2,6
  2724  0009D0  500C               	movf	i2Display@ptr,w,c
  2725  0009D2  26D9               	addwf	fsr2l,f,c
  2726  0009D4  500D               	movf	i2Display@ptr+1,w,c
  2727  0009D6  22DA               	addwfc	fsr2h,f,c
  2728  0009D8  5047               	movf	_Num3,w,c
  2729  0009DA  62DF               	cpfseq	indf2,c
  2730  0009DC  D00F               	goto	i2l1503
  2731  0009DE  EE20 F007          	lfsr	2,7
  2732  0009E2  500C               	movf	i2Display@ptr,w,c
  2733  0009E4  26D9               	addwf	fsr2l,f,c
  2734  0009E6  500D               	movf	i2Display@ptr+1,w,c
  2735  0009E8  22DA               	addwfc	fsr2h,f,c
  2736  0009EA  5048               	movf	_Num4,w,c
  2737  0009EC  62DF               	cpfseq	indf2,c
  2738  0009EE  D006               	goto	i2l1503
  2739                           
  2740                           ;main.c: 76: {
  2741                           ;main.c: 77: Switch_Relay(0);
  2742  0009F0  6E09               	movwf	??i2_Display& (0+255),c
  2743  0009F2  0E00               	movlw	0
  2744  0009F4  6E01               	movwf	?i2_Switch_Relay,c
  2745  0009F6  5009               	movf	??i2_Display& (0+255),w,c
  2746  0009F8  ECF6  F008         	call	i2_Switch_Relay	;wreg free
  2747  0009FC                     i2l1503:
  2748                           
  2749                           ;main.c: 78: }
  2750                           ;main.c: 79: int x = 0;
  2751  0009FC  0E00               	movlw	0
  2752  0009FE  6E0B               	movwf	i2Display@x+1,c
  2753  000A00  0E00               	movlw	0
  2754  000A02  6E0A               	movwf	i2Display@x,c
  2755                           
  2756                           ;main.c: 80: while(x<63)
  2757  000A04  D02A               	goto	i2l1519
  2758  000A06                     i2l1505:
  2759                           
  2760                           ;main.c: 81: {
  2761                           ;main.c: 82: NumDisplay(Num1, 1);
  2762  000A06  C045  F003         	movff	_Num1,?i2_NumDisplay
  2763  000A0A  6E09               	movwf	??i2_Display& (0+255),c
  2764  000A0C  0E01               	movlw	1
  2765  000A0E  6E04               	movwf	?i2_NumDisplay+1,c
  2766  000A10  5009               	movf	??i2_Display& (0+255),w,c
  2767  000A12  ECB5  F008         	call	i2_NumDisplay	;wreg free
  2768                           
  2769                           ;main.c: 83: Delay_s_();
  2770  000A16  EC34  F009         	call	i2_Delay_s_	;wreg free
  2771                           
  2772                           ;main.c: 84: NumDisplay(Num2, 2);
  2773  000A1A  C046  F003         	movff	_Num2,?i2_NumDisplay
  2774  000A1E  6E09               	movwf	??i2_Display& (0+255),c
  2775  000A20  0E02               	movlw	2
  2776  000A22  6E04               	movwf	?i2_NumDisplay+1,c
  2777  000A24  5009               	movf	??i2_Display& (0+255),w,c
  2778  000A26  ECB5  F008         	call	i2_NumDisplay	;wreg free
  2779                           
  2780                           ;main.c: 85: Delay_s_();
  2781  000A2A  EC34  F009         	call	i2_Delay_s_	;wreg free
  2782                           
  2783                           ;main.c: 86: NumDisplay(Num3, 3);
  2784  000A2E  C047  F003         	movff	_Num3,?i2_NumDisplay
  2785  000A32  6E09               	movwf	??i2_Display& (0+255),c
  2786  000A34  0E03               	movlw	3
  2787  000A36  6E04               	movwf	?i2_NumDisplay+1,c
  2788  000A38  5009               	movf	??i2_Display& (0+255),w,c
  2789  000A3A  ECB5  F008         	call	i2_NumDisplay	;wreg free
  2790                           
  2791                           ;main.c: 87: Delay_s_();
  2792  000A3E  EC34  F009         	call	i2_Delay_s_	;wreg free
  2793                           
  2794                           ;main.c: 88: NumDisplay(Num4, 4);
  2795  000A42  C048  F003         	movff	_Num4,?i2_NumDisplay
  2796  000A46  6E09               	movwf	??i2_Display& (0+255),c
  2797  000A48  0E04               	movlw	4
  2798  000A4A  6E04               	movwf	?i2_NumDisplay+1,c
  2799  000A4C  5009               	movf	??i2_Display& (0+255),w,c
  2800  000A4E  ECB5  F008         	call	i2_NumDisplay	;wreg free
  2801                           
  2802                           ;main.c: 89: Delay_s_();
  2803  000A52  EC34  F009         	call	i2_Delay_s_	;wreg free
  2804                           
  2805                           ;main.c: 90: x++;
  2806  000A56  4A0A               	infsnz	i2Display@x,f,c
  2807  000A58  2A0B               	incf	i2Display@x+1,f,c
  2808  000A5A                     i2l1519:
  2809  000A5A  500B               	movf	i2Display@x+1,w,c
  2810  000A5C  0A80               	xorlw	128
  2811  000A5E  0F80               	addlw	-128
  2812  000A60  0E3F               	movlw	63
  2813  000A62  B4D8               	btfsc	status,2,c
  2814  000A64  5C0A               	subwf	i2Display@x,w,c
  2815  000A66  A0D8               	btfss	status,0,c
  2816  000A68  D7CE               	goto	i2l1505
  2817                           
  2818                           ;main.c: 91: }
  2819                           ;main.c: 92: Seq_count(&Num1, &Num2, &Num3, &Num4);
  2820  000A6A  0E00               	movlw	high _Num1
  2821  000A6C  6E02               	movwf	?i2_Seq_count+1,c
  2822  000A6E  0E45               	movlw	low _Num1
  2823  000A70  6E01               	movwf	?i2_Seq_count,c
  2824  000A72  0E00               	movlw	high _Num2
  2825  000A74  6E04               	movwf	?i2_Seq_count+3,c
  2826  000A76  0E46               	movlw	low _Num2
  2827  000A78  6E03               	movwf	?i2_Seq_count+2,c
  2828  000A7A  0E00               	movlw	high _Num3
  2829  000A7C  6E06               	movwf	?i2_Seq_count+5,c
  2830  000A7E  0E47               	movlw	low _Num3
  2831  000A80  6E05               	movwf	?i2_Seq_count+4,c
  2832  000A82  0E00               	movlw	high _Num4
  2833  000A84  6E08               	movwf	?i2_Seq_count+7,c
  2834  000A86  0E48               	movlw	low _Num4
  2835  000A88  6E07               	movwf	?i2_Seq_count+6,c
  2836  000A8A  EC2F  F007         	call	i2_Seq_count	;wreg free
  2837  000A8E  0012               	return	
  2838  000A90                     __end_ofi2_Display:
  2839                           	opt stack 0
  2840                           pclatu	equ	0xFFB
  2841                           pclath	equ	0xFFA
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           intcon	equ	0xFF2
  2849                           indf0	equ	0xFEF
  2850                           postinc0	equ	0xFEE
  2851                           fsr0h	equ	0xFEA
  2852                           fsr0l	equ	0xFE9
  2853                           wreg	equ	0xFE8
  2854                           postdec1	equ	0xFE5
  2855                           fsr1h	equ	0xFE2
  2856                           fsr1l	equ	0xFE1
  2857                           indf2	equ	0xFDF
  2858                           fsr2h	equ	0xFDA
  2859                           fsr2l	equ	0xFD9
  2860                           status	equ	0xFD8
  2861                           
  2862 ;; *************** function i2_Seq_count *****************
  2863 ;; Defined at:
  2864 ;;		line 12 in file "counter.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  ptr1            2    0[COMRAM] PTR unsigned char 
  2867 ;;		 -> Num1(1), 
  2868 ;;  ptr2            2    2[COMRAM] PTR unsigned char 
  2869 ;;		 -> Num2(1), 
  2870 ;;  ptr3            2    4[COMRAM] PTR unsigned char 
  2871 ;;		 -> Num3(1), 
  2872 ;;  ptr4            2    6[COMRAM] PTR unsigned char 
  2873 ;;		 -> Num4(1), 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2885 ;;      Params:         8       0       0       0       0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2888 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2889 ;;Total ram usage:        8 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		i2_Display
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text19
  2899  000E5E                     __ptext19:
  2900                           	opt stack 0
  2901  000E5E                     i2_Seq_count:
  2902                           	opt stack 23
  2903                           
  2904                           ;counter.c: 13: ++*ptr1;
  2905                           
  2906                           ;incstack = 0
  2907                           ;incstack = 0
  2908  000E5E  C001  FFD9         	movff	i2Seq_count@ptr1,fsr2l
  2909  000E62  C002  FFDA         	movff	i2Seq_count@ptr1+1,fsr2h
  2910  000E66  2ADF               	incf	indf2,f,c
  2911                           
  2912                           ;counter.c: 14: if(*ptr1==10)
  2913  000E68  0E0A               	movlw	10
  2914  000E6A  C001  FFD9         	movff	i2Seq_count@ptr1,fsr2l
  2915  000E6E  C002  FFDA         	movff	i2Seq_count@ptr1+1,fsr2h
  2916  000E72  62DF               	cpfseq	indf2,c
  2917  000E74  D03C               	goto	i2l169
  2918                           
  2919                           ;counter.c: 15: {
  2920                           ;counter.c: 16: ++*ptr2;
  2921  000E76  C003  FFD9         	movff	i2Seq_count@ptr2,fsr2l
  2922  000E7A  C004  FFDA         	movff	i2Seq_count@ptr2+1,fsr2h
  2923  000E7E  2ADF               	incf	indf2,f,c
  2924                           
  2925                           ;counter.c: 17: *ptr1 = 0;
  2926  000E80  C001  FFD9         	movff	i2Seq_count@ptr1,fsr2l
  2927  000E84  C002  FFDA         	movff	i2Seq_count@ptr1+1,fsr2h
  2928  000E88  0E00               	movlw	0
  2929  000E8A  6EDF               	movwf	indf2,c
  2930                           
  2931                           ;counter.c: 18: if(*ptr2==6)
  2932  000E8C  0E06               	movlw	6
  2933  000E8E  C003  FFD9         	movff	i2Seq_count@ptr2,fsr2l
  2934  000E92  C004  FFDA         	movff	i2Seq_count@ptr2+1,fsr2h
  2935  000E96  62DF               	cpfseq	indf2,c
  2936  000E98  D02A               	goto	i2l169
  2937                           
  2938                           ;counter.c: 19: {
  2939                           ;counter.c: 20: ++*ptr3;
  2940  000E9A  C005  FFD9         	movff	i2Seq_count@ptr3,fsr2l
  2941  000E9E  C006  FFDA         	movff	i2Seq_count@ptr3+1,fsr2h
  2942  000EA2  2ADF               	incf	indf2,f,c
  2943                           
  2944                           ;counter.c: 21: *ptr2=0;
  2945  000EA4  C003  FFD9         	movff	i2Seq_count@ptr2,fsr2l
  2946  000EA8  C004  FFDA         	movff	i2Seq_count@ptr2+1,fsr2h
  2947  000EAC  0E00               	movlw	0
  2948  000EAE  6EDF               	movwf	indf2,c
  2949                           
  2950                           ;counter.c: 22: if(*ptr3==10)
  2951  000EB0  0E0A               	movlw	10
  2952  000EB2  C005  FFD9         	movff	i2Seq_count@ptr3,fsr2l
  2953  000EB6  C006  FFDA         	movff	i2Seq_count@ptr3+1,fsr2h
  2954  000EBA  62DF               	cpfseq	indf2,c
  2955  000EBC  D018               	goto	i2l169
  2956                           
  2957                           ;counter.c: 23: {
  2958                           ;counter.c: 24: ++*ptr4;
  2959  000EBE  C007  FFD9         	movff	i2Seq_count@ptr4,fsr2l
  2960  000EC2  C008  FFDA         	movff	i2Seq_count@ptr4+1,fsr2h
  2961  000EC6  2ADF               	incf	indf2,f,c
  2962                           
  2963                           ;counter.c: 25: *ptr3=0;
  2964  000EC8  C005  FFD9         	movff	i2Seq_count@ptr3,fsr2l
  2965  000ECC  C006  FFDA         	movff	i2Seq_count@ptr3+1,fsr2h
  2966  000ED0  0E00               	movlw	0
  2967  000ED2  6EDF               	movwf	indf2,c
  2968                           
  2969                           ;counter.c: 26: if(*ptr4==6)
  2970  000ED4  0E06               	movlw	6
  2971  000ED6  C007  FFD9         	movff	i2Seq_count@ptr4,fsr2l
  2972  000EDA  C008  FFDA         	movff	i2Seq_count@ptr4+1,fsr2h
  2973  000EDE  62DF               	cpfseq	indf2,c
  2974  000EE0  D006               	goto	i2l169
  2975                           
  2976                           ;counter.c: 27: {
  2977                           ;counter.c: 28: *ptr4=0;
  2978  000EE2  C007  FFD9         	movff	i2Seq_count@ptr4,fsr2l
  2979  000EE6  C008  FFDA         	movff	i2Seq_count@ptr4+1,fsr2h
  2980  000EEA  0E00               	movlw	0
  2981  000EEC  6EDF               	movwf	indf2,c
  2982  000EEE                     i2l169:
  2983  000EEE  0012               	return	
  2984  000EF0                     __end_ofi2_Seq_count:
  2985                           	opt stack 0
  2986                           pclatu	equ	0xFFB
  2987                           pclath	equ	0xFFA
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           intcon	equ	0xFF2
  2995                           indf0	equ	0xFEF
  2996                           postinc0	equ	0xFEE
  2997                           fsr0h	equ	0xFEA
  2998                           fsr0l	equ	0xFE9
  2999                           wreg	equ	0xFE8
  3000                           postdec1	equ	0xFE5
  3001                           fsr1h	equ	0xFE2
  3002                           fsr1l	equ	0xFE1
  3003                           indf2	equ	0xFDF
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function i2_NumDisplay *****************
  3009 ;; Defined at:
  3010 ;;		line 162 in file "segment.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  Number          1    2[COMRAM] unsigned char 
  3013 ;;  Segment         1    3[COMRAM] unsigned char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;		None               void
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3025 ;;      Params:         2       0       0       0       0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3027 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3028 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3029 ;;Total ram usage:        3 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    1
  3032 ;; This function calls:
  3033 ;;		i2_Segment_init
  3034 ;;		i2_DisplayValue
  3035 ;; This function is called by:
  3036 ;;		i2_Display
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text20
  3041  00116A                     __ptext20:
  3042                           	opt stack 0
  3043  00116A                     i2_NumDisplay:
  3044                           	opt stack 22
  3045                           
  3046                           ;segment.c: 163: Segment_init(Segment);
  3047                           
  3048                           ;incstack = 0
  3049                           ;incstack = 0
  3050  00116A  C004  F001         	movff	i2NumDisplay@Segment,?i2_Segment_init
  3051  00116E  EC88  F008         	call	i2_Segment_init	;wreg free
  3052                           
  3053                           ;segment.c: 164: if(Segment == 3 )
  3054  001172  5004               	movf	i2NumDisplay@Segment,w,c
  3055  001174  0A03               	xorlw	3
  3056  001176  A4D8               	btfss	status,2,c
  3057  001178  D003               	goto	i2l1423
  3058                           
  3059                           ;segment.c: 165: dot = 1;
  3060  00117A  6E05               	movwf	??i2_NumDisplay& (0+255),c
  3061  00117C  0E01               	movlw	1
  3062  00117E  D002               	goto	L20
  3063  001180                     i2l1423:
  3064                           
  3065                           ;segment.c: 166: else
  3066                           ;segment.c: 167: dot = 0;
  3067  001180  6E05               	movwf	??i2_NumDisplay& (0+255),c
  3068  001182  0E00               	movlw	0
  3069  001184                     L20:
  3070  001184  6E4A               	movwf	_dot,c
  3071  001186  5005               	movf	??i2_NumDisplay& (0+255),w,c
  3072                           
  3073                           ;segment.c: 168: DisplayValue(Number);
  3074  001188  C003  F001         	movff	i2NumDisplay@Number,?i2_DisplayValue
  3075  00118C  ECBA  F005         	call	i2_DisplayValue	;wreg free
  3076  001190  0012               	return	
  3077  001192                     __end_ofi2_NumDisplay:
  3078                           	opt stack 0
  3079                           pclatu	equ	0xFFB
  3080                           pclath	equ	0xFFA
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           indf0	equ	0xFEF
  3089                           postinc0	equ	0xFEE
  3090                           fsr0h	equ	0xFEA
  3091                           fsr0l	equ	0xFE9
  3092                           wreg	equ	0xFE8
  3093                           postdec1	equ	0xFE5
  3094                           fsr1h	equ	0xFE2
  3095                           fsr1l	equ	0xFE1
  3096                           indf2	equ	0xFDF
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8
  3100                           
  3101 ;; *************** function i2_DisplayValue *****************
  3102 ;; Defined at:
  3103 ;;		line 81 in file "segment.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  Number          1    0[COMRAM] unsigned char 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;		None               void
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3117 ;;      Params:         1       0       0       0       0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3119 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3120 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        2 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		i2_NumDisplay
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text21
  3131  000B74                     __ptext21:
  3132                           	opt stack 0
  3133  000B74                     i2_DisplayValue:
  3134                           	opt stack 22
  3135                           
  3136                           ;segment.c: 82: if(dot==1)
  3137                           
  3138                           ;incstack = 0
  3139                           ;incstack = 0
  3140  000B74  044A               	decf	_dot,w,c
  3141  000B76  B4D8               	btfsc	status,2,c
  3142  000B78  D016               	goto	i2l1331
  3143  000B7A  D04E               	goto	i2l1357
  3144  000B7C                     i2l1309:
  3145                           
  3146                           ;segment.c: 87: PORTD = ((0b11000000) & (0b01111111));
  3147  000B7C  0E40               	movlw	64
  3148  000B7E  D011               	goto	L29
  3149  000B80                     i2l1311:
  3150                           
  3151                           ;segment.c: 90: PORTD = ((0b11111001) & (0b01111111));
  3152  000B80  0E79               	movlw	121
  3153  000B82  D00F               	goto	L29
  3154  000B84                     i2l1313:
  3155                           
  3156                           ;segment.c: 93: PORTD = ((0b10100100) & (0b01111111));
  3157  000B84  0E24               	movlw	36
  3158  000B86  D00D               	goto	L29
  3159  000B88                     i2l1315:
  3160                           
  3161                           ;segment.c: 96: PORTD = ((0b10110000) & (0b01111111));
  3162  000B88  0E30               	movlw	48
  3163  000B8A  D00B               	goto	L29
  3164  000B8C                     i2l1317:
  3165                           
  3166                           ;segment.c: 99: PORTD = ((0b10011001) & (0b01111111));
  3167  000B8C  0E19               	movlw	25
  3168  000B8E  D009               	goto	L29
  3169  000B90                     i2l1319:
  3170                           
  3171                           ;segment.c: 102: PORTD = ((0b10010010) & (0b01111111));
  3172  000B90  0E12               	movlw	18
  3173  000B92  D007               	goto	L29
  3174  000B94                     i2l1321:
  3175                           
  3176                           ;segment.c: 105: PORTD = ((0b10000010) & (0b01111111));
  3177  000B94  0E02               	movlw	2
  3178  000B96  D005               	goto	L29
  3179  000B98                     i2l1323:
  3180                           
  3181                           ;segment.c: 108: PORTD = ((0b11111000) & (0b01111111));
  3182  000B98  0E78               	movlw	120
  3183  000B9A  D003               	goto	L29
  3184  000B9C                     i2l1325:
  3185                           
  3186                           ;segment.c: 111: PORTD = ((0b10000000) & (0b01111111));
  3187  000B9C  0E00               	movlw	0
  3188  000B9E  D001               	goto	L29
  3189  000BA0                     i2l1327:
  3190                           
  3191                           ;segment.c: 114: PORTD = ((0b10010000) & (0b01111111));
  3192  000BA0  0E10               	movlw	16
  3193  000BA2                     L29:
  3194  000BA2  6E83               	movwf	3971,c	;volatile
  3195                           
  3196                           ;segment.c: 115: break;
  3197  000BA4  D01F               	goto	i2l1333
  3198  000BA6                     i2l1331:
  3199  000BA6  5001               	movf	i2DisplayValue@Number,w,c
  3200                           
  3201                           ; Switch size 1, requested type "space"
  3202                           ; Number of cases is 10, Range of values is 0 to 9
  3203                           ; switch strategies available:
  3204                           ; Name         Instructions Cycles
  3205                           ; simple_byte           31    16 (average)
  3206                           ;	Chosen strategy is simple_byte
  3207  000BA8  0A00               	xorlw	0	; case 0
  3208  000BAA  B4D8               	btfsc	status,2,c
  3209  000BAC  D7E7               	goto	i2l1309
  3210  000BAE  0A01               	xorlw	1	; case 1
  3211  000BB0  B4D8               	btfsc	status,2,c
  3212  000BB2  D7E6               	goto	i2l1311
  3213  000BB4  0A03               	xorlw	3	; case 2
  3214  000BB6  B4D8               	btfsc	status,2,c
  3215  000BB8  D7E5               	goto	i2l1313
  3216  000BBA  0A01               	xorlw	1	; case 3
  3217  000BBC  B4D8               	btfsc	status,2,c
  3218  000BBE  D7E4               	goto	i2l1315
  3219  000BC0  0A07               	xorlw	7	; case 4
  3220  000BC2  B4D8               	btfsc	status,2,c
  3221  000BC4  D7E3               	goto	i2l1317
  3222  000BC6  0A01               	xorlw	1	; case 5
  3223  000BC8  B4D8               	btfsc	status,2,c
  3224  000BCA  D7E2               	goto	i2l1319
  3225  000BCC  0A03               	xorlw	3	; case 6
  3226  000BCE  B4D8               	btfsc	status,2,c
  3227  000BD0  D7E1               	goto	i2l1321
  3228  000BD2  0A01               	xorlw	1	; case 7
  3229  000BD4  B4D8               	btfsc	status,2,c
  3230  000BD6  D7E0               	goto	i2l1323
  3231  000BD8  0A0F               	xorlw	15	; case 8
  3232  000BDA  B4D8               	btfsc	status,2,c
  3233  000BDC  D7DF               	goto	i2l1325
  3234  000BDE  0A01               	xorlw	1	; case 9
  3235  000BE0  B4D8               	btfsc	status,2,c
  3236  000BE2  D7DE               	goto	i2l1327
  3237  000BE4                     i2l1333:
  3238                           
  3239                           ;segment.c: 118: dot=0;
  3240  000BE4  6E02               	movwf	??i2_DisplayValue& (0+255),c
  3241  000BE6  0E00               	movlw	0
  3242  000BE8  6E4A               	movwf	_dot,c
  3243  000BEA  5002               	movf	??i2_DisplayValue& (0+255),w,c
  3244                           
  3245                           ;segment.c: 119: }
  3246  000BEC  D034               	goto	i2l157
  3247  000BEE                     i2l1335:
  3248                           
  3249                           ;segment.c: 126: PORTD = 0b11000000;
  3250  000BEE  0EC0               	movlw	192
  3251  000BF0  D011               	goto	L38
  3252  000BF2                     i2l1337:
  3253                           
  3254                           ;segment.c: 129: PORTD = 0b11111001;
  3255  000BF2  0EF9               	movlw	249
  3256  000BF4  D00F               	goto	L38
  3257  000BF6                     i2l1339:
  3258                           
  3259                           ;segment.c: 132: PORTD = 0b10100100;
  3260  000BF6  0EA4               	movlw	164
  3261  000BF8  D00D               	goto	L38
  3262  000BFA                     i2l1341:
  3263                           
  3264                           ;segment.c: 135: PORTD = 0b10110000;
  3265  000BFA  0EB0               	movlw	176
  3266  000BFC  D00B               	goto	L38
  3267  000BFE                     i2l1343:
  3268                           
  3269                           ;segment.c: 138: PORTD = 0b10011001;
  3270  000BFE  0E99               	movlw	153
  3271  000C00  D009               	goto	L38
  3272  000C02                     i2l1345:
  3273                           
  3274                           ;segment.c: 141: PORTD = 0b10010010;
  3275  000C02  0E92               	movlw	146
  3276  000C04  D007               	goto	L38
  3277  000C06                     i2l1347:
  3278                           
  3279                           ;segment.c: 144: PORTD = 0b10000010;
  3280  000C06  0E82               	movlw	130
  3281  000C08  D005               	goto	L38
  3282  000C0A                     i2l1349:
  3283                           
  3284                           ;segment.c: 147: PORTD = 0b11111000;
  3285  000C0A  0EF8               	movlw	248
  3286  000C0C  D003               	goto	L38
  3287  000C0E                     i2l1351:
  3288                           
  3289                           ;segment.c: 150: PORTD = 0b10000000;
  3290  000C0E  0E80               	movlw	128
  3291  000C10  D001               	goto	L38
  3292  000C12                     i2l1353:
  3293                           
  3294                           ;segment.c: 153: PORTD = 0b10010000;
  3295  000C12  0E90               	movlw	144
  3296  000C14                     L38:
  3297  000C14  6E83               	movwf	3971,c	;volatile
  3298                           
  3299                           ;segment.c: 154: break;
  3300  000C16  D01F               	goto	i2l157
  3301  000C18                     i2l1357:
  3302  000C18  5001               	movf	i2DisplayValue@Number,w,c
  3303                           
  3304                           ; Switch size 1, requested type "space"
  3305                           ; Number of cases is 10, Range of values is 0 to 9
  3306                           ; switch strategies available:
  3307                           ; Name         Instructions Cycles
  3308                           ; simple_byte           31    16 (average)
  3309                           ;	Chosen strategy is simple_byte
  3310  000C1A  0A00               	xorlw	0	; case 0
  3311  000C1C  B4D8               	btfsc	status,2,c
  3312  000C1E  D7E7               	goto	i2l1335
  3313  000C20  0A01               	xorlw	1	; case 1
  3314  000C22  B4D8               	btfsc	status,2,c
  3315  000C24  D7E6               	goto	i2l1337
  3316  000C26  0A03               	xorlw	3	; case 2
  3317  000C28  B4D8               	btfsc	status,2,c
  3318  000C2A  D7E5               	goto	i2l1339
  3319  000C2C  0A01               	xorlw	1	; case 3
  3320  000C2E  B4D8               	btfsc	status,2,c
  3321  000C30  D7E4               	goto	i2l1341
  3322  000C32  0A07               	xorlw	7	; case 4
  3323  000C34  B4D8               	btfsc	status,2,c
  3324  000C36  D7E3               	goto	i2l1343
  3325  000C38  0A01               	xorlw	1	; case 5
  3326  000C3A  B4D8               	btfsc	status,2,c
  3327  000C3C  D7E2               	goto	i2l1345
  3328  000C3E  0A03               	xorlw	3	; case 6
  3329  000C40  B4D8               	btfsc	status,2,c
  3330  000C42  D7E1               	goto	i2l1347
  3331  000C44  0A01               	xorlw	1	; case 7
  3332  000C46  B4D8               	btfsc	status,2,c
  3333  000C48  D7E0               	goto	i2l1349
  3334  000C4A  0A0F               	xorlw	15	; case 8
  3335  000C4C  B4D8               	btfsc	status,2,c
  3336  000C4E  D7DF               	goto	i2l1351
  3337  000C50  0A01               	xorlw	1	; case 9
  3338  000C52  B4D8               	btfsc	status,2,c
  3339  000C54  D7DE               	goto	i2l1353
  3340  000C56                     i2l157:
  3341  000C56  0012               	return	
  3342  000C58                     __end_ofi2_DisplayValue:
  3343                           	opt stack 0
  3344                           pclatu	equ	0xFFB
  3345                           pclath	equ	0xFFA
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           intcon	equ	0xFF2
  3353                           indf0	equ	0xFEF
  3354                           postinc0	equ	0xFEE
  3355                           fsr0h	equ	0xFEA
  3356                           fsr0l	equ	0xFE9
  3357                           wreg	equ	0xFE8
  3358                           postdec1	equ	0xFE5
  3359                           fsr1h	equ	0xFE2
  3360                           fsr1l	equ	0xFE1
  3361                           indf2	equ	0xFDF
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function i2_Segment_init *****************
  3367 ;; Defined at:
  3368 ;;		line 58 in file "segment.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  Segment         1    0[COMRAM] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;		None               void
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3382 ;;      Params:         1       0       0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3385 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3386 ;;Total ram usage:        1 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		i2_NumDisplay
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text22
  3396  001110                     __ptext22:
  3397                           	opt stack 0
  3398  001110                     i2_Segment_init:
  3399                           	opt stack 22
  3400                           
  3401                           ;segment.c: 62: TRISD = 0x00;
  3402                           
  3403                           ;incstack = 0
  3404                           ;incstack = 0
  3405  001110  0E00               	movlw	0
  3406  001112  6E95               	movwf	3989,c	;volatile
  3407                           
  3408                           ;segment.c: 63: TRISAbits.TRISA0 = 0;
  3409  001114  9092               	bcf	3986,0,c	;volatile
  3410                           
  3411                           ;segment.c: 64: TRISAbits.TRISA1 = 0;
  3412  001116  9292               	bcf	3986,1,c	;volatile
  3413                           
  3414                           ;segment.c: 65: TRISAbits.TRISA2 = 0;
  3415  001118  9492               	bcf	3986,2,c	;volatile
  3416                           
  3417                           ;segment.c: 66: TRISAbits.TRISA3 = 0;
  3418  00111A  9692               	bcf	3986,3,c	;volatile
  3419                           
  3420                           ;segment.c: 69: if(Segment == 1)
  3421  00111C  0401               	decf	i2Segment_init@Segment,w,c
  3422  00111E  A4D8               	btfss	status,2,c
  3423  001120  D002               	goto	i2l1243
  3424                           
  3425                           ;segment.c: 70: PORTAbits.RA0 = 1;
  3426  001122  8080               	bsf	3968,0,c	;volatile
  3427  001124  D00D               	goto	i2l128
  3428  001126                     i2l1243:
  3429                           
  3430                           ;segment.c: 71: else if(Segment == 2)
  3431  001126  5001               	movf	i2Segment_init@Segment,w,c
  3432  001128  0A02               	xorlw	2
  3433  00112A  A4D8               	btfss	status,2,c
  3434  00112C  D002               	goto	i2l1247
  3435                           
  3436                           ;segment.c: 72: PORTAbits.RA1 = 1;
  3437  00112E  8280               	bsf	3968,1,c	;volatile
  3438  001130  D007               	goto	i2l128
  3439  001132                     i2l1247:
  3440                           
  3441                           ;segment.c: 73: else if(Segment== 3)
  3442  001132  5001               	movf	i2Segment_init@Segment,w,c
  3443  001134  0A03               	xorlw	3
  3444  001136  A4D8               	btfss	status,2,c
  3445  001138  D002               	goto	i2l126
  3446                           
  3447                           ;segment.c: 74: PORTAbits.RA2 = 1;
  3448  00113A  8480               	bsf	3968,2,c	;volatile
  3449  00113C  D001               	goto	i2l128
  3450  00113E                     i2l126:
  3451                           
  3452                           ;segment.c: 75: else
  3453                           ;segment.c: 76: PORTAbits.RA3 = 1;
  3454  00113E  8680               	bsf	3968,3,c	;volatile
  3455  001140                     i2l128:
  3456  001140  0012               	return	
  3457  001142                     __end_ofi2_Segment_init:
  3458                           	opt stack 0
  3459                           pclatu	equ	0xFFB
  3460                           pclath	equ	0xFFA
  3461                           tblptru	equ	0xFF8
  3462                           tblptrh	equ	0xFF7
  3463                           tblptrl	equ	0xFF6
  3464                           tablat	equ	0xFF5
  3465                           prodh	equ	0xFF4
  3466                           prodl	equ	0xFF3
  3467                           intcon	equ	0xFF2
  3468                           indf0	equ	0xFEF
  3469                           postinc0	equ	0xFEE
  3470                           fsr0h	equ	0xFEA
  3471                           fsr0l	equ	0xFE9
  3472                           wreg	equ	0xFE8
  3473                           postdec1	equ	0xFE5
  3474                           fsr1h	equ	0xFE2
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           fsr2h	equ	0xFDA
  3478                           fsr2l	equ	0xFD9
  3479                           status	equ	0xFD8
  3480                           
  3481 ;; *************** function i2_Delay_s_ *****************
  3482 ;; Defined at:
  3483 ;;		line 48 in file "delay.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;		None               void
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3499 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3500 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    1
  3504 ;; This function calls:
  3505 ;;		i2_Delay10KTCYx
  3506 ;; This function is called by:
  3507 ;;		i2_Display
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text23
  3512  001268                     __ptext23:
  3513                           	opt stack 0
  3514  001268                     i2_Delay_s_:
  3515                           	opt stack 22
  3516                           
  3517                           ;delay.c: 49: Delay10KTCYx(2);
  3518                           
  3519                           ;incstack = 0
  3520                           ;incstack = 0
  3521  001268  6E03               	movwf	??i2_Delay_s_& (0+255),c
  3522  00126A  0E02               	movlw	2
  3523  00126C  6E01               	movwf	?i2_Delay10KTCYx,c
  3524  00126E  5003               	movf	??i2_Delay_s_& (0+255),w,c
  3525  001270  EC1A  F009         	call	i2_Delay10KTCYx	;wreg free
  3526  001274  0012               	return	
  3527  001276                     __end_ofi2_Delay_s_:
  3528                           	opt stack 0
  3529                           pclatu	equ	0xFFB
  3530                           pclath	equ	0xFFA
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           indf0	equ	0xFEF
  3539                           postinc0	equ	0xFEE
  3540                           fsr0h	equ	0xFEA
  3541                           fsr0l	equ	0xFE9
  3542                           wreg	equ	0xFE8
  3543                           postdec1	equ	0xFE5
  3544                           fsr1h	equ	0xFE2
  3545                           fsr1l	equ	0xFE1
  3546                           indf2	equ	0xFDF
  3547                           fsr2h	equ	0xFDA
  3548                           fsr2l	equ	0xFD9
  3549                           status	equ	0xFD8
  3550                           
  3551 ;; *************** function i2_Delay10KTCYx *****************
  3552 ;; Defined at:
  3553 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d10ktcyx.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  unit            1    0[COMRAM] unsigned char 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;		None               void
  3560 ;; Registers used:
  3561 ;;		wreg
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3567 ;;      Params:         1       0       0       0       0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3569 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3570 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		i2_Delay_s_
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text24
  3581  001234                     __ptext24:
  3582                           	opt stack 0
  3583  001234                     i2_Delay10KTCYx:
  3584                           	opt stack 22
  3585  001234                     i2l483:
  3586  001234  0E0D               	movlw	13
  3587  001236  6E02               	movwf	??i2_Delay10KTCYx& (0+255),c
  3588  001238  0EFB               	movlw	251
  3589  00123A                     i2u91_47:
  3590  00123A  2EE8               	decfsz	wreg,f,c
  3591  00123C  D7FE               	goto	i2u91_47
  3592  00123E  2E02               	decfsz	??i2_Delay10KTCYx& (0+255),f,c
  3593  001240  D7FC               	goto	i2u91_47
  3594  001242  D000               	nop2	
  3595  001244  2E01               	decfsz	i2Delay10KTCYx@unit,f,c
  3596  001246  D7F6               	goto	i2l483
  3597  001248  0012               	return	
  3598  00124A                     __end_ofi2_Delay10KTCYx:
  3599                           	opt stack 0
  3600                           pclatu	equ	0xFFB
  3601                           pclath	equ	0xFFA
  3602                           tblptru	equ	0xFF8
  3603                           tblptrh	equ	0xFF7
  3604                           tblptrl	equ	0xFF6
  3605                           tablat	equ	0xFF5
  3606                           prodh	equ	0xFF4
  3607                           prodl	equ	0xFF3
  3608                           intcon	equ	0xFF2
  3609                           indf0	equ	0xFEF
  3610                           postinc0	equ	0xFEE
  3611                           fsr0h	equ	0xFEA
  3612                           fsr0l	equ	0xFE9
  3613                           wreg	equ	0xFE8
  3614                           postdec1	equ	0xFE5
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           indf2	equ	0xFDF
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function i2_Switch_Relay *****************
  3623 ;; Defined at:
  3624 ;;		line 58 in file "main.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  sw              1    0[COMRAM] unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3638 ;;      Params:         1       0       0       0       0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3641 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3642 ;;Total ram usage:        1 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		i2_Display
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text25
  3652  0011EC                     __ptext25:
  3653                           	opt stack 0
  3654  0011EC                     i2_Switch_Relay:
  3655                           	opt stack 23
  3656                           
  3657                           ;main.c: 59: switch(sw)
  3658                           
  3659                           ;incstack = 0
  3660                           ;incstack = 0
  3661  0011EC  D004               	goto	i2l1205
  3662  0011EE                     i2l47:
  3663  0011EE  808A               	bsf	3978,0,c	;volatile
  3664                           
  3665                           ;main.c: 62: break;
  3666  0011F0  D009               	goto	i2l50
  3667  0011F2                     i2l49:
  3668  0011F2  908A               	bcf	3978,0,c	;volatile
  3669                           
  3670                           ;main.c: 64: break;
  3671  0011F4  D007               	goto	i2l50
  3672  0011F6                     i2l1205:
  3673  0011F6  5001               	movf	i2Switch_Relay@sw,w,c
  3674                           
  3675                           ; Switch size 1, requested type "space"
  3676                           ; Number of cases is 2, Range of values is 0 to 1
  3677                           ; switch strategies available:
  3678                           ; Name         Instructions Cycles
  3679                           ; simple_byte            7     4 (average)
  3680                           ;	Chosen strategy is simple_byte
  3681  0011F8  0A00               	xorlw	0	; case 0
  3682  0011FA  B4D8               	btfsc	status,2,c
  3683  0011FC  D7FA               	goto	i2l49
  3684  0011FE  0A01               	xorlw	1	; case 1
  3685  001200  B4D8               	btfsc	status,2,c
  3686  001202  D7F5               	goto	i2l47
  3687  001204                     i2l50:
  3688  001204  0012               	return	
  3689  001206                     __end_ofi2_Switch_Relay:
  3690                           	opt stack 0
  3691                           pclatu	equ	0xFFB
  3692                           pclath	equ	0xFFA
  3693                           tblptru	equ	0xFF8
  3694                           tblptrh	equ	0xFF7
  3695                           tblptrl	equ	0xFF6
  3696                           tablat	equ	0xFF5
  3697                           prodh	equ	0xFF4
  3698                           prodl	equ	0xFF3
  3699                           intcon	equ	0xFF2
  3700                           indf0	equ	0xFEF
  3701                           postinc0	equ	0xFEE
  3702                           fsr0h	equ	0xFEA
  3703                           fsr0l	equ	0xFE9
  3704                           wreg	equ	0xFE8
  3705                           postdec1	equ	0xFE5
  3706                           fsr1h	equ	0xFE2
  3707                           fsr1l	equ	0xFE1
  3708                           indf2	equ	0xFDF
  3709                           fsr2h	equ	0xFDA
  3710                           fsr2l	equ	0xFD9
  3711                           status	equ	0xFD8
  3712                           pclatu	equ	0xFFB
  3713                           pclath	equ	0xFFA
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           prodh	equ	0xFF4
  3719                           prodl	equ	0xFF3
  3720                           intcon	equ	0xFF2
  3721                           indf0	equ	0xFEF
  3722                           postinc0	equ	0xFEE
  3723                           fsr0h	equ	0xFEA
  3724                           fsr0l	equ	0xFE9
  3725                           wreg	equ	0xFE8
  3726                           postdec1	equ	0xFE5
  3727                           fsr1h	equ	0xFE2
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734                           	psect	rparam
  3735  0000                     pclatu	equ	0xFFB
  3736                           pclath	equ	0xFFA
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           indf0	equ	0xFEF
  3745                           postinc0	equ	0xFEE
  3746                           fsr0h	equ	0xFEA
  3747                           fsr0l	equ	0xFE9
  3748                           wreg	equ	0xFE8
  3749                           postdec1	equ	0xFE5
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           fsr2h	equ	0xFDA
  3754                           fsr2l	equ	0xFD9
  3755                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        49
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      91
    BANK0           160      0      23
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Seq_count@ptr4	PTR unsigned char  size(2) Largest target is 1
		 -> Num4(COMRAM[1]), 

    Seq_count@ptr3	PTR unsigned char  size(2) Largest target is 1
		 -> Num3(COMRAM[1]), 

    Seq_count@ptr2	PTR unsigned char  size(2) Largest target is 1
		 -> Num2(COMRAM[1]), 

    Seq_count@ptr1	PTR unsigned char  size(2) Largest target is 1
		 -> Num1(COMRAM[1]), 

    Set_TIME@str	PTR unsigned char  size(2) Largest target is 10
		 -> str(COMRAM[10]), STR_2(CODE[5]), STR_1(CODE[5]), 

    Display@ptr	PTR unsigned char  size(2) Largest target is 7
		 -> array(COMRAM[7]), 

    Format_DEC@p	PTR unsigned char  size(2) Largest target is 10
		 -> str(COMRAM[10]), STR_2(CODE[5]), STR_1(CODE[5]), 

    Format_DEC@q	PTR unsigned char  size(2) Largest target is 7
		 -> array(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_Set_TIME
    _UsartConfig->_OpenUSART
    _Set_TIME->_Display
    _Display->_Seq_count
    _Delay_s_->_Delay10KTCYx
    _NumDisplay->_DisplayValue

Critical Paths under _Rx_isr in COMRAM

    _Rx_isr->i2_Set_TIME
    i2_Set_TIME->i2_Display
    _Reset_TIME->i2_Display
    i2_Display->i2_Seq_count
    i2_NumDisplay->i2_DisplayValue
    i2_Delay_s_->i2_Delay10KTCYx

Critical Paths under _main in BANK0

    None.

Critical Paths under _Rx_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Rx_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Rx_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Rx_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Rx_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Rx_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Rx_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Rx_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1275
                                             44 COMRAM     2     2      0
                            _Display
                           _Set_TIME
                   _Config_Interrupt
                        _UsartConfig
 ---------------------------------------------------------------------------------
 (1) _UsartConfig                                          2     0      2     180
                                             32 COMRAM     2     0      2
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     0      3     150
                                             29 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Config_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Set_TIME                                             2     0      2     615
                                             42 COMRAM     2     0      2
                         _Format_DEC
                            _Display
 ---------------------------------------------------------------------------------
 (2) _Display                                              5     5      0     465
                                             37 COMRAM     5     5      0
                       _Switch_Relay
                         _NumDisplay
                           _Delay_s_
                          _Seq_count
 ---------------------------------------------------------------------------------
 (3) _Seq_count                                            8     0      8     180
                                             29 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (3) _Delay_s_                                             1     1      0      15
                                             31 COMRAM     1     1      0
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10KTCYx                                         2     1      1      15
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _NumDisplay                                           3     1      2     120
                                             31 COMRAM     3     1      2
                       _Segment_init
                       _DisplayValue
 ---------------------------------------------------------------------------------
 (4) _DisplayValue                                         2     1      1      30
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _Segment_init                                         1     0      1      45
                                             29 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _Switch_Relay                                         1     0      1      15
                                             29 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _Format_DEC                                           4     0      4     120
                                             29 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Rx_isr                                              14    14      0    4320
                                             15 COMRAM    14    14      0
                         _Reset_TIME
                         i2_Set_TIME
 ---------------------------------------------------------------------------------
 (6) i2_Set_TIME                                           2     0      2    2460
                                             13 COMRAM     2     0      2
                       i2_Format_DEC
                          i2_Display
 ---------------------------------------------------------------------------------
 (7) i2_Format_DEC                                         4     0      4     480
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _Reset_TIME                                           1     1      0    1860
                                             13 COMRAM     1     1      0
                          i2_Display
 ---------------------------------------------------------------------------------
 (7) i2_Display                                            5     5      0    1860
                                              8 COMRAM     5     5      0
                     i2_Switch_Relay
                         i2_Delay_s_
                       i2_NumDisplay
                        i2_Seq_count
 ---------------------------------------------------------------------------------
 (8) i2_Seq_count                                          8     0      8     720
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (8) i2_NumDisplay                                         3     1      2     480
                                              2 COMRAM     3     1      2
                     i2_Segment_init
                     i2_DisplayValue
 ---------------------------------------------------------------------------------
 (9) i2_DisplayValue                                       2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (9) i2_Segment_init                                       1     0      1     180
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (8) i2_Delay_s_                                           1     1      0      60
                                              2 COMRAM     1     1      0
                     i2_Delay10KTCYx
 ---------------------------------------------------------------------------------
 (9) i2_Delay10KTCYx                                       2     1      1      60
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (8) i2_Switch_Relay                                       1     0      1      60
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display
     _Switch_Relay
     _NumDisplay
       _Segment_init
       _DisplayValue
     _Delay_s_
       _Delay10KTCYx
     _Seq_count
   _Set_TIME
     _Format_DEC
     _Display
       _Switch_Relay
       _NumDisplay
         _Segment_init
         _DisplayValue
       _Delay_s_
         _Delay10KTCYx
       _Seq_count
   _Config_Interrupt
   _UsartConfig
     _OpenUSART

 _Rx_isr (ROOT)
   _Reset_TIME
     i2_Display
       i2_Switch_Relay
       i2_Delay_s_
         i2_Delay10KTCYx
       i2_NumDisplay
         i2_Segment_init
         i2_DisplayValue
       i2_Seq_count
   i2_Set_TIME
     i2_Format_DEC
     i2_Display
       i2_Switch_Relay
       i2_Delay_s_
         i2_Delay10KTCYx
       i2_NumDisplay
         i2_Segment_init
         i2_DisplayValue
       i2_Seq_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      17       5       14.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2E      5B       1       95.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       E       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      20        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Jan 29 13:18:14 2014

    __size_of_Switch_Relay 001A                         l50 11EA                         l47 11D4  
                       l49 11D8                         u10 0C74                         u20 0CA4  
                       u30 0CD4                         u40 0D04                         u17 0C6E  
                       u27 0C9E                         u37 0CCE                         u47 0CFE  
              __CFG_BOR$ON 000000                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_LVP$ON 000000                        l126 110C                        l128 110E  
                      l240 0F9A                        l243 0FAC                        l244 0FAE  
                      l157 0B72                        l245 0FB8                        l237 0F8C  
                      l246 0FBA                        l239 0F98                        l248 0FD2  
                      l169 0E5C                        l483 121E                        l911 0866  
                      l921 08BA                        l923 08C4                        l927 0918  
                      l937 1158                        l897 11DC                        l987 10D8  
             __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000                        u907 1224  
                      _dot 004A                        _str 004B                        wreg 000FE8  
             __CFG_FOSC$HS 000000                main@config1 002E               __CFG_WDT$OFF 000000  
                     l1103 0B34                       l1043 10F4                       l1061 0AA4  
                     l1047 1100                       l1071 0AB8                       l1063 0AA8  
                     l1055 0A98                       l1081 0B0A                       l1073 0ABC  
                     l1065 0AAC                       l1057 0A9C                       l1091 0B1E  
                     l1083 0B0E                       l1067 0AB0                       l1059 0AA0  
                     l1093 0B22                       l1085 0B12                       l1069 0AB4  
                     l1077 0AC2                       l1095 0B26                       l1087 0B16  
                     l1079 0B00                       l1097 0B2A                       l1089 0B1A  
                     l1099 0B2E                       STR_1 0805                       STR_2 0800  
                     _PEIE 007F96                       _RCIE 007CED                       _RCIF 007CF5  
                     i2l50 1204                       _RCIP 007CFD                       i2l47 11EE  
                     i2l71 0F3E                       i2l72 0F3E                       i2l49 11F2  
                     _Num1 0045                       _Num2 0046                       _Num3 0047  
                     _Num4 0048                       _main 10A6                       _str2 0060  
                     _str3 002F                       fsr0h 000FEA                       fsr1h 000FE2  
                     indf0 000FEF                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
             _Switch_Relay 11D2                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 0014              __CFG_IESO$OFF 000000  
          ?i2_Segment_init 0001        Segment_init@Segment 001E              __CFG_MCLRE$ON 000000  
  __size_ofi2_Switch_Relay 001A            __end_of_Display 094E              __CFG_PLLDIV$5 000000  
           __CFG_CCP2MX$ON 000000                      ?_main 0001                Format_DEC@p 001E  
              Format_DEC@q 0020                      i2l126 113E                      i2l128 1140  
                    i2l157 0C56                      i2l169 0EEE                      i2l483 1234  
                    _RCREG 000FAE                      _RCSTA 000FAB                      _SPBRG 000FAF  
                    _PORTD 000F83              __CFG_USBDIV$1 000000                      _TRISD 000F95  
                    _TXREG 000FAD      __size_of_Delay10KTCYx 0016                      _TXSTA 000FAC  
            __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000                ?i2_Delay_s_ 0001  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
                    _array 0055         __size_ofi2_Display 0142                      tablat 000FF5  
       i2Delay10KTCYx@unit 0001                      status 000FD8             __CFG_ICPRT$OFF 000000  
         __end_of_Delay_s_ 1268                ?i2_Set_TIME 000E                 _Format_DEC 0C58  
          __initialization 0FD4               __end_of_main 10DE               _Delay10KTCYx 121E  
         __end_of_Set_TIME 1068                     ??_main 002D    __size_ofi2_Delay10KTCYx 0016  
            __activetblptr 000002       __end_of_DisplayValue 0B74                     i2l1205 11F6  
                   i2l1311 0B80                     i2l1321 0B94                     i2l1313 0B84  
                   i2l1243 1126                     i2l1323 0B98                     i2l1315 0B88  
                   i2l1331 0BA6                     i2l1341 0BFA                     i2l1325 0B9C  
                   i2l1317 0B8C                     i2l1333 0BE4                     i2l1309 0B7C  
                   i2l1247 1132                     i2l1351 0C0E                     i2l1343 0BFE  
                   i2l1335 0BEE                     i2l1327 0BA0                     i2l1319 0B90  
                   i2l1423 1180                     i2l1503 09FC                     i2l1353 0C12  
                   i2l1345 0C02                     i2l1337 0BF2                     i2l1505 0A06  
                   i2l1347 0C06                     i2l1339 0BF6                     i2l1349 0C0A  
                   i2l1357 0C18                     i2l1519 0A5A                     i2l1543 0F22  
                   i2l1545 0F2A                     i2l1547 0F2E                     i2l1493 09A8  
                   i2l1549 0F3A                 _NumDisplay 1142                     _SPBRGH 000FB0  
               _Reset_TIME 1192                  ??_Display 0026   __end_of_Config_Interrupt 1282  
           __CFG_XINST$OFF 000000                     _Rx_isr 0008         __size_of_OpenUSART 005C  
      __size_ofi2_Delay_s_ 000E             __CFG_STVREN$ON 000000          __end_ofi2_Display 0A90  
      i2NumDisplay@Segment 0004         __size_of_Seq_count 0092                     clear_0 0FDA  
             __pdataCOMRAM 002F        __size_ofi2_Set_TIME 003E               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
              Set_TIME@str 002B                 __accesstop 0060    __end_of__initialization 1020  
          __CFG_PBADEN$OFF 000000           NumDisplay@Number 0020              ?_Segment_init 001E  
             ?i2_Seq_count 0001                ?_Format_DEC 001E             i2_Switch_Relay 11EC  
           __pcstackCOMRAM 0001               __pidataBANK0 1206              Seq_count@ptr1 001E  
            Seq_count@ptr2 0020              Seq_count@ptr3 0022              Seq_count@ptr4 0024  
            ??_UsartConfig 0023                  ?_Delay_s_ 0001          __end_of_OpenUSART 0FD4  
              ?_NumDisplay 0020          __end_of_Seq_count 0E5E           ??i2_Segment_init 0002  
              ?_Reset_TIME 0001     __end_ofi2_Switch_Relay 1206             ??_Segment_init 001F  
                ?_Set_TIME 002B                    ?_Rx_isr 0001             i2_Delay10KTCYx 1234  
    __size_of_DisplayValue 00E4         DisplayValue@Number 001E               ??i2_Delay_s_ 0003  
               ??_Delay_s_ 0020                    i2u50_40 0D5E                    i2u50_47 0D58  
                  i2u51_40 0D8E                    i2u51_47 0D88                    i2u52_40 0DBE  
                  i2u52_47 0DB8        __size_of_Format_DEC 00BA                    i2u49_40 0D2E  
                  i2u49_47 0D28                    i2u91_47 123A                    i2u89_40 0F2A  
                  i2u89_41 0F28        __end_of_UsartConfig 125A            __CFG_VREGEN$OFF 000000  
                  _Display 080C            ?i2_Switch_Relay 0001               ??i2_Set_TIME 0010  
               ??_Set_TIME 002D                    __Hparam 0000                    __Lparam 0000  
             _DisplayValue 0A90            __size_of_Rx_isr 0F70         __end_ofi2_Delay_s_ 1276  
             __psmallconst 0800     __end_ofi2_Delay10KTCYx 124A                    __pcinit 0FD4  
  __size_ofi2_DisplayValue 00E4                    __ramtop 0800        __size_of_NumDisplay 0028  
                  __ptext0 10A6                    __ptext1 124A                    __ptext2 0F78  
                  __ptext3 1276                    __ptext4 102A                    __ptext5 080C  
                  __ptext6 0DCC                    __ptext7 125A                    __ptext8 121E  
                  __ptext9 1142        __size_of_Reset_TIME 0026         __end_ofi2_Set_TIME 10A6  
           __pintcode_body 0EF0       end_of_initialization 1020              __Lmediumconst 0000  
                  int_func 0EF0          ?_Config_Interrupt 0001              ?i2_Format_DEC 0001  
                _RCSTAbits 000FAB         ??_Config_Interrupt 001E       __size_ofi2_Seq_count 0092  
                  postdec1 000FE5                    postinc0 000FEE            ?i2_Delay10KTCYx 0001  
                _PORTAbits 000F80                  i2_Display 094E         UsartConfig@config1 0021  
       UsartConfig@config2 0022       __end_of_Segment_init 1110                _UsartConfig 124A  
                _TRISAbits 000F92                  _TRISBbits 000F93                  _TRISCbits 000F94  
        NumDisplay@Segment 0021              ?i2_NumDisplay 0003                  _TXSTAbits 000FAC  
           ??i2_Format_DEC 0005               ??_Format_DEC 0022             __end_of_Rx_isr 0F78  
            __pidataCOMRAM 11B8                 ?i2_Display 0001        start_initialization 0FD4  
       __end_of_Format_DEC 0D12          __size_of_Delay_s_ 000E             ??i2_NumDisplay 0005  
             ??_NumDisplay 0022                  _OpenUSART 0F78               ??_Reset_TIME 000E  
            ?_Switch_Relay 001E                  _Seq_count 0DCC          __size_of_Set_TIME 003E  
                 ??_Rx_isr 0010         i2NumDisplay@Number 0003                __pdataBANK0 0060  
         __CFG_LPT1OSC$OFF 000000             i2_DisplayValue 0B74         __end_of_NumDisplay 116A  
       __end_of_Reset_TIME 11B8                __pbssCOMRAM 0049        __end_of__stringdata 080A  
         ??i2_Switch_Relay 0002             ??_Switch_Relay 001F                 ?_OpenUSART 001E  
                 ?_Display 0001                 ?_Seq_count 001E                  __pintcode 0008  
   __end_ofi2_DisplayValue 0C58              ?_Delay10KTCYx 001E      __size_of_Segment_init 0032  
              ??i2_Display 0009                __smallconst 0800              i2Format_DEC@p 0001  
            i2Format_DEC@q 0003       __end_ofi2_Format_DEC 0DCC            i2Seq_count@ptr1 0001  
          i2Seq_count@ptr2 0003            i2Seq_count@ptr3 0005            i2Seq_count@ptr4 0007  
                 _LATBbits 000F8A                   _PIE1bits 000F9D               _Segment_init 10DE  
         ??i2_Delay10KTCYx 0002                   _PIR1bits 000F9E           __CFG_WDTPS$32768 000000  
           ??_Delay10KTCYx 001F            ?i2_DisplayValue 0001    __size_ofi2_Segment_init 0032  
                 Display@x 0027       __end_ofi2_NumDisplay 1192                __stringdata 0800  
__size_of_Config_Interrupt 000C       i2DisplayValue@Number 0001               ?_UsartConfig 0021  
                 _Delay_s_ 125A           Delay10KTCYx@unit 001E                  copy_data0 0FF4  
                copy_data1 1014                ??_OpenUSART 0021               i2Display@ptr 000C  
          OpenUSART@config 001E                   _Set_TIME 102A           __size_of_Display 0142  
            ??i2_Seq_count 0009                ??_Seq_count 0026                   __Hrparam 0000  
                 __Lrparam 0000           i2Switch_Relay@sw 0001       __end_of_Switch_Relay 11EC  
                 __ptext10 0A90                   __ptext11 10DE                   __ptext20 116A  
                 __ptext12 11D2                   __ptext21 0B74                   __ptext13 0C58  
                 __ptext22 1110                   __ptext23 1268                   __ptext15 1068  
                 __ptext24 1234                   __ptext16 0D12                   __ptext25 11EC  
                 __ptext17 1192                   __ptext18 094E                   __ptext19 0E5E  
            i2Set_TIME@str 000E              __size_of_main 0038      i2Segment_init@Segment 0001  
      __end_ofi2_Seq_count 0EF0      __size_ofi2_Format_DEC 00BA      __CFG_CPUDIV$OSC1_PLL2 000000  
               _INTCONbits 000FF2             OpenUSART@spbrg 001F       __end_of_Delay10KTCYx 1234  
                 intlevel2 0000               i2_Format_DEC 0D12      __size_ofi2_NumDisplay 0028  
            ?_DisplayValue 001E             i2_Segment_init 1110                 i2Display@x 000A  
         _Config_Interrupt 1276                 i2_Delay_s_ 1268       __size_of_UsartConfig 0010  
           Switch_Relay@sw 001E               i2_NumDisplay 116A                 Display@ptr 0029  
         ??i2_DisplayValue 0002                 i2_Set_TIME 1068               _USART_Status 0049  
              i2_Seq_count 0E5E     __end_ofi2_Segment_init 1142             ??_DisplayValue 001F  
