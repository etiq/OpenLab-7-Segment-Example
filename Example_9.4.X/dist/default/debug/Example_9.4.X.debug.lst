

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jan 23 10:54:28 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           	psect	idataCOMRAM
    19  007DE2                     __pidataCOMRAM:
    20                           	opt stack 0
    21                           
    22                           ;initializer for _Num1
    23  007DE2  09                 	db	9
    24                           
    25                           ;initializer for _Num2
    26  007DE3  09                 	db	9
    27                           
    28                           ;initializer for _Num3
    29  007DE4  09                 	db	9
    30                           
    31                           ;initializer for _Num4
    32  007DE5  09                 	db	9
    33  0000                     _PORTAbits	set	3968
    34  0000                     _PORTD	set	3971
    35  0000                     _TRISAbits	set	3986
    36  0000                     _TRISD	set	3989
    37                           
    38                           ; #config settings
    39  0000                     
    40                           	psect	cinit
    41  007E0A                     __pcinit:
    42                           	opt stack 0
    43  007E0A                     start_initialization:
    44                           	opt stack 0
    45  007E0A                     __initialization:
    46                           	opt stack 0
    47                           
    48                           ; Initialize objects allocated to COMRAM (4 bytes)
    49                           ; load TBLPTR registers with __pidataCOMRAM
    50  007E0A  0EE2               	movlw	low __pidataCOMRAM
    51  007E0C  6EF6               	movwf	tblptrl,c
    52  007E0E  0E7D               	movlw	high __pidataCOMRAM
    53  007E10  6EF7               	movwf	tblptrh,c
    54  007E12  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    55  007E14  6EF8               	movwf	tblptru,c
    56  007E16  EE00  F00C         	lfsr	0,__pdataCOMRAM
    57  007E1A  EE10 F004          	lfsr	1,4
    58  007E1E                     copy_data0:
    59  007E1E  0009               	tblrd		*+
    60  007E20  CFF5 FFEE          	movff	tablat,postinc0
    61  007E24  50E5               	movf	postdec1,w,c
    62  007E26  50E1               	movf	fsr1l,w,c
    63  007E28  E1FA               	bnz	copy_data0
    64  007E2A                     end_of_initialization:
    65                           	opt stack 0
    66  007E2A                     __end_of__initialization:
    67                           	opt stack 0
    68  007E2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
    69  007E2C  6EF8               	movwf	tblptru,c
    70  007E2E  0100               	movlb	0
    71  007E30  EFB6  F03F         	goto	_main	;jump to C main() function
    72                           tblptru	equ	0xFF8
    73                           tblptrh	equ	0xFF7
    74                           tblptrl	equ	0xFF6
    75                           tablat	equ	0xFF5
    76                           postinc0	equ	0xFEE
    77                           postdec1	equ	0xFE5
    78                           fsr1l	equ	0xFE1
    79                           
    80                           	psect	dataCOMRAM
    81  00000C                     __pdataCOMRAM:
    82                           	opt stack 0
    83  00000C                     _Num1:
    84                           	opt stack 0
    85  00000C                     	ds	1
    86  00000D                     _Num2:
    87                           	opt stack 0
    88  00000D                     	ds	1
    89  00000E                     _Num3:
    90                           	opt stack 0
    91  00000E                     	ds	1
    92  00000F                     _Num4:
    93                           	opt stack 0
    94  00000F                     	ds	1
    95                           tblptru	equ	0xFF8
    96                           tblptrh	equ	0xFF7
    97                           tblptrl	equ	0xFF6
    98                           tablat	equ	0xFF5
    99                           postinc0	equ	0xFEE
   100                           postdec1	equ	0xFE5
   101                           fsr1l	equ	0xFE1
   102                           
   103                           	psect	cstackCOMRAM
   104  000001                     __pcstackCOMRAM:
   105                           	opt stack 0
   106  000001                     ?_Seq_count:
   107                           	opt stack 0
   108  000001                     ?_Delay10KTCYx:
   109                           	opt stack 0
   110  000001                     ?_Segment_init:
   111                           	opt stack 0
   112  000001                     Segment_init@Segment:
   113                           	opt stack 0
   114  000001                     Delay10KTCYx@unit:
   115                           	opt stack 0
   116  000001                     Seq_count@ptr1:
   117                           	opt stack 0
   118                           
   119                           ; 2 bytes @ 0x0
   120  000001                     	ds	1
   121  000002                     ?_NumDisplay:
   122                           	opt stack 0
   123  000002                     ??_Delay10KTCYx:
   124  000002                     NumDisplay@Number:
   125                           	opt stack 0
   126                           
   127                           ; 1 bytes @ 0x1
   128  000002                     	ds	1
   129  000003                     ??_Delay_s_:
   130  000003                     NumDisplay@Segment:
   131                           	opt stack 0
   132  000003                     Seq_count@ptr2:
   133                           	opt stack 0
   134                           
   135                           ; 2 bytes @ 0x2
   136  000003                     	ds	1
   137  000004                     
   138                           ; 0 bytes @ 0x3
   139  000004                     	ds	1
   140  000005                     Seq_count@ptr3:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x4
   144  000005                     	ds	2
   145  000007                     Seq_count@ptr4:
   146                           	opt stack 0
   147                           
   148                           ; 2 bytes @ 0x6
   149  000007                     	ds	2
   150  000009                     ??_main:
   151                           
   152                           ; 0 bytes @ 0x8
   153  000009                     	ds	1
   154  00000A                     main@x:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x9
   158  00000A                     	ds	2
   159                           tblptru	equ	0xFF8
   160                           tblptrh	equ	0xFF7
   161                           tblptrl	equ	0xFF6
   162                           tablat	equ	0xFF5
   163                           postinc0	equ	0xFEE
   164                           postdec1	equ	0xFE5
   165                           fsr1l	equ	0xFE1
   166                           
   167 ;;
   168 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   169 ;;
   170 ;; *************** function _main *****************
   171 ;; Defined at:
   172 ;;		line 34 in file "main.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;  x               2    9[COMRAM] int 
   177 ;; Return value:  Size  Location     Type
   178 ;;		None               void
   179 ;; Registers used:
   180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   186 ;;      Params:         0       0       0       0       0       0       0       0       0
   187 ;;      Locals:         2       0       0       0       0       0       0       0       0
   188 ;;      Temps:          1       0       0       0       0       0       0       0       0
   189 ;;      Totals:         3       0       0       0       0       0       0       0       0
   190 ;;Total ram usage:        3 bytes
   191 ;; Hardware stack levels required when called:    2
   192 ;; This function calls:
   193 ;;		_NumDisplay
   194 ;;		_Delay_s_
   195 ;;		_Seq_count
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           	psect	text0
   202  007F6C                     __ptext0:
   203                           	opt stack 0
   204  007F6C                     _main:
   205                           	opt stack 29
   206  007F6C                     l17:
   207                           
   208                           ;main.c: 37: {
   209                           ;main.c: 38: int x = 0;
   210  007F6C  0E00               	movlw	0
   211  007F6E  6E0B               	movwf	main@x+1,c
   212  007F70  0E00               	movlw	0
   213  007F72  6E0A               	movwf	main@x,c
   214                           
   215                           ;main.c: 39: while(x<=10)
   216  007F74  D02A               	goto	l780
   217  007F76                     l766:
   218                           
   219                           ;main.c: 40: {
   220                           ;main.c: 41: NumDisplay(Num1, 1);
   221  007F76  C00C  F002         	movff	_Num1,?_NumDisplay
   222  007F7A  6E09               	movwf	??_main& (0+255),c
   223  007F7C  0E01               	movlw	1
   224  007F7E  6E03               	movwf	?_NumDisplay+1,c
   225  007F80  5009               	movf	??_main& (0+255),w,c
   226  007F82  EC33  F03F         	call	_NumDisplay	;wreg free
   227                           
   228                           ;main.c: 42: Delay_s_();
   229  007F86  ECF3  F03E         	call	_Delay_s_	;wreg free
   230                           
   231                           ;main.c: 43: NumDisplay(Num2, 2);
   232  007F8A  C00D  F002         	movff	_Num2,?_NumDisplay
   233  007F8E  6E09               	movwf	??_main& (0+255),c
   234  007F90  0E02               	movlw	2
   235  007F92  6E03               	movwf	?_NumDisplay+1,c
   236  007F94  5009               	movf	??_main& (0+255),w,c
   237  007F96  EC33  F03F         	call	_NumDisplay	;wreg free
   238                           
   239                           ;main.c: 44: Delay_s_();
   240  007F9A  ECF3  F03E         	call	_Delay_s_	;wreg free
   241                           
   242                           ;main.c: 45: NumDisplay(Num3, 3);
   243  007F9E  C00E  F002         	movff	_Num3,?_NumDisplay
   244  007FA2  6E09               	movwf	??_main& (0+255),c
   245  007FA4  0E03               	movlw	3
   246  007FA6  6E03               	movwf	?_NumDisplay+1,c
   247  007FA8  5009               	movf	??_main& (0+255),w,c
   248  007FAA  EC33  F03F         	call	_NumDisplay	;wreg free
   249                           
   250                           ;main.c: 46: Delay_s_();
   251  007FAE  ECF3  F03E         	call	_Delay_s_	;wreg free
   252                           
   253                           ;main.c: 47: NumDisplay(Num4, 4);
   254  007FB2  C00F  F002         	movff	_Num4,?_NumDisplay
   255  007FB6  6E09               	movwf	??_main& (0+255),c
   256  007FB8  0E04               	movlw	4
   257  007FBA  6E03               	movwf	?_NumDisplay+1,c
   258  007FBC  5009               	movf	??_main& (0+255),w,c
   259  007FBE  EC33  F03F         	call	_NumDisplay	;wreg free
   260                           
   261                           ;main.c: 48: Delay_s_();
   262  007FC2  ECF3  F03E         	call	_Delay_s_	;wreg free
   263                           
   264                           ;main.c: 49: x++;
   265  007FC6  4A0A               	infsnz	main@x,f,c
   266  007FC8  2A0B               	incf	main@x+1,f,c
   267  007FCA                     l780:
   268  007FCA  500B               	movf	main@x+1,w,c
   269  007FCC  0A80               	xorlw	128
   270  007FCE  0F80               	addlw	-128
   271  007FD0  0E0B               	movlw	11
   272  007FD2  B4D8               	btfsc	status,2,c
   273  007FD4  5C0A               	subwf	main@x,w,c
   274  007FD6  A0D8               	btfss	status,0,c
   275  007FD8  D7CE               	goto	l766
   276                           
   277                           ;main.c: 50: }
   278                           ;main.c: 51: Seq_count(&Num1, &Num2, &Num3, &Num4);
   279  007FDA  0E00               	movlw	high _Num1
   280  007FDC  6E02               	movwf	?_Seq_count+1,c
   281  007FDE  0E0C               	movlw	low _Num1
   282  007FE0  6E01               	movwf	?_Seq_count,c
   283  007FE2  0E00               	movlw	high _Num2
   284  007FE4  6E04               	movwf	?_Seq_count+3,c
   285  007FE6  0E0D               	movlw	low _Num2
   286  007FE8  6E03               	movwf	?_Seq_count+2,c
   287  007FEA  0E00               	movlw	high _Num3
   288  007FEC  6E06               	movwf	?_Seq_count+5,c
   289  007FEE  0E0E               	movlw	low _Num3
   290  007FF0  6E05               	movwf	?_Seq_count+4,c
   291  007FF2  0E00               	movlw	high _Num4
   292  007FF4  6E08               	movwf	?_Seq_count+7,c
   293  007FF6  0E0F               	movlw	low _Num4
   294  007FF8  6E07               	movwf	?_Seq_count+6,c
   295  007FFA  EC6D  F03F         	call	_Seq_count	;wreg free
   296  007FFE  D7B6               	goto	l17
   297  008000                     __end_of_main:
   298                           	opt stack 0
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           postdec1	equ	0xFE5
   305                           fsr1l	equ	0xFE1
   306                           status	equ	0xFD8
   307                           
   308 ;; *************** function _Seq_count *****************
   309 ;; Defined at:
   310 ;;		line 12 in file "counter.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  ptr1            2    0[COMRAM] PTR unsigned char 
   313 ;;		 -> Num1(1), 
   314 ;;  ptr2            2    2[COMRAM] PTR unsigned char 
   315 ;;		 -> Num2(1), 
   316 ;;  ptr3            2    4[COMRAM] PTR unsigned char 
   317 ;;		 -> Num3(1), 
   318 ;;  ptr4            2    6[COMRAM] PTR unsigned char 
   319 ;;		 -> Num4(1), 
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;		None               void
   324 ;; Registers used:
   325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   331 ;;      Params:         8       0       0       0       0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0       0       0
   334 ;;      Totals:         8       0       0       0       0       0       0       0       0
   335 ;;Total ram usage:        8 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text1
   345  007EDA                     __ptext1:
   346                           	opt stack 0
   347  007EDA                     _Seq_count:
   348                           	opt stack 30
   349                           
   350                           ;counter.c: 13: --*ptr1;
   351                           
   352                           ;incstack = 0
   353                           ;incstack = 0
   354  007EDA  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   355  007EDE  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   356  007EE2  06DF               	decf	indf2,f,c
   357                           
   358                           ;counter.c: 14: if(*ptr1==0xFF)
   359  007EE4  0EFF               	movlw	255
   360  007EE6  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   361  007EEA  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   362  007EEE  62DF               	cpfseq	indf2,c
   363  007EF0  D03C               	goto	l77
   364                           
   365                           ;counter.c: 15: {
   366                           ;counter.c: 16: --*ptr2;
   367  007EF2  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   368  007EF6  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   369  007EFA  06DF               	decf	indf2,f,c
   370                           
   371                           ;counter.c: 17: *ptr1 = 9;
   372  007EFC  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   373  007F00  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   374  007F04  0E09               	movlw	9
   375  007F06  6EDF               	movwf	indf2,c
   376                           
   377                           ;counter.c: 18: if(*ptr2==0xFF)
   378  007F08  0EFF               	movlw	255
   379  007F0A  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   380  007F0E  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   381  007F12  62DF               	cpfseq	indf2,c
   382  007F14  D02A               	goto	l77
   383                           
   384                           ;counter.c: 19: {
   385                           ;counter.c: 20: --*ptr3;
   386  007F16  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   387  007F1A  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   388  007F1E  06DF               	decf	indf2,f,c
   389                           
   390                           ;counter.c: 21: *ptr2=9;
   391  007F20  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   392  007F24  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   393  007F28  0E09               	movlw	9
   394  007F2A  6EDF               	movwf	indf2,c
   395                           
   396                           ;counter.c: 22: if(*ptr3==0xFF)
   397  007F2C  0EFF               	movlw	255
   398  007F2E  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   399  007F32  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   400  007F36  62DF               	cpfseq	indf2,c
   401  007F38  D018               	goto	l77
   402                           
   403                           ;counter.c: 23: {
   404                           ;counter.c: 24: --*ptr4;
   405  007F3A  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   406  007F3E  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   407  007F42  06DF               	decf	indf2,f,c
   408                           
   409                           ;counter.c: 25: *ptr3=9;
   410  007F44  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   411  007F48  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   412  007F4C  0E09               	movlw	9
   413  007F4E  6EDF               	movwf	indf2,c
   414                           
   415                           ;counter.c: 26: if(*ptr4==0xFF)
   416  007F50  0EFF               	movlw	255
   417  007F52  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   418  007F56  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   419  007F5A  62DF               	cpfseq	indf2,c
   420  007F5C  D006               	goto	l77
   421                           
   422                           ;counter.c: 27: {
   423                           ;counter.c: 28: *ptr4=9;
   424  007F5E  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   425  007F62  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   426  007F66  0E09               	movlw	9
   427  007F68  6EDF               	movwf	indf2,c
   428  007F6A                     l77:
   429  007F6A  0012               	return	
   430  007F6C                     __end_of_Seq_count:
   431                           	opt stack 0
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           indf2	equ	0xFDF
   440                           fsr2h	equ	0xFDA
   441                           fsr2l	equ	0xFD9
   442                           status	equ	0xFD8
   443                           
   444 ;; *************** function _Delay_s_ *****************
   445 ;; Defined at:
   446 ;;		line 29 in file "delay.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;		None               void
   453 ;; Registers used:
   454 ;;		wreg, status,2, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   460 ;;      Params:         0       0       0       0       0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0
   462 ;;      Temps:          1       0       0       0       0       0       0       0       0
   463 ;;      Totals:         1       0       0       0       0       0       0       0       0
   464 ;;Total ram usage:        1 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    1
   467 ;; This function calls:
   468 ;;		_Delay10KTCYx
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text2
   475  007DE6                     __ptext2:
   476                           	opt stack 0
   477  007DE6                     _Delay_s_:
   478                           	opt stack 29
   479                           
   480                           ;delay.c: 30: Delay10KTCYx(2);
   481                           
   482                           ;incstack = 0
   483                           ;incstack = 0
   484  007DE6  6E03               	movwf	??_Delay_s_& (0+255),c
   485  007DE8  0E02               	movlw	2
   486  007DEA  6E01               	movwf	?_Delay10KTCYx,c
   487  007DEC  5003               	movf	??_Delay_s_& (0+255),w,c
   488  007DEE  ECFA  F03E         	call	_Delay10KTCYx	;wreg free
   489  007DF2  0012               	return	
   490  007DF4                     __end_of_Delay_s_:
   491                           	opt stack 0
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           indf2	equ	0xFDF
   500                           fsr2h	equ	0xFDA
   501                           fsr2l	equ	0xFD9
   502                           status	equ	0xFD8
   503                           
   504 ;; *************** function _Delay10KTCYx *****************
   505 ;; Defined at:
   506 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d10ktcyx.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  unit            1    0[COMRAM] unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;		None               void
   513 ;; Registers used:
   514 ;;		wreg
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         1       0       0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0
   522 ;;      Temps:          1       0       0       0       0       0       0       0       0
   523 ;;      Totals:         2       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        2 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_Delay_s_
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text3
   534  007DF4                     __ptext3:
   535                           	opt stack 0
   536  007DF4                     _Delay10KTCYx:
   537                           	opt stack 29
   538  007DF4                     l288:
   539  007DF4  0E0D               	movlw	13
   540  007DF6  6E02               	movwf	??_Delay10KTCYx& (0+255),c
   541  007DF8  0EFB               	movlw	251
   542  007DFA                     u127:
   543  007DFA  2EE8               	decfsz	wreg,f,c
   544  007DFC  D7FE               	goto	u127
   545  007DFE  2E02               	decfsz	??_Delay10KTCYx& (0+255),f,c
   546  007E00  D7FC               	goto	u127
   547  007E02  D000               	nop2	
   548  007E04  2E01               	decfsz	Delay10KTCYx@unit,f,c
   549  007E06  D7F6               	goto	l288
   550  007E08  0012               	return	
   551  007E0A                     __end_of_Delay10KTCYx:
   552                           	opt stack 0
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           indf2	equ	0xFDF
   562                           fsr2h	equ	0xFDA
   563                           fsr2l	equ	0xFD9
   564                           status	equ	0xFD8
   565                           
   566 ;; *************** function _NumDisplay *****************
   567 ;; Defined at:
   568 ;;		line 65 in file "segment.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  Number          1    1[COMRAM] unsigned char 
   571 ;;  Segment         1    2[COMRAM] unsigned char 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;		None               void
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   583 ;;      Params:         2       0       0       0       0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0
   586 ;;      Totals:         2       0       0       0       0       0       0       0       0
   587 ;;Total ram usage:        2 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    1
   590 ;; This function calls:
   591 ;;		_Segment_init
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text4
   598  007E66                     __ptext4:
   599                           	opt stack 0
   600  007E66                     _NumDisplay:
   601                           	opt stack 29
   602                           
   603                           ;segment.c: 67: Segment_init(Segment);
   604                           
   605                           ;incstack = 0
   606                           ;incstack = 0
   607  007E66  C003  F001         	movff	NumDisplay@Segment,?_Segment_init
   608  007E6A  EC1A  F03F         	call	_Segment_init	;wreg free
   609                           
   610                           ;segment.c: 68: switch (Number)
   611  007E6E  D015               	goto	l756
   612  007E70                     l734:
   613                           
   614                           ;segment.c: 71: PORTD = 0b11000000;
   615  007E70  0EC0               	movlw	192
   616  007E72  D011               	goto	L9
   617  007E74                     l736:
   618                           
   619                           ;segment.c: 74: PORTD = 0b11111001;
   620  007E74  0EF9               	movlw	249
   621  007E76  D00F               	goto	L9
   622  007E78                     l738:
   623                           
   624                           ;segment.c: 77: PORTD = 0b10100100;
   625  007E78  0EA4               	movlw	164
   626  007E7A  D00D               	goto	L9
   627  007E7C                     l740:
   628                           
   629                           ;segment.c: 80: PORTD = 0b10110000;
   630  007E7C  0EB0               	movlw	176
   631  007E7E  D00B               	goto	L9
   632  007E80                     l742:
   633                           
   634                           ;segment.c: 83: PORTD = 0b10011001;
   635  007E80  0E99               	movlw	153
   636  007E82  D009               	goto	L9
   637  007E84                     l744:
   638                           
   639                           ;segment.c: 86: PORTD = 0b10010010;
   640  007E84  0E92               	movlw	146
   641  007E86  D007               	goto	L9
   642  007E88                     l746:
   643                           
   644                           ;segment.c: 89: PORTD = 0b10000010;
   645  007E88  0E82               	movlw	130
   646  007E8A  D005               	goto	L9
   647  007E8C                     l748:
   648                           
   649                           ;segment.c: 92: PORTD = 0b11111000;
   650  007E8C  0EF8               	movlw	248
   651  007E8E  D003               	goto	L9
   652  007E90                     l750:
   653                           
   654                           ;segment.c: 95: PORTD = 0b10000000;
   655  007E90  0E80               	movlw	128
   656  007E92  D001               	goto	L9
   657  007E94                     l752:
   658                           
   659                           ;segment.c: 98: PORTD = 0b10010000;
   660  007E94  0E90               	movlw	144
   661  007E96                     L9:
   662  007E96  6E83               	movwf	3971,c	;volatile
   663                           
   664                           ;segment.c: 99: break;
   665  007E98  D01F               	goto	l70
   666  007E9A                     l756:
   667  007E9A  5002               	movf	NumDisplay@Number,w,c
   668                           
   669                           ; Switch size 1, requested type "space"
   670                           ; Number of cases is 10, Range of values is 0 to 9
   671                           ; switch strategies available:
   672                           ; Name         Instructions Cycles
   673                           ; simple_byte           31    16 (average)
   674                           ;	Chosen strategy is simple_byte
   675  007E9C  0A00               	xorlw	0	; case 0
   676  007E9E  B4D8               	btfsc	status,2,c
   677  007EA0  D7E7               	goto	l734
   678  007EA2  0A01               	xorlw	1	; case 1
   679  007EA4  B4D8               	btfsc	status,2,c
   680  007EA6  D7E6               	goto	l736
   681  007EA8  0A03               	xorlw	3	; case 2
   682  007EAA  B4D8               	btfsc	status,2,c
   683  007EAC  D7E5               	goto	l738
   684  007EAE  0A01               	xorlw	1	; case 3
   685  007EB0  B4D8               	btfsc	status,2,c
   686  007EB2  D7E4               	goto	l740
   687  007EB4  0A07               	xorlw	7	; case 4
   688  007EB6  B4D8               	btfsc	status,2,c
   689  007EB8  D7E3               	goto	l742
   690  007EBA  0A01               	xorlw	1	; case 5
   691  007EBC  B4D8               	btfsc	status,2,c
   692  007EBE  D7E2               	goto	l744
   693  007EC0  0A03               	xorlw	3	; case 6
   694  007EC2  B4D8               	btfsc	status,2,c
   695  007EC4  D7E1               	goto	l746
   696  007EC6  0A01               	xorlw	1	; case 7
   697  007EC8  B4D8               	btfsc	status,2,c
   698  007ECA  D7E0               	goto	l748
   699  007ECC  0A0F               	xorlw	15	; case 8
   700  007ECE  B4D8               	btfsc	status,2,c
   701  007ED0  D7DF               	goto	l750
   702  007ED2  0A01               	xorlw	1	; case 9
   703  007ED4  B4D8               	btfsc	status,2,c
   704  007ED6  D7DE               	goto	l752
   705  007ED8                     l70:
   706  007ED8  0012               	return	
   707  007EDA                     __end_of_NumDisplay:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           postdec1	equ	0xFE5
   716                           fsr1l	equ	0xFE1
   717                           indf2	equ	0xFDF
   718                           fsr2h	equ	0xFDA
   719                           fsr2l	equ	0xFD9
   720                           status	equ	0xFD8
   721                           
   722 ;; *************** function _Segment_init *****************
   723 ;; Defined at:
   724 ;;		line 41 in file "segment.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  Segment         1    0[COMRAM] unsigned char 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;		None               void
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   738 ;;      Params:         1       0       0       0       0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0
   741 ;;      Totals:         1       0       0       0       0       0       0       0       0
   742 ;;Total ram usage:        1 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_NumDisplay
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text5
   752  007E34                     __ptext5:
   753                           	opt stack 0
   754  007E34                     _Segment_init:
   755                           	opt stack 29
   756                           
   757                           ;segment.c: 45: TRISD = 0x00;
   758                           
   759                           ;incstack = 0
   760                           ;incstack = 0
   761  007E34  0E00               	movlw	0
   762  007E36  6E95               	movwf	3989,c	;volatile
   763                           
   764                           ;segment.c: 46: TRISAbits.TRISA0 = 0;
   765  007E38  9092               	bcf	3986,0,c	;volatile
   766                           
   767                           ;segment.c: 47: TRISAbits.TRISA1 = 0;
   768  007E3A  9292               	bcf	3986,1,c	;volatile
   769                           
   770                           ;segment.c: 48: TRISAbits.TRISA2 = 0;
   771  007E3C  9492               	bcf	3986,2,c	;volatile
   772                           
   773                           ;segment.c: 49: TRISAbits.TRISA3 = 0;
   774  007E3E  9692               	bcf	3986,3,c	;volatile
   775                           
   776                           ;segment.c: 52: if(Segment == 1)
   777  007E40  0401               	decf	Segment_init@Segment,w,c
   778  007E42  A4D8               	btfss	status,2,c
   779  007E44  D002               	goto	l724
   780                           
   781                           ;segment.c: 53: PORTAbits.RA0 = 1;
   782  007E46  8080               	bsf	3968,0,c	;volatile
   783  007E48  D00D               	goto	l55
   784  007E4A                     l724:
   785                           
   786                           ;segment.c: 54: else if(Segment == 2)
   787  007E4A  5001               	movf	Segment_init@Segment,w,c
   788  007E4C  0A02               	xorlw	2
   789  007E4E  A4D8               	btfss	status,2,c
   790  007E50  D002               	goto	l728
   791                           
   792                           ;segment.c: 55: PORTAbits.RA1 = 1;
   793  007E52  8280               	bsf	3968,1,c	;volatile
   794  007E54  D007               	goto	l55
   795  007E56                     l728:
   796                           
   797                           ;segment.c: 56: else if(Segment== 3)
   798  007E56  5001               	movf	Segment_init@Segment,w,c
   799  007E58  0A03               	xorlw	3
   800  007E5A  A4D8               	btfss	status,2,c
   801  007E5C  D002               	goto	l53
   802                           
   803                           ;segment.c: 57: PORTAbits.RA2 = 1;
   804  007E5E  8480               	bsf	3968,2,c	;volatile
   805  007E60  D001               	goto	l55
   806  007E62                     l53:
   807                           
   808                           ;segment.c: 58: else
   809                           ;segment.c: 59: PORTAbits.RA3 = 1;
   810  007E62  8680               	bsf	3968,3,c	;volatile
   811  007E64                     l55:
   812  007E64  0012               	return	
   813  007E66                     __end_of_Segment_init:
   814                           	opt stack 0
   815  0000                     tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           postdec1	equ	0xFE5
   822                           fsr1l	equ	0xFE1
   823                           indf2	equ	0xFDF
   824                           fsr2h	equ	0xFDA
   825                           fsr2l	equ	0xFD9
   826                           status	equ	0xFD8
   827                           tblptru	equ	0xFF8
   828                           tblptrh	equ	0xFF7
   829                           tblptrl	equ	0xFF6
   830                           tablat	equ	0xFF5
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           postdec1	equ	0xFE5
   834                           fsr1l	equ	0xFE1
   835                           indf2	equ	0xFDF
   836                           fsr2h	equ	0xFDA
   837                           fsr2l	equ	0xFD9
   838                           status	equ	0xFD8
   839                           
   840                           	psect	rparam
   841  0000                     tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           tblptrl	equ	0xFF6
   844                           tablat	equ	0xFF5
   845                           postinc0	equ	0xFEE
   846                           wreg	equ	0xFE8
   847                           postdec1	equ	0xFE5
   848                           fsr1l	equ	0xFE1
   849                           indf2	equ	0xFDF
   850                           fsr2h	equ	0xFDA
   851                           fsr2l	equ	0xFD9
   852                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Seq_count@ptr4	PTR unsigned char  size(2) Largest target is 1
		 -> Num4(COMRAM[1]), 

    Seq_count@ptr3	PTR unsigned char  size(2) Largest target is 1
		 -> Num3(COMRAM[1]), 

    Seq_count@ptr2	PTR unsigned char  size(2) Largest target is 1
		 -> Num2(COMRAM[1]), 

    Seq_count@ptr1	PTR unsigned char  size(2) Largest target is 1
		 -> Num1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_Seq_count
    _Delay_s_->_Delay10KTCYx
    _NumDisplay->_Segment_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     285
                                              8 COMRAM     3     3      0
                         _NumDisplay
                           _Delay_s_
                          _Seq_count
 ---------------------------------------------------------------------------------
 (1) _Seq_count                                            8     0      8     180
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _Delay_s_                                             1     1      0      15
                                              2 COMRAM     1     1      0
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     1      1      15
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _NumDisplay                                           2     0      2      75
                                              1 COMRAM     2     0      2
                       _Segment_init
 ---------------------------------------------------------------------------------
 (2) _Segment_init                                         1     0      1      45
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _NumDisplay
     _Segment_init
   _Delay_s_
     _Delay10KTCYx
   _Seq_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B       F       1       15.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      20        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jan 23 10:54:28 2014

                     l17 7F6C                       l53 7E62                       l70 7ED8  
                     l55 7E64                       l77 7F6A              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l288 7DF4                      l724 7E4A                      l740 7E7C  
                    l750 7E90                      l742 7E80                      l734 7E70  
                    l728 7E56                      l752 7E94                      l744 7E84  
                    l736 7E74                      l746 7E88                      l738 7E78  
                    l748 7E8C                      l756 7E9A                      l780 7FCA  
                    l766 7F76             __CFG_CPB$OFF 000000                      u127 7DFA  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_WDT$OFF 000000                     _Num1 000C                     _Num2 000D  
                   _Num3 000E                     _Num4 000F                     _main 7F6C  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     start 0000            __CFG_IESO$OFF 000000  
    Segment_init@Segment 0001            __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISD 000F95    __size_of_Delay10KTCYx 0016  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    main@x 000A  
                  tablat 000FF5                    status 000FD8           __CFG_ICPRT$OFF 000000  
       __end_of_Delay_s_ 7DF4           __CFG_PBADEN$ON 000000          __initialization 7E0A  
           __end_of_main 8000             _Delay10KTCYx 7DF4                   ??_main 0009  
          __activetblptr 000002               _NumDisplay 7E66           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000       __size_of_Seq_count 0092             __pdataCOMRAM 000C  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7E2A         NumDisplay@Number 0002  
          ?_Segment_init 0001           __pcstackCOMRAM 0001            Seq_count@ptr1 0001  
          Seq_count@ptr2 0003            Seq_count@ptr3 0005            Seq_count@ptr4 0007  
              ?_Delay_s_ 0001              ?_NumDisplay 0002        __end_of_Seq_count 7F6C  
         ??_Segment_init 0002               ??_Delay_s_ 0003          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7E0A  
                __ramtop 0800      __size_of_NumDisplay 0074                  __ptext0 7F6C  
                __ptext1 7EDA                  __ptext2 7DE6                  __ptext3 7DF4  
                __ptext4 7E66                  __ptext5 7E34     end_of_initialization 7E2A  
          __Lmediumconst 0000                  postdec1 000FE5                  postinc0 000FEE  
              _PORTAbits 000F80     __end_of_Segment_init 7E66                _TRISAbits 000F92  
      NumDisplay@Segment 0003            __pidataCOMRAM 7DE2      start_initialization 7E0A  
      __size_of_Delay_s_ 000E             ??_NumDisplay 0004                _Seq_count 7EDA  
       __CFG_LPT1OSC$OFF 000000       __end_of_NumDisplay 7EDA               ?_Seq_count 0001  
          ?_Delay10KTCYx 0001    __size_of_Segment_init 0032             _Segment_init 7E34  
       __CFG_WDTPS$32768 000000           ??_Delay10KTCYx 0002                 _Delay_s_ 7DE6  
       Delay10KTCYx@unit 0001                copy_data0 7E1E              ??_Seq_count 0009  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0094  
  __CFG_CPUDIV$OSC1_PLL2 000000     __end_of_Delay10KTCYx 7E0A  
