

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Tue Feb 04 12:37:04 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _PORTAbits	set	3968
    17  0000                     _PORTD	set	3971
    18  0000                     _TRISAbits	set	3986
    19  0000                     _TRISD	set	3989
    20                           
    21 ;;
    22 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    23 ;;
    24 ;; *************** function _main *****************
    25 ;; Defined at:
    26 ;;		line 30 in file "main.c"
    27 ;; Parameters:    Size  Location     Type
    28 ;;		None
    29 ;; Auto vars:     Size  Location     Type
    30 ;;  x               2    9[COMRAM] int 
    31 ;; Return value:  Size  Location     Type
    32 ;;		None               void
    33 ;; Registers used:
    34 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
    35 ;; Tracked objects:
    36 ;;		On entry : 0/0
    37 ;;		On exit  : 0/0
    38 ;;		Unchanged: 0/0
    39 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    40 ;;      Params:         0       0       0       0       0       0       0       0       0
    41 ;;      Locals:         2       0       0       0       0       0       0       0       0
    42 ;;      Temps:          1       0       0       0       0       0       0       0       0
    43 ;;      Totals:         3       0       0       0       0       0       0       0       0
    44 ;;Total ram usage:        3 bytes
    45 ;; Hardware stack levels required when called:    2
    46 ;; This function calls:
    47 ;;		_NumDisplay
    48 ;;		_Delay_s_
    49 ;;		_Seq_count
    50 ;; This function is called by:
    51 ;;		Startup code after reset
    52 ;; This function uses a non-reentrant model
    53 ;;
    54                           
    55                           	psect	text0
    56  007C6C                     __ptext0:
    57                           	opt stack 0
    58                           
    59                           ; #config settings
    60  007C6C                     _main:
    61                           	opt stack 28
    62  007C6C                     l17:
    63                           
    64                           ;main.c: 32: {
    65                           ;main.c: 33: int x = 0;
    66  007C6C  0E00               	movlw	0
    67  007C6E  6E0B               	movwf	main@x+1,c
    68  007C70  0E00               	movlw	0
    69  007C72  6E0A               	movwf	main@x,c
    70                           
    71                           ;main.c: 34: while(x<=10)
    72  007C74  D02A               	goto	l780
    73  007C76                     l766:
    74                           
    75                           ;main.c: 35: {
    76                           ;main.c: 36: NumDisplay(Num1, 1);
    77  007C76  C00C  F002         	movff	_Num1,?_NumDisplay
    78  007C7A  6E09               	movwf	??_main& (0+255),c
    79  007C7C  0E01               	movlw	1
    80  007C7E  6E03               	movwf	?_NumDisplay+1,c
    81  007C80  5009               	movf	??_main& (0+255),w,c
    82  007C82  ECB3  F03D         	call	_NumDisplay	;wreg free
    83                           
    84                           ;main.c: 37: Delay_s_();
    85  007C86  EC7F  F03D         	call	_Delay_s_	;wreg free
    86                           
    87                           ;main.c: 38: NumDisplay(Num2, 2);
    88  007C8A  C00D  F002         	movff	_Num2,?_NumDisplay
    89  007C8E  6E09               	movwf	??_main& (0+255),c
    90  007C90  0E02               	movlw	2
    91  007C92  6E03               	movwf	?_NumDisplay+1,c
    92  007C94  5009               	movf	??_main& (0+255),w,c
    93  007C96  ECB3  F03D         	call	_NumDisplay	;wreg free
    94                           
    95                           ;main.c: 39: Delay_s_();
    96  007C9A  EC7F  F03D         	call	_Delay_s_	;wreg free
    97                           
    98                           ;main.c: 40: NumDisplay(Num3, 3);
    99  007C9E  C00E  F002         	movff	_Num3,?_NumDisplay
   100  007CA2  6E09               	movwf	??_main& (0+255),c
   101  007CA4  0E03               	movlw	3
   102  007CA6  6E03               	movwf	?_NumDisplay+1,c
   103  007CA8  5009               	movf	??_main& (0+255),w,c
   104  007CAA  ECB3  F03D         	call	_NumDisplay	;wreg free
   105                           
   106                           ;main.c: 41: Delay_s_();
   107  007CAE  EC7F  F03D         	call	_Delay_s_	;wreg free
   108                           
   109                           ;main.c: 42: NumDisplay(Num4, 4);
   110  007CB2  C00F  F002         	movff	_Num4,?_NumDisplay
   111  007CB6  6E09               	movwf	??_main& (0+255),c
   112  007CB8  0E04               	movlw	4
   113  007CBA  6E03               	movwf	?_NumDisplay+1,c
   114  007CBC  5009               	movf	??_main& (0+255),w,c
   115  007CBE  ECB3  F03D         	call	_NumDisplay	;wreg free
   116                           
   117                           ;main.c: 43: Delay_s_();
   118  007CC2  EC7F  F03D         	call	_Delay_s_	;wreg free
   119                           
   120                           ;main.c: 44: x++;
   121  007CC6  4A0A               	infsnz	main@x,f,c
   122  007CC8  2A0B               	incf	main@x+1,f,c
   123  007CCA                     l780:
   124  007CCA  500B               	movf	main@x+1,w,c
   125  007CCC  0A80               	xorlw	128
   126  007CCE  0F80               	addlw	-128
   127  007CD0  0E0B               	movlw	11
   128  007CD2  B4D8               	btfsc	status,2,c
   129  007CD4  5C0A               	subwf	main@x,w,c
   130  007CD6  A0D8               	btfss	status,0,c
   131  007CD8  D7CE               	goto	l766
   132                           
   133                           ;main.c: 45: }
   134                           ;main.c: 46: Seq_count(&Num1, &Num2, &Num3, &Num4);
   135  007CDA  0E00               	movlw	high _Num1
   136  007CDC  6E02               	movwf	?_Seq_count+1,c
   137  007CDE  0E0C               	movlw	low _Num1
   138  007CE0  6E01               	movwf	?_Seq_count,c
   139  007CE2  0E00               	movlw	high _Num2
   140  007CE4  6E04               	movwf	?_Seq_count+3,c
   141  007CE6  0E0D               	movlw	low _Num2
   142  007CE8  6E03               	movwf	?_Seq_count+2,c
   143  007CEA  0E00               	movlw	high _Num3
   144  007CEC  6E06               	movwf	?_Seq_count+5,c
   145  007CEE  0E0E               	movlw	low _Num3
   146  007CF0  6E05               	movwf	?_Seq_count+4,c
   147  007CF2  0E00               	movlw	high _Num4
   148  007CF4  6E08               	movwf	?_Seq_count+7,c
   149  007CF6  0E0F               	movlw	low _Num4
   150  007CF8  6E07               	movwf	?_Seq_count+6,c
   151  007CFA  ECED  F03D         	call	_Seq_count	;wreg free
   152  007CFE  D7B6               	goto	l17
   153  007D00                     __end_of_main:
   154                           	opt stack 0
   155                           status	equ	0xFD8
   156                           
   157                           	psect	cinit
   158  007B0C                     __pcinit:
   159                           	opt stack 0
   160  007B0C                     start_initialization:
   161                           	opt stack 0
   162  007B0C                     __initialization:
   163                           	opt stack 0
   164                           
   165                           ; Clear objects allocated to COMRAM (4 bytes)
   166  007B0C  6A0F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   167  007B0E  6A0E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   168  007B10  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   169  007B12  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   170  007B14                     end_of_initialization:
   171                           	opt stack 0
   172  007B14                     __end_of__initialization:
   173                           	opt stack 0
   174  007B14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175  007B16  6EF8               	movwf	tblptru,c
   176  007B18  0100               	movlb	0
   177  007B1A  EF36  F03E         	goto	_main	;jump to C main() function
   178                           tblptru	equ	0xFF8
   179                           status	equ	0xFD8
   180                           
   181                           	psect	bssCOMRAM
   182  00000C                     __pbssCOMRAM:
   183                           	opt stack 0
   184  00000C                     _Num1:
   185                           	opt stack 0
   186  00000C                     	ds	1
   187  00000D                     _Num2:
   188                           	opt stack 0
   189  00000D                     	ds	1
   190  00000E                     _Num3:
   191                           	opt stack 0
   192  00000E                     	ds	1
   193  00000F                     _Num4:
   194                           	opt stack 0
   195  00000F                     	ds	1
   196                           tblptru	equ	0xFF8
   197                           status	equ	0xFD8
   198                           
   199                           	psect	cstackCOMRAM
   200  000001                     __pcstackCOMRAM:
   201                           	opt stack 0
   202  000001                     ?_Seq_count:
   203                           	opt stack 0
   204  000001                     ?_Delay10KTCYx:
   205                           	opt stack 0
   206  000001                     ?_Segment_init:
   207                           	opt stack 0
   208  000001                     Segment_init@Segment:
   209                           	opt stack 0
   210  000001                     Delay10KTCYx@unit:
   211                           	opt stack 0
   212  000001                     Seq_count@ptr1:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x0
   216  000001                     	ds	1
   217  000002                     ?_NumDisplay:
   218                           	opt stack 0
   219  000002                     ??_Delay10KTCYx:
   220  000002                     NumDisplay@Number:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0x1
   224  000002                     	ds	1
   225  000003                     ??_Delay_s_:
   226  000003                     NumDisplay@Segment:
   227                           	opt stack 0
   228  000003                     Seq_count@ptr2:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x2
   232  000003                     	ds	1
   233  000004                     
   234                           ; 0 bytes @ 0x3
   235  000004                     	ds	1
   236  000005                     Seq_count@ptr3:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x4
   240  000005                     	ds	2
   241  000007                     Seq_count@ptr4:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x6
   245  000007                     	ds	2
   246  000009                     ??_main:
   247                           
   248                           ; 0 bytes @ 0x8
   249  000009                     	ds	1
   250  00000A                     main@x:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x9
   254  00000A                     	ds	2
   255                           tblptru	equ	0xFF8
   256                           status	equ	0xFD8
   257                           
   258 ;; *************** function _Seq_count *****************
   259 ;; Defined at:
   260 ;;		line 12 in file "counter.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;  ptr1            2    0[COMRAM] PTR unsigned char 
   263 ;;		 -> Num1(1), 
   264 ;;  ptr2            2    2[COMRAM] PTR unsigned char 
   265 ;;		 -> Num2(1), 
   266 ;;  ptr3            2    4[COMRAM] PTR unsigned char 
   267 ;;		 -> Num3(1), 
   268 ;;  ptr4            2    6[COMRAM] PTR unsigned char 
   269 ;;		 -> Num4(1), 
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;		None               void
   274 ;; Registers used:
   275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   281 ;;      Params:         8       0       0       0       0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0       0       0
   284 ;;      Totals:         8       0       0       0       0       0       0       0       0
   285 ;;Total ram usage:        8 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text1
   295  007BDA                     __ptext1:
   296                           	opt stack 0
   297  007BDA                     _Seq_count:
   298                           	opt stack 29
   299                           
   300                           ;counter.c: 13: ++*ptr1;
   301                           
   302                           ;incstack = 0
   303                           ;incstack = 0
   304  007BDA  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   305  007BDE  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   306  007BE2  2ADF               	incf	indf2,f,c
   307                           
   308                           ;counter.c: 14: if(*ptr1==10)
   309  007BE4  0E0A               	movlw	10
   310  007BE6  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   311  007BEA  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   312  007BEE  62DF               	cpfseq	indf2,c
   313  007BF0  D03C               	goto	l77
   314                           
   315                           ;counter.c: 15: {
   316                           ;counter.c: 16: ++*ptr2;
   317  007BF2  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   318  007BF6  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   319  007BFA  2ADF               	incf	indf2,f,c
   320                           
   321                           ;counter.c: 17: *ptr1 = 0;
   322  007BFC  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   323  007C00  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   324  007C04  0E00               	movlw	0
   325  007C06  6EDF               	movwf	indf2,c
   326                           
   327                           ;counter.c: 18: if(*ptr2 == 10)
   328  007C08  0E0A               	movlw	10
   329  007C0A  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   330  007C0E  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   331  007C12  62DF               	cpfseq	indf2,c
   332  007C14  D02A               	goto	l77
   333                           
   334                           ;counter.c: 19: {
   335                           ;counter.c: 20: ++*ptr3;
   336  007C16  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   337  007C1A  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   338  007C1E  2ADF               	incf	indf2,f,c
   339                           
   340                           ;counter.c: 21: *ptr2=0;
   341  007C20  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   342  007C24  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   343  007C28  0E00               	movlw	0
   344  007C2A  6EDF               	movwf	indf2,c
   345                           
   346                           ;counter.c: 22: if(*ptr3 == 10)
   347  007C2C  0E0A               	movlw	10
   348  007C2E  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   349  007C32  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   350  007C36  62DF               	cpfseq	indf2,c
   351  007C38  D018               	goto	l77
   352                           
   353                           ;counter.c: 23: {
   354                           ;counter.c: 24: ++*ptr4;
   355  007C3A  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   356  007C3E  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   357  007C42  2ADF               	incf	indf2,f,c
   358                           
   359                           ;counter.c: 25: *ptr3=0;
   360  007C44  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   361  007C48  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   362  007C4C  0E00               	movlw	0
   363  007C4E  6EDF               	movwf	indf2,c
   364                           
   365                           ;counter.c: 26: if(*ptr4==10)
   366  007C50  0E0A               	movlw	10
   367  007C52  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   368  007C56  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   369  007C5A  62DF               	cpfseq	indf2,c
   370  007C5C  D006               	goto	l77
   371                           
   372                           ;counter.c: 27: {
   373                           ;counter.c: 28: *ptr4=0;
   374  007C5E  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   375  007C62  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   376  007C66  0E00               	movlw	0
   377  007C68  6EDF               	movwf	indf2,c
   378  007C6A                     l77:
   379  007C6A  0012               	return	
   380  007C6C                     __end_of_Seq_count:
   381                           	opt stack 0
   382                           tblptru	equ	0xFF8
   383                           indf2	equ	0xFDF
   384                           fsr2h	equ	0xFDA
   385                           fsr2l	equ	0xFD9
   386                           status	equ	0xFD8
   387                           
   388 ;; *************** function _Delay_s_ *****************
   389 ;; Defined at:
   390 ;;		line 29 in file "delay.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;		None               void
   397 ;; Registers used:
   398 ;;		wreg, status,2, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   404 ;;      Params:         0       0       0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0       0
   406 ;;      Temps:          1       0       0       0       0       0       0       0       0
   407 ;;      Totals:         1       0       0       0       0       0       0       0       0
   408 ;;Total ram usage:        1 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:    1
   411 ;; This function calls:
   412 ;;		_Delay10KTCYx
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419  007AFE                     __ptext2:
   420                           	opt stack 0
   421  007AFE                     _Delay_s_:
   422                           	opt stack 28
   423                           
   424                           ;delay.c: 30: Delay10KTCYx(2);
   425                           
   426                           ;incstack = 0
   427                           ;incstack = 0
   428  007AFE  6E03               	movwf	??_Delay_s_& (0+255),c
   429  007B00  0E02               	movlw	2
   430  007B02  6E01               	movwf	?_Delay10KTCYx,c
   431  007B04  5003               	movf	??_Delay_s_& (0+255),w,c
   432  007B06  EC8F  F03D         	call	_Delay10KTCYx	;wreg free
   433  007B0A  0012               	return	
   434  007B0C                     __end_of_Delay_s_:
   435                           	opt stack 0
   436                           tblptru	equ	0xFF8
   437                           indf2	equ	0xFDF
   438                           fsr2h	equ	0xFDA
   439                           fsr2l	equ	0xFD9
   440                           status	equ	0xFD8
   441                           
   442 ;; *************** function _Delay10KTCYx *****************
   443 ;; Defined at:
   444 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d10ktcyx.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;  unit            1    0[COMRAM] unsigned char 
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;		None               void
   451 ;; Registers used:
   452 ;;		wreg
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         1       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0
   460 ;;      Temps:          1       0       0       0       0       0       0       0       0
   461 ;;      Totals:         2       0       0       0       0       0       0       0       0
   462 ;;Total ram usage:        2 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		_Delay_s_
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text3
   472  007B1E                     __ptext3:
   473                           	opt stack 0
   474  007B1E                     _Delay10KTCYx:
   475                           	opt stack 28
   476  007B1E                     l288:
   477  007B1E  0E0D               	movlw	13
   478  007B20  6E02               	movwf	??_Delay10KTCYx& (0+255),c
   479  007B22  0EFB               	movlw	251
   480  007B24                     u127:
   481  007B24  2EE8               	decfsz	wreg,f,c
   482  007B26  D7FE               	goto	u127
   483  007B28  2E02               	decfsz	??_Delay10KTCYx& (0+255),f,c
   484  007B2A  D7FC               	goto	u127
   485  007B2C  D000               	nop2	
   486  007B2E  2E01               	decfsz	Delay10KTCYx@unit,f,c
   487  007B30  D7F6               	goto	l288
   488  007B32  0012               	return	
   489  007B34                     __end_of_Delay10KTCYx:
   490                           	opt stack 0
   491                           tblptru	equ	0xFF8
   492                           wreg	equ	0xFE8
   493                           indf2	equ	0xFDF
   494                           fsr2h	equ	0xFDA
   495                           fsr2l	equ	0xFD9
   496                           status	equ	0xFD8
   497                           
   498 ;; *************** function _NumDisplay *****************
   499 ;; Defined at:
   500 ;;		line 61 in file "segment.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  Number          1    1[COMRAM] unsigned char 
   503 ;;  Segment         1    2[COMRAM] unsigned char 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;		None               void
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   515 ;;      Params:         2       0       0       0       0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0       0       0
   518 ;;      Totals:         2       0       0       0       0       0       0       0       0
   519 ;;Total ram usage:        2 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    1
   522 ;; This function calls:
   523 ;;		_Segment_init
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text4
   530  007B66                     __ptext4:
   531                           	opt stack 0
   532  007B66                     _NumDisplay:
   533                           	opt stack 28
   534                           
   535                           ;segment.c: 63: Segment_init(Segment);
   536                           
   537                           ;incstack = 0
   538                           ;incstack = 0
   539  007B66  C003  F001         	movff	NumDisplay@Segment,?_Segment_init
   540  007B6A  EC9A  F03D         	call	_Segment_init	;wreg free
   541                           
   542                           ;segment.c: 64: switch (Number)
   543  007B6E  D015               	goto	l756
   544  007B70                     l734:
   545                           
   546                           ;segment.c: 67: PORTD = 0b11000000;
   547  007B70  0EC0               	movlw	192
   548  007B72  D011               	goto	L9
   549  007B74                     l736:
   550                           
   551                           ;segment.c: 70: PORTD = 0b11111001;
   552  007B74  0EF9               	movlw	249
   553  007B76  D00F               	goto	L9
   554  007B78                     l738:
   555                           
   556                           ;segment.c: 73: PORTD = 0b10100100;
   557  007B78  0EA4               	movlw	164
   558  007B7A  D00D               	goto	L9
   559  007B7C                     l740:
   560                           
   561                           ;segment.c: 76: PORTD = 0b10110000;
   562  007B7C  0EB0               	movlw	176
   563  007B7E  D00B               	goto	L9
   564  007B80                     l742:
   565                           
   566                           ;segment.c: 79: PORTD = 0b10011001;
   567  007B80  0E99               	movlw	153
   568  007B82  D009               	goto	L9
   569  007B84                     l744:
   570                           
   571                           ;segment.c: 82: PORTD = 0b10010010;
   572  007B84  0E92               	movlw	146
   573  007B86  D007               	goto	L9
   574  007B88                     l746:
   575                           
   576                           ;segment.c: 85: PORTD = 0b10000010;
   577  007B88  0E82               	movlw	130
   578  007B8A  D005               	goto	L9
   579  007B8C                     l748:
   580                           
   581                           ;segment.c: 88: PORTD = 0b11111000;
   582  007B8C  0EF8               	movlw	248
   583  007B8E  D003               	goto	L9
   584  007B90                     l750:
   585                           
   586                           ;segment.c: 91: PORTD = 0b10000000;
   587  007B90  0E80               	movlw	128
   588  007B92  D001               	goto	L9
   589  007B94                     l752:
   590                           
   591                           ;segment.c: 94: PORTD = 0b10010000;
   592  007B94  0E90               	movlw	144
   593  007B96                     L9:
   594  007B96  6E83               	movwf	3971,c	;volatile
   595                           
   596                           ;segment.c: 95: break;
   597  007B98  D01F               	goto	l70
   598  007B9A                     l756:
   599  007B9A  5002               	movf	NumDisplay@Number,w,c
   600                           
   601                           ; Switch size 1, requested type "space"
   602                           ; Number of cases is 10, Range of values is 0 to 9
   603                           ; switch strategies available:
   604                           ; Name         Instructions Cycles
   605                           ; simple_byte           31    16 (average)
   606                           ;	Chosen strategy is simple_byte
   607  007B9C  0A00               	xorlw	0	; case 0
   608  007B9E  B4D8               	btfsc	status,2,c
   609  007BA0  D7E7               	goto	l734
   610  007BA2  0A01               	xorlw	1	; case 1
   611  007BA4  B4D8               	btfsc	status,2,c
   612  007BA6  D7E6               	goto	l736
   613  007BA8  0A03               	xorlw	3	; case 2
   614  007BAA  B4D8               	btfsc	status,2,c
   615  007BAC  D7E5               	goto	l738
   616  007BAE  0A01               	xorlw	1	; case 3
   617  007BB0  B4D8               	btfsc	status,2,c
   618  007BB2  D7E4               	goto	l740
   619  007BB4  0A07               	xorlw	7	; case 4
   620  007BB6  B4D8               	btfsc	status,2,c
   621  007BB8  D7E3               	goto	l742
   622  007BBA  0A01               	xorlw	1	; case 5
   623  007BBC  B4D8               	btfsc	status,2,c
   624  007BBE  D7E2               	goto	l744
   625  007BC0  0A03               	xorlw	3	; case 6
   626  007BC2  B4D8               	btfsc	status,2,c
   627  007BC4  D7E1               	goto	l746
   628  007BC6  0A01               	xorlw	1	; case 7
   629  007BC8  B4D8               	btfsc	status,2,c
   630  007BCA  D7E0               	goto	l748
   631  007BCC  0A0F               	xorlw	15	; case 8
   632  007BCE  B4D8               	btfsc	status,2,c
   633  007BD0  D7DF               	goto	l750
   634  007BD2  0A01               	xorlw	1	; case 9
   635  007BD4  B4D8               	btfsc	status,2,c
   636  007BD6  D7DE               	goto	l752
   637  007BD8                     l70:
   638  007BD8  0012               	return	
   639  007BDA                     __end_of_NumDisplay:
   640                           	opt stack 0
   641                           tblptru	equ	0xFF8
   642                           wreg	equ	0xFE8
   643                           indf2	equ	0xFDF
   644                           fsr2h	equ	0xFDA
   645                           fsr2l	equ	0xFD9
   646                           status	equ	0xFD8
   647                           
   648 ;; *************** function _Segment_init *****************
   649 ;; Defined at:
   650 ;;		line 40 in file "segment.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  Segment         1    0[COMRAM] unsigned char 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;		None               void
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         1       0       0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0       0       0
   667 ;;      Totals:         1       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        1 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_NumDisplay
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text5
   678  007B34                     __ptext5:
   679                           	opt stack 0
   680  007B34                     _Segment_init:
   681                           	opt stack 28
   682                           
   683                           ;segment.c: 44: TRISD = 0x00;
   684                           
   685                           ;incstack = 0
   686                           ;incstack = 0
   687  007B34  0E00               	movlw	0
   688  007B36  6E95               	movwf	3989,c	;volatile
   689                           
   690                           ;segment.c: 45: TRISAbits.TRISA0 = 0;
   691  007B38  9092               	bcf	3986,0,c	;volatile
   692                           
   693                           ;segment.c: 46: TRISAbits.TRISA1 = 0;
   694  007B3A  9292               	bcf	3986,1,c	;volatile
   695                           
   696                           ;segment.c: 47: TRISAbits.TRISA2 = 0;
   697  007B3C  9492               	bcf	3986,2,c	;volatile
   698                           
   699                           ;segment.c: 48: TRISAbits.TRISA3 = 0;
   700  007B3E  9692               	bcf	3986,3,c	;volatile
   701                           
   702                           ;segment.c: 51: if(Segment == 1)
   703  007B40  0401               	decf	Segment_init@Segment,w,c
   704  007B42  A4D8               	btfss	status,2,c
   705  007B44  D002               	goto	l724
   706                           
   707                           ;segment.c: 52: PORTAbits.RA0 = 1;
   708  007B46  8080               	bsf	3968,0,c	;volatile
   709  007B48  D00D               	goto	l55
   710  007B4A                     l724:
   711                           
   712                           ;segment.c: 53: else if(Segment == 2)
   713  007B4A  5001               	movf	Segment_init@Segment,w,c
   714  007B4C  0A02               	xorlw	2
   715  007B4E  A4D8               	btfss	status,2,c
   716  007B50  D002               	goto	l728
   717                           
   718                           ;segment.c: 54: PORTAbits.RA1 = 1;
   719  007B52  8280               	bsf	3968,1,c	;volatile
   720  007B54  D007               	goto	l55
   721  007B56                     l728:
   722                           
   723                           ;segment.c: 55: else if(Segment== 3)
   724  007B56  5001               	movf	Segment_init@Segment,w,c
   725  007B58  0A03               	xorlw	3
   726  007B5A  A4D8               	btfss	status,2,c
   727  007B5C  D002               	goto	l53
   728                           
   729                           ;segment.c: 56: PORTAbits.RA2 = 1;
   730  007B5E  8480               	bsf	3968,2,c	;volatile
   731  007B60  D001               	goto	l55
   732  007B62                     l53:
   733                           
   734                           ;segment.c: 57: else
   735                           ;segment.c: 58: PORTAbits.RA3 = 1;
   736  007B62  8680               	bsf	3968,3,c	;volatile
   737  007B64                     l55:
   738  007B64  0012               	return	
   739  007B66                     __end_of_Segment_init:
   740                           	opt stack 0
   741  0000                     tblptru	equ	0xFF8
   742                           wreg	equ	0xFE8
   743                           indf2	equ	0xFDF
   744                           fsr2h	equ	0xFDA
   745                           fsr2l	equ	0xFD9
   746                           status	equ	0xFD8
   747                           tblptru	equ	0xFF8
   748                           wreg	equ	0xFE8
   749                           indf2	equ	0xFDF
   750                           fsr2h	equ	0xFDA
   751                           fsr2l	equ	0xFD9
   752                           status	equ	0xFD8
   753                           
   754                           	psect	rparam
   755  0000                     tblptru	equ	0xFF8
   756                           wreg	equ	0xFE8
   757                           indf2	equ	0xFDF
   758                           fsr2h	equ	0xFDA
   759                           fsr2l	equ	0xFD9
   760                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Seq_count@ptr4	PTR unsigned char  size(2) Largest target is 1
		 -> Num4(COMRAM[1]), 

    Seq_count@ptr3	PTR unsigned char  size(2) Largest target is 1
		 -> Num3(COMRAM[1]), 

    Seq_count@ptr2	PTR unsigned char  size(2) Largest target is 1
		 -> Num2(COMRAM[1]), 

    Seq_count@ptr1	PTR unsigned char  size(2) Largest target is 1
		 -> Num1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_Seq_count
    _Delay_s_->_Delay10KTCYx
    _NumDisplay->_Segment_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     285
                                              8 COMRAM     3     3      0
                         _NumDisplay
                           _Delay_s_
                          _Seq_count
 ---------------------------------------------------------------------------------
 (1) _Seq_count                                            8     0      8     180
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _Delay_s_                                             1     1      0      15
                                              2 COMRAM     1     1      0
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     1      1      15
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _NumDisplay                                           2     0      2      75
                                              1 COMRAM     2     0      2
                       _Segment_init
 ---------------------------------------------------------------------------------
 (2) _Segment_init                                         1     0      1      45
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _NumDisplay
     _Segment_init
   _Delay_s_
     _Delay10KTCYx
   _Seq_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B       F       1       15.8%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      11        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Tue Feb 04 12:37:04 2014

                     l17 7C6C                       l53 7B62                       l70 7BD8  
                     l55 7B64                       l77 7C6A              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000  
                    l288 7B1E                      l724 7B4A                      l740 7B7C  
                    l750 7B90                      l742 7B80                      l734 7B70  
                    l728 7B56                      l752 7B94                      l744 7B84  
                    l736 7B74                      l746 7B88                      l738 7B78  
                    l748 7B8C                      l756 7B9A                      l780 7CCA  
                    l766 7C76             __CFG_CPB$OFF 000000                      u127 7B24  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_WDT$OFF 000000                     _Num1 000C                     _Num2 000D  
                   _Num3 000E                     _Num4 000F                     _main 7C6C  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   start 0002            __CFG_IESO$OFF 000000      Segment_init@Segment 0001  
          __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISD 000F95    __size_of_Delay10KTCYx 0016            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    main@x 000A                    status 000FD8  
         __CFG_ICPRT$OFF 000000         __end_of_Delay_s_ 7B0C           __CFG_PBADEN$ON 000000  
        __initialization 7B0C             __end_of_main 7D00             _Delay10KTCYx 7B1E  
                 ??_main 0009            __activetblptr 000002               _NumDisplay 7B66  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000       __size_of_Seq_count 0092  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7B14  
       NumDisplay@Number 0002            ?_Segment_init 0001           __pcstackCOMRAM 0001  
          Seq_count@ptr1 0001            Seq_count@ptr2 0003            Seq_count@ptr3 0005  
          Seq_count@ptr4 0007                ?_Delay_s_ 0001              ?_NumDisplay 0002  
      __end_of_Seq_count 7C6C           ??_Segment_init 0002               ??_Delay_s_ 0003  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7B0C                  __ramtop 0800      __size_of_NumDisplay 0074  
                __ptext0 7C6C                  __ptext1 7BDA                  __ptext2 7AFE  
                __ptext3 7B1E                  __ptext4 7B66                  __ptext5 7B34  
   end_of_initialization 7B14            __Lmediumconst 0000                _PORTAbits 000F80  
   __end_of_Segment_init 7B66                _TRISAbits 000F92        NumDisplay@Segment 0003  
    start_initialization 7B0C        __size_of_Delay_s_ 000E             ??_NumDisplay 0004  
              _Seq_count 7BDA         __CFG_LPT1OSC$OFF 000000       __end_of_NumDisplay 7BDA  
            __pbssCOMRAM 000C               ?_Seq_count 0001            ?_Delay10KTCYx 0001  
  __size_of_Segment_init 0032             _Segment_init 7B34         __CFG_WDTPS$32768 000000  
         ??_Delay10KTCYx 0002                 _Delay_s_ 7AFE         Delay10KTCYx@unit 0001  
            ??_Seq_count 0009                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0094    __CFG_CPUDIV$OSC1_PLL2 000000     __end_of_Delay10KTCYx 7B34  
