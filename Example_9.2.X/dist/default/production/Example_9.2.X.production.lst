

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Oct 06 13:03:40 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _PORTAbits	set	3968
    17  0000                     _PORTD	set	3971
    18  0000                     _TRISAbits	set	3986
    19  0000                     _TRISD	set	3989
    20                           
    21 ;;
    22 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    23 ;;
    24 ;; *************** function _main *****************
    25 ;; Defined at:
    26 ;;		line 49 in file "main.c"
    27 ;; Parameters:    Size  Location     Type
    28 ;;		None
    29 ;; Auto vars:     Size  Location     Type
    30 ;;  x               2    8[COMRAM] int 
    31 ;; Return value:  Size  Location     Type
    32 ;;		None               void
    33 ;; Registers used:
    34 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
    35 ;; Tracked objects:
    36 ;;		On entry : 0/0
    37 ;;		On exit  : 0/0
    38 ;;		Unchanged: 0/0
    39 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    40 ;;      Params:         0       0       0       0       0       0       0       0       0
    41 ;;      Locals:         2       0       0       0       0       0       0       0       0
    42 ;;      Temps:          0       0       0       0       0       0       0       0       0
    43 ;;      Totals:         2       0       0       0       0       0       0       0       0
    44 ;;Total ram usage:        2 bytes
    45 ;; Hardware stack levels required when called:    2
    46 ;; This function calls:
    47 ;;		_Delay_s_
    48 ;;		_NumDisplay
    49 ;;		_Seq_count
    50 ;; This function is called by:
    51 ;;		Startup code after reset
    52 ;; This function uses a non-reentrant model
    53 ;;
    54                           
    55                           	psect	text0
    56  007EF2                     __ptext0:
    57                           	opt stack 0
    58  007EF2                     _main:
    59                           	opt stack 29
    60  007EF2                     l17:
    61                           
    62                           ;main.c: 52: {
    63                           ;main.c: 53: int x = 0;
    64  007EF2  0E00               	movlw	0
    65  007EF4  6E0A               	movwf	main@x+1,c
    66  007EF6  0E00               	movlw	0
    67  007EF8  6E09               	movwf	main@x,c
    68                           
    69                           ;main.c: 54: while(x<=10)
    70  007EFA  D01E               	goto	l803
    71  007EFC                     l791:
    72                           
    73                           ;main.c: 55: {
    74                           ;main.c: 56: NumDisplay(Num1, 1);
    75  007EFC  0E01               	movlw	1
    76  007EFE  6E02               	movwf	NumDisplay@Segment,c
    77  007F00  500B               	movf	_Num1,w,c
    78  007F02  EC3F  F03F         	call	_NumDisplay
    79                           
    80                           ;main.c: 57: Delay_s_();
    81  007F06  EC0D  F03F         	call	_Delay_s_	;wreg free
    82                           
    83                           ;main.c: 58: NumDisplay(Num2, 2);
    84  007F0A  0E02               	movlw	2
    85  007F0C  6E02               	movwf	NumDisplay@Segment,c
    86  007F0E  500C               	movf	_Num2,w,c
    87  007F10  EC3F  F03F         	call	_NumDisplay
    88                           
    89                           ;main.c: 59: Delay_s_();
    90  007F14  EC0D  F03F         	call	_Delay_s_	;wreg free
    91                           
    92                           ;main.c: 60: NumDisplay(Num3, 3);
    93  007F18  0E03               	movlw	3
    94  007F1A  6E02               	movwf	NumDisplay@Segment,c
    95  007F1C  500D               	movf	_Num3,w,c
    96  007F1E  EC3F  F03F         	call	_NumDisplay
    97                           
    98                           ;main.c: 61: Delay_s_();
    99  007F22  EC0D  F03F         	call	_Delay_s_	;wreg free
   100                           
   101                           ;main.c: 62: NumDisplay(Num4, 4);
   102  007F26  0E04               	movlw	4
   103  007F28  6E02               	movwf	NumDisplay@Segment,c
   104  007F2A  500E               	movf	_Num4,w,c
   105  007F2C  EC3F  F03F         	call	_NumDisplay
   106                           
   107                           ;main.c: 63: Delay_s_();
   108  007F30  EC0D  F03F         	call	_Delay_s_	;wreg free
   109                           
   110                           ;main.c: 64: x++;
   111  007F34  4A09               	infsnz	main@x,f,c
   112  007F36  2A0A               	incf	main@x+1,f,c
   113  007F38                     l803:
   114  007F38  500A               	movf	main@x+1,w,c
   115  007F3A  0A80               	xorlw	128
   116  007F3C  0F80               	addlw	-128
   117  007F3E  0E0B               	movlw	11
   118  007F40  B4D8               	btfsc	status,2,c
   119  007F42  5C09               	subwf	main@x,w,c
   120  007F44  A0D8               	btfss	status,0,c
   121  007F46  D7DA               	goto	l791
   122                           
   123                           ;main.c: 65: }
   124                           ;main.c: 66: Seq_count(&Num1, &Num2, &Num3, &Num4);
   125  007F48  0E00               	movlw	high _Num1
   126  007F4A  6E02               	movwf	Seq_count@ptr1+1,c
   127  007F4C  0E0B               	movlw	low _Num1
   128  007F4E  6E01               	movwf	Seq_count@ptr1,c
   129  007F50  0E00               	movlw	high _Num2
   130  007F52  6E04               	movwf	Seq_count@ptr2+1,c
   131  007F54  0E0C               	movlw	low _Num2
   132  007F56  6E03               	movwf	Seq_count@ptr2,c
   133  007F58  0E00               	movlw	high _Num3
   134  007F5A  6E06               	movwf	Seq_count@ptr3+1,c
   135  007F5C  0E0D               	movlw	low _Num3
   136  007F5E  6E05               	movwf	Seq_count@ptr3,c
   137  007F60  0E00               	movlw	high _Num4
   138  007F62  6E08               	movwf	Seq_count@ptr4+1,c
   139  007F64  0E0E               	movlw	low _Num4
   140  007F66  6E07               	movwf	Seq_count@ptr4,c
   141  007F68  ECB7  F03F         	call	_Seq_count	;wreg free
   142  007F6C  D7C2               	goto	l17
   143  007F6E                     __end_of_main:
   144                           	opt stack 0
   145                           status	equ	0xFD8
   146                           
   147                           	psect	cinit
   148  007E22                     __pcinit:
   149                           	opt stack 0
   150  007E22                     start_initialization:
   151                           	opt stack 0
   152  007E22                     __initialization:
   153                           	opt stack 0
   154                           
   155                           ; Clear objects allocated to COMRAM (4 bytes)
   156  007E22  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   157  007E24  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   158  007E26  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   159  007E28  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   160  007E2A                     end_of_initialization:
   161                           	opt stack 0
   162  007E2A                     __end_of__initialization:
   163                           	opt stack 0
   164  007E2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165  007E2C  6EF8               	movwf	tblptru,c
   166  007E2E  0100               	movlb	0
   167  007E30  EF79  F03F         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           status	equ	0xFD8
   170                           
   171                           	psect	bssCOMRAM
   172  00000B                     __pbssCOMRAM:
   173                           	opt stack 0
   174  00000B                     _Num1:
   175                           	opt stack 0
   176  00000B                     	ds	1
   177  00000C                     _Num2:
   178                           	opt stack 0
   179  00000C                     	ds	1
   180  00000D                     _Num3:
   181                           	opt stack 0
   182  00000D                     	ds	1
   183  00000E                     _Num4:
   184                           	opt stack 0
   185  00000E                     	ds	1
   186                           tblptru	equ	0xFF8
   187                           status	equ	0xFD8
   188                           
   189                           	psect	cstackCOMRAM
   190  000001                     __pcstackCOMRAM:
   191                           	opt stack 0
   192  000001                     ??_Delay10KTCYx:
   193  000001                     Segment_init@Segment:
   194                           	opt stack 0
   195  000001                     Seq_count@ptr1:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x0
   199  000001                     	ds	1
   200  000002                     NumDisplay@Segment:
   201                           	opt stack 0
   202  000002                     Delay10KTCYx@unit:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0x1
   206  000002                     	ds	1
   207  000003                     NumDisplay@Number:
   208                           	opt stack 0
   209  000003                     Seq_count@ptr2:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x2
   213  000003                     	ds	2
   214  000005                     Seq_count@ptr3:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x4
   218  000005                     	ds	2
   219  000007                     Seq_count@ptr4:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x6
   223  000007                     	ds	2
   224  000009                     main@x:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x8
   228  000009                     	ds	2
   229                           tblptru	equ	0xFF8
   230                           status	equ	0xFD8
   231                           
   232 ;; *************** function _Seq_count *****************
   233 ;; Defined at:
   234 ;;		line 11 in file "counter.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;  ptr1            2    0[COMRAM] PTR unsigned char 
   237 ;;		 -> Num1(1), 
   238 ;;  ptr2            2    2[COMRAM] PTR unsigned char 
   239 ;;		 -> Num2(1), 
   240 ;;  ptr3            2    4[COMRAM] PTR unsigned char 
   241 ;;		 -> Num3(1), 
   242 ;;  ptr4            2    6[COMRAM] PTR unsigned char 
   243 ;;		 -> Num4(1), 
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;		None               void
   248 ;; Registers used:
   249 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   255 ;;      Params:         8       0       0       0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0
   258 ;;      Totals:         8       0       0       0       0       0       0       0       0
   259 ;;Total ram usage:        8 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269  007F6E                     __ptext1:
   270                           	opt stack 0
   271  007F6E                     _Seq_count:
   272                           	opt stack 30
   273                           
   274                           ;counter.c: 13: ++*ptr1;
   275                           
   276                           ;incstack = 0
   277  007F6E  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   278  007F72  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   279  007F76  2ADF               	incf	indf2,f,c
   280                           
   281                           ;counter.c: 14: if(*ptr1==10)
   282  007F78  0E0A               	movlw	10
   283  007F7A  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   284  007F7E  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   285  007F82  62DF               	cpfseq	indf2,c
   286  007F84  D03C               	goto	l98
   287                           
   288                           ;counter.c: 15: {
   289                           ;counter.c: 16: ++*ptr2;
   290  007F86  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   291  007F8A  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   292  007F8E  2ADF               	incf	indf2,f,c
   293                           
   294                           ;counter.c: 17: *ptr1 = 0;
   295  007F90  C001  FFD9         	movff	Seq_count@ptr1,fsr2l
   296  007F94  C002  FFDA         	movff	Seq_count@ptr1+1,fsr2h
   297  007F98  0E00               	movlw	0
   298  007F9A  6EDF               	movwf	indf2,c
   299                           
   300                           ;counter.c: 18: if(*ptr2 == 10)
   301  007F9C  0E0A               	movlw	10
   302  007F9E  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   303  007FA2  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   304  007FA6  62DF               	cpfseq	indf2,c
   305  007FA8  D02A               	goto	l98
   306                           
   307                           ;counter.c: 19: {
   308                           ;counter.c: 20: ++*ptr3;
   309  007FAA  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   310  007FAE  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   311  007FB2  2ADF               	incf	indf2,f,c
   312                           
   313                           ;counter.c: 21: *ptr2=0;
   314  007FB4  C003  FFD9         	movff	Seq_count@ptr2,fsr2l
   315  007FB8  C004  FFDA         	movff	Seq_count@ptr2+1,fsr2h
   316  007FBC  0E00               	movlw	0
   317  007FBE  6EDF               	movwf	indf2,c
   318                           
   319                           ;counter.c: 22: if(*ptr3 == 10)
   320  007FC0  0E0A               	movlw	10
   321  007FC2  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   322  007FC6  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   323  007FCA  62DF               	cpfseq	indf2,c
   324  007FCC  D018               	goto	l98
   325                           
   326                           ;counter.c: 23: {
   327                           ;counter.c: 24: ++*ptr4;
   328  007FCE  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   329  007FD2  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   330  007FD6  2ADF               	incf	indf2,f,c
   331                           
   332                           ;counter.c: 25: *ptr3=0;
   333  007FD8  C005  FFD9         	movff	Seq_count@ptr3,fsr2l
   334  007FDC  C006  FFDA         	movff	Seq_count@ptr3+1,fsr2h
   335  007FE0  0E00               	movlw	0
   336  007FE2  6EDF               	movwf	indf2,c
   337                           
   338                           ;counter.c: 26: if(*ptr4==10)
   339  007FE4  0E0A               	movlw	10
   340  007FE6  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   341  007FEA  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   342  007FEE  62DF               	cpfseq	indf2,c
   343  007FF0  D006               	goto	l98
   344                           
   345                           ;counter.c: 27: {
   346                           ;counter.c: 28: *ptr4=0;
   347  007FF2  C007  FFD9         	movff	Seq_count@ptr4,fsr2l
   348  007FF6  C008  FFDA         	movff	Seq_count@ptr4+1,fsr2h
   349  007FFA  0E00               	movlw	0
   350  007FFC  6EDF               	movwf	indf2,c
   351  007FFE                     l98:
   352  007FFE  0012               	return	
   353  008000                     __end_of_Seq_count:
   354                           	opt stack 0
   355                           tblptru	equ	0xFF8
   356                           indf2	equ	0xFDF
   357                           fsr2h	equ	0xFDA
   358                           fsr2l	equ	0xFD9
   359                           status	equ	0xFD8
   360                           
   361 ;; *************** function _NumDisplay *****************
   362 ;; Defined at:
   363 ;;		line 77 in file "segment.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;  Number          1    wreg     unsigned char 
   366 ;;  Segment         1    1[COMRAM] unsigned char 
   367 ;; Auto vars:     Size  Location     Type
   368 ;;  Number          1    2[COMRAM] unsigned char 
   369 ;; Return value:  Size  Location     Type
   370 ;;		None               void
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   378 ;;      Params:         1       0       0       0       0       0       0       0       0
   379 ;;      Locals:         1       0       0       0       0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0       0       0
   381 ;;      Totals:         2       0       0       0       0       0       0       0       0
   382 ;;Total ram usage:        2 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; Hardware stack levels required when called:    1
   385 ;; This function calls:
   386 ;;		_Segment_init
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text2
   393  007E7E                     __ptext2:
   394                           	opt stack 0
   395  007E7E                     _NumDisplay:
   396                           	opt stack 29
   397                           
   398                           ;incstack = 0
   399                           ;NumDisplay@Number stored from wreg
   400  007E7E  6E03               	movwf	NumDisplay@Number,c
   401                           
   402                           ;segment.c: 80: Segment_init(Segment);
   403  007E80  5002               	movf	NumDisplay@Segment,w,c
   404  007E82  EC25  F03F         	call	_Segment_init
   405                           
   406                           ;segment.c: 81: switch (Number)
   407  007E86  D015               	goto	l753
   408  007E88                     l731:
   409                           
   410                           ;segment.c: 84: PORTD = 0b00111111;
   411  007E88  0E3F               	movlw	63
   412  007E8A  D011               	goto	L9
   413  007E8C                     l733:
   414                           
   415                           ;segment.c: 87: PORTD = 0b00000110;
   416  007E8C  0E06               	movlw	6
   417  007E8E  D00F               	goto	L9
   418  007E90                     l735:
   419                           
   420                           ;segment.c: 90: PORTD = 0b01011011;
   421  007E90  0E5B               	movlw	91
   422  007E92  D00D               	goto	L9
   423  007E94                     l737:
   424                           
   425                           ;segment.c: 93: PORTD = 0b01001111;
   426  007E94  0E4F               	movlw	79
   427  007E96  D00B               	goto	L9
   428  007E98                     l739:
   429                           
   430                           ;segment.c: 96: PORTD = 0b01100110;
   431  007E98  0E66               	movlw	102
   432  007E9A  D009               	goto	L9
   433  007E9C                     l741:
   434                           
   435                           ;segment.c: 99: PORTD = 0b01101101;
   436  007E9C  0E6D               	movlw	109
   437  007E9E  D007               	goto	L9
   438  007EA0                     l743:
   439                           
   440                           ;segment.c: 102: PORTD = 0b01111101;
   441  007EA0  0E7D               	movlw	125
   442  007EA2  D005               	goto	L9
   443  007EA4                     l745:
   444                           
   445                           ;segment.c: 105: PORTD = 0b00000111;
   446  007EA4  0E07               	movlw	7
   447  007EA6  D003               	goto	L9
   448  007EA8                     l747:
   449                           
   450                           ;segment.c: 108: PORTD = 0b01111111;
   451  007EA8  0E7F               	movlw	127
   452  007EAA  D001               	goto	L9
   453  007EAC                     l749:
   454                           
   455                           ;segment.c: 111: PORTD = 0b01101111;
   456  007EAC  0E6F               	movlw	111
   457  007EAE                     L9:
   458  007EAE  6E83               	movwf	3971,c	;volatile
   459                           
   460                           ;segment.c: 112: break;
   461  007EB0  D01F               	goto	l91
   462  007EB2                     l753:
   463  007EB2  5003               	movf	NumDisplay@Number,w,c
   464                           
   465                           ; Switch size 1, requested type "space"
   466                           ; Number of cases is 10, Range of values is 0 to 9
   467                           ; switch strategies available:
   468                           ; Name         Instructions Cycles
   469                           ; simple_byte           31    16 (average)
   470                           ;	Chosen strategy is simple_byte
   471  007EB4  0A00               	xorlw	0	; case 0
   472  007EB6  B4D8               	btfsc	status,2,c
   473  007EB8  D7E7               	goto	l731
   474  007EBA  0A01               	xorlw	1	; case 1
   475  007EBC  B4D8               	btfsc	status,2,c
   476  007EBE  D7E6               	goto	l733
   477  007EC0  0A03               	xorlw	3	; case 2
   478  007EC2  B4D8               	btfsc	status,2,c
   479  007EC4  D7E5               	goto	l735
   480  007EC6  0A01               	xorlw	1	; case 3
   481  007EC8  B4D8               	btfsc	status,2,c
   482  007ECA  D7E4               	goto	l737
   483  007ECC  0A07               	xorlw	7	; case 4
   484  007ECE  B4D8               	btfsc	status,2,c
   485  007ED0  D7E3               	goto	l739
   486  007ED2  0A01               	xorlw	1	; case 5
   487  007ED4  B4D8               	btfsc	status,2,c
   488  007ED6  D7E2               	goto	l741
   489  007ED8  0A03               	xorlw	3	; case 6
   490  007EDA  B4D8               	btfsc	status,2,c
   491  007EDC  D7E1               	goto	l743
   492  007EDE  0A01               	xorlw	1	; case 7
   493  007EE0  B4D8               	btfsc	status,2,c
   494  007EE2  D7E0               	goto	l745
   495  007EE4  0A0F               	xorlw	15	; case 8
   496  007EE6  B4D8               	btfsc	status,2,c
   497  007EE8  D7DF               	goto	l747
   498  007EEA  0A01               	xorlw	1	; case 9
   499  007EEC  B4D8               	btfsc	status,2,c
   500  007EEE  D7DE               	goto	l749
   501  007EF0                     l91:
   502  007EF0  0012               	return	
   503  007EF2                     __end_of_NumDisplay:
   504                           	opt stack 0
   505                           tblptru	equ	0xFF8
   506                           indf2	equ	0xFDF
   507                           fsr2h	equ	0xFDA
   508                           fsr2l	equ	0xFD9
   509                           status	equ	0xFD8
   510                           
   511 ;; *************** function _Segment_init *****************
   512 ;; Defined at:
   513 ;;		line 56 in file "segment.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  Segment         1    wreg     unsigned char 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  Segment         1    0[COMRAM] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;		None               void
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   527 ;;      Params:         0       0       0       0       0       0       0       0       0
   528 ;;      Locals:         1       0       0       0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0
   530 ;;      Totals:         1       0       0       0       0       0       0       0       0
   531 ;;Total ram usage:        1 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_NumDisplay
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text3
   541  007E4A                     __ptext3:
   542                           	opt stack 0
   543  007E4A                     _Segment_init:
   544                           	opt stack 29
   545                           
   546                           ;incstack = 0
   547                           ;Segment_init@Segment stored from wreg
   548  007E4A  6E01               	movwf	Segment_init@Segment,c
   549                           
   550                           ;segment.c: 61: TRISD = 0x00;
   551  007E4C  0E00               	movlw	0
   552  007E4E  6E95               	movwf	3989,c	;volatile
   553                           
   554                           ;segment.c: 62: TRISAbits.TRISA0 = 0;
   555  007E50  9092               	bcf	3986,0,c	;volatile
   556                           
   557                           ;segment.c: 63: TRISAbits.TRISA1 = 0;
   558  007E52  9292               	bcf	3986,1,c	;volatile
   559                           
   560                           ;segment.c: 64: TRISAbits.TRISA2 = 0;
   561  007E54  9492               	bcf	3986,2,c	;volatile
   562                           
   563                           ;segment.c: 65: TRISAbits.TRISA3 = 0;
   564  007E56  9692               	bcf	3986,3,c	;volatile
   565                           
   566                           ;segment.c: 68: if(Segment == 1)
   567  007E58  0401               	decf	Segment_init@Segment,w,c
   568  007E5A  A4D8               	btfss	status,2,c
   569  007E5C  D002               	goto	l721
   570                           
   571                           ;segment.c: 69: PORTAbits.RA0 = 1;
   572  007E5E  8080               	bsf	3968,0,c	;volatile
   573  007E60  D00D               	goto	l76
   574  007E62                     l721:
   575                           
   576                           ;segment.c: 70: else if(Segment == 2)
   577  007E62  5001               	movf	Segment_init@Segment,w,c
   578  007E64  0A02               	xorlw	2
   579  007E66  A4D8               	btfss	status,2,c
   580  007E68  D002               	goto	l725
   581                           
   582                           ;segment.c: 71: PORTAbits.RA1 = 1;
   583  007E6A  8280               	bsf	3968,1,c	;volatile
   584  007E6C  D007               	goto	l76
   585  007E6E                     l725:
   586                           
   587                           ;segment.c: 72: else if(Segment== 3)
   588  007E6E  5001               	movf	Segment_init@Segment,w,c
   589  007E70  0A03               	xorlw	3
   590  007E72  A4D8               	btfss	status,2,c
   591  007E74  D002               	goto	l74
   592                           
   593                           ;segment.c: 73: PORTAbits.RA2 = 1;
   594  007E76  8480               	bsf	3968,2,c	;volatile
   595  007E78  D001               	goto	l76
   596  007E7A                     l74:
   597                           
   598                           ;segment.c: 74: else
   599                           ;segment.c: 75: PORTAbits.RA3 = 1;
   600  007E7A  8680               	bsf	3968,3,c	;volatile
   601  007E7C                     l76:
   602  007E7C  0012               	return	
   603  007E7E                     __end_of_Segment_init:
   604                           	opt stack 0
   605                           tblptru	equ	0xFF8
   606                           indf2	equ	0xFDF
   607                           fsr2h	equ	0xFDA
   608                           fsr2l	equ	0xFD9
   609                           status	equ	0xFD8
   610                           
   611 ;; *************** function _Delay_s_ *****************
   612 ;; Defined at:
   613 ;;		line 53 in file "delay.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;		None               void
   620 ;; Registers used:
   621 ;;		wreg, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   627 ;;      Params:         0       0       0       0       0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    1
   634 ;; This function calls:
   635 ;;		_Delay10KTCYx
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text4
   642  007E1A                     __ptext4:
   643                           	opt stack 0
   644  007E1A                     _Delay_s_:
   645                           	opt stack 29
   646                           
   647                           ;delay.c: 55: Delay10KTCYx(2);
   648                           
   649                           ;incstack = 0
   650  007E1A  0E02               	movlw	2
   651  007E1C  EC1A  F03F         	call	_Delay10KTCYx
   652  007E20  0012               	return	
   653  007E22                     __end_of_Delay_s_:
   654                           	opt stack 0
   655                           tblptru	equ	0xFF8
   656                           indf2	equ	0xFDF
   657                           fsr2h	equ	0xFDA
   658                           fsr2l	equ	0xFD9
   659                           status	equ	0xFD8
   660                           
   661 ;; *************** function _Delay10KTCYx *****************
   662 ;; Defined at:
   663 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d10ktcyx.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  unit            1    wreg     unsigned char 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  unit            1    1[COMRAM] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;		None               void
   670 ;; Registers used:
   671 ;;		wreg
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   677 ;;      Params:         0       0       0       0       0       0       0       0       0
   678 ;;      Locals:         1       0       0       0       0       0       0       0       0
   679 ;;      Temps:          1       0       0       0       0       0       0       0       0
   680 ;;      Totals:         2       0       0       0       0       0       0       0       0
   681 ;;Total ram usage:        2 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_Delay_s_
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text5
   691  007E34                     __ptext5:
   692                           	opt stack 0
   693  007E34                     _Delay10KTCYx:
   694                           	opt stack 29
   695                           
   696                           ;incstack = 0
   697                           ;Delay10KTCYx@unit stored from wreg
   698  007E34  6E02               	movwf	Delay10KTCYx@unit,c
   699  007E36                     l324:
   700  007E36  0E0D               	movlw	13
   701  007E38  6E01               	movwf	??_Delay10KTCYx& (0+255),c
   702  007E3A  0EFC               	movlw	252
   703  007E3C                     u177:
   704  007E3C  2EE8               	decfsz	wreg,f,c
   705  007E3E  D7FE               	goto	u177
   706  007E40  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
   707  007E42  D7FC               	goto	u177
   708  007E44  2E02               	decfsz	Delay10KTCYx@unit,f,c
   709  007E46  D7F7               	goto	l324
   710  007E48  0012               	return	
   711  007E4A                     __end_of_Delay10KTCYx:
   712                           	opt stack 0
   713  0000                     tblptru	equ	0xFF8
   714                           wreg	equ	0xFE8
   715                           indf2	equ	0xFDF
   716                           fsr2h	equ	0xFDA
   717                           fsr2l	equ	0xFD9
   718                           status	equ	0xFD8
   719                           tblptru	equ	0xFF8
   720                           wreg	equ	0xFE8
   721                           indf2	equ	0xFDF
   722                           fsr2h	equ	0xFDA
   723                           fsr2l	equ	0xFD9
   724                           status	equ	0xFD8
   725                           
   726                           	psect	rparam
   727  0000                     tblptru	equ	0xFF8
   728                           wreg	equ	0xFE8
   729                           indf2	equ	0xFDF
   730                           fsr2h	equ	0xFDA
   731                           fsr2l	equ	0xFD9
   732                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Seq_count@ptr4	PTR unsigned char  size(2) Largest target is 1
		 -> Num4(COMRAM[1]), 

    Seq_count@ptr3	PTR unsigned char  size(2) Largest target is 1
		 -> Num3(COMRAM[1]), 

    Seq_count@ptr2	PTR unsigned char  size(2) Largest target is 1
		 -> Num2(COMRAM[1]), 

    Seq_count@ptr1	PTR unsigned char  size(2) Largest target is 1
		 -> Num1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_Seq_count
    _NumDisplay->_Segment_init
    _Delay_s_->_Delay10KTCYx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     629
                                              8 COMRAM     2     2      0
                           _Delay_s_
                         _NumDisplay
                          _Seq_count
 ---------------------------------------------------------------------------------
 (1) _Seq_count                                            8     0      8     352
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _NumDisplay                                           2     1      1     247
                                              1 COMRAM     2     1      1
                       _Segment_init
 ---------------------------------------------------------------------------------
 (2) _Segment_init                                         1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay_s_                                             0     0      0      15
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_s_
     _Delay10KTCYx
   _NumDisplay
     _Segment_init
   _Seq_count

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       E       1       14.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      20        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Oct 06 13:03:40 2014

                     l17 7EF2                       l74 7E7A                       l91 7EF0  
                     l76 7E7C                       l98 7FFE              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000                      l324 7E36                      l721 7E62  
                    l731 7E88                      l803 7F38                      l725 7E6E  
                    l741 7E9C                      l733 7E8C                      l743 7EA0  
                    l735 7E90                      l745 7EA4                      l737 7E94  
                    l753 7EB2                      l747 7EA8                      l739 7E98  
                    l749 7EAC                      l791 7EFC                      u177 7E3C  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _Num1 000B                     _Num2 000C  
                   _Num3 000D                     _Num4 000E                     _main 7EF2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   start 0000            __CFG_IESO$OFF 000000      Segment_init@Segment 0001  
          __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000                    ?_main 0001  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISD 000F95  
  __size_of_Delay10KTCYx 0016            __CFG_PWRT$OFF 000000           __CFG_FCMEN$OFF 000000  
                  main@x 0009                    status 000FD8         __end_of_Delay_s_ 7E22  
        __initialization 7E22             __end_of_main 7F6E             _Delay10KTCYx 7E34  
                 ??_main 0009            __activetblptr 000002          __CFG_CCP2MX$OFF 000000  
             _NumDisplay 7E7E           __CFG_STVREN$ON 000000       __size_of_Seq_count 0092  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7E2A  
        __CFG_PBADEN$OFF 000000         NumDisplay@Number 0003            ?_Segment_init 0001  
         __pcstackCOMRAM 0001            Seq_count@ptr1 0001            Seq_count@ptr2 0003  
          Seq_count@ptr3 0005            Seq_count@ptr4 0007                ?_Delay_s_ 0001  
            ?_NumDisplay 0002        __end_of_Seq_count 8000           ??_Segment_init 0001  
             ??_Delay_s_ 0003          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E22                  __ramtop 0800  
    __size_of_NumDisplay 0074                  __ptext0 7EF2                  __ptext1 7F6E  
                __ptext2 7E7E                  __ptext3 7E4A                  __ptext4 7E1A  
                __ptext5 7E34     end_of_initialization 7E2A            __Lmediumconst 0000  
              _PORTAbits 000F80     __end_of_Segment_init 7E7E                _TRISAbits 000F92  
      NumDisplay@Segment 0002      start_initialization 7E22        __size_of_Delay_s_ 0008  
           ??_NumDisplay 0003                _Seq_count 7F6E         __CFG_LPT1OSC$OFF 000000  
     __end_of_NumDisplay 7EF2              __pbssCOMRAM 000B               ?_Seq_count 0001  
          ?_Delay10KTCYx 0001    __size_of_Segment_init 0034             _Segment_init 7E4A  
         ??_Delay10KTCYx 0001                 _Delay_s_ 7E1A         Delay10KTCYx@unit 0002  
            ??_Seq_count 0009                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 007C    __CFG_CPUDIV$OSC1_PLL2 000000     __end_of_Delay10KTCYx 7E4A  
