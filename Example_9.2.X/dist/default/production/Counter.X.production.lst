

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Jan 22 11:53:02 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     _PORTAbits	set	3968
    15  0000                     _PORTD	set	3971
    16  0000                     _TRISAbits	set	3986
    17  0000                     _TRISD	set	3989
    18                           
    19 ;;
    20 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    21 ;;
    22 ;; *************** function _main *****************
    23 ;; Defined at:
    24 ;;		line 23 in file "main.c"
    25 ;; Parameters:    Size  Location     Type
    26 ;;		None
    27 ;; Auto vars:     Size  Location     Type
    28 ;;  x               2    4[COMRAM] int 
    29 ;;  Num4            1    9[COMRAM] unsigned char 
    30 ;;  Num3            1    8[COMRAM] unsigned char 
    31 ;;  Num2            1    7[COMRAM] unsigned char 
    32 ;;  Num1            1    6[COMRAM] unsigned char 
    33 ;; Return value:  Size  Location     Type
    34 ;;		None               void
    35 ;; Registers used:
    36 ;;		wreg, status,2, status,0, cstack
    37 ;; Tracked objects:
    38 ;;		On entry : 0/0
    39 ;;		On exit  : 0/0
    40 ;;		Unchanged: 0/0
    41 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    42 ;;      Params:         0       0       0       0       0       0       0       0       0
    43 ;;      Locals:         6       0       0       0       0       0       0       0       0
    44 ;;      Temps:          1       0       0       0       0       0       0       0       0
    45 ;;      Totals:         7       0       0       0       0       0       0       0       0
    46 ;;Total ram usage:        7 bytes
    47 ;; Hardware stack levels required when called:    2
    48 ;; This function calls:
    49 ;;		_NumDisplay
    50 ;;		_Delay_s_
    51 ;; This function is called by:
    52 ;;		Startup code after reset
    53 ;; This function uses a non-reentrant model
    54 ;;
    55                           
    56                           	psect	text0
    57  007F30                     __ptext0:
    58                           	opt stack 0
    59                           
    60                           ; #config settings
    61  007F30                     _main:
    62                           	opt stack 29
    63                           
    64                           ;main.c: 24: unsigned char Num1=0, Num2=0, Num3=0, Num4=0;
    65                           
    66                           ;incstack = 0
    67                           ;incstack = 0
    68  007F30  6E04               	movwf	??_main& (0+255),c
    69  007F32  0E00               	movlw	0
    70  007F34  6E07               	movwf	main@Num1,c
    71  007F36  5004               	movf	??_main& (0+255),w,c
    72  007F38  6E04               	movwf	??_main& (0+255),c
    73  007F3A  0E00               	movlw	0
    74  007F3C  6E08               	movwf	main@Num2,c
    75  007F3E  5004               	movf	??_main& (0+255),w,c
    76  007F40  6E04               	movwf	??_main& (0+255),c
    77  007F42  0E00               	movlw	0
    78  007F44  6E09               	movwf	main@Num3,c
    79  007F46  5004               	movf	??_main& (0+255),w,c
    80  007F48  6E04               	movwf	??_main& (0+255),c
    81  007F4A  0E00               	movlw	0
    82  007F4C  6E0A               	movwf	main@Num4,c
    83  007F4E  5004               	movf	??_main& (0+255),w,c
    84  007F50                     l721:
    85                           
    86                           ;main.c: 26: {
    87                           ;main.c: 27: int x = 0;
    88  007F50  0E00               	movlw	0
    89  007F52  6E06               	movwf	main@x+1,c
    90  007F54  0E00               	movlw	0
    91  007F56  6E05               	movwf	main@x,c
    92                           
    93                           ;main.c: 28: while(x<=10)
    94  007F58  D02A               	goto	l737
    95  007F5A                     l723:
    96                           
    97                           ;main.c: 29: {
    98                           ;main.c: 30: NumDisplay(Num1, 1);
    99  007F5A  C007  F002         	movff	main@Num1,?_NumDisplay
   100  007F5E  6E04               	movwf	??_main& (0+255),c
   101  007F60  0E01               	movlw	1
   102  007F62  6E03               	movwf	?_NumDisplay+1,c
   103  007F64  5004               	movf	??_main& (0+255),w,c
   104  007F66  EC5E  F03F         	call	_NumDisplay	;wreg free
   105                           
   106                           ;main.c: 31: Delay_s_();
   107  007F6A  EC33  F03F         	call	_Delay_s_	;wreg free
   108                           
   109                           ;main.c: 32: NumDisplay(Num2, 2);
   110  007F6E  C008  F002         	movff	main@Num2,?_NumDisplay
   111  007F72  6E04               	movwf	??_main& (0+255),c
   112  007F74  0E02               	movlw	2
   113  007F76  6E03               	movwf	?_NumDisplay+1,c
   114  007F78  5004               	movf	??_main& (0+255),w,c
   115  007F7A  EC5E  F03F         	call	_NumDisplay	;wreg free
   116                           
   117                           ;main.c: 33: Delay_s_();
   118  007F7E  EC33  F03F         	call	_Delay_s_	;wreg free
   119                           
   120                           ;main.c: 34: NumDisplay(Num3, 3);
   121  007F82  C009  F002         	movff	main@Num3,?_NumDisplay
   122  007F86  6E04               	movwf	??_main& (0+255),c
   123  007F88  0E03               	movlw	3
   124  007F8A  6E03               	movwf	?_NumDisplay+1,c
   125  007F8C  5004               	movf	??_main& (0+255),w,c
   126  007F8E  EC5E  F03F         	call	_NumDisplay	;wreg free
   127                           
   128                           ;main.c: 35: Delay_s_();
   129  007F92  EC33  F03F         	call	_Delay_s_	;wreg free
   130                           
   131                           ;main.c: 36: NumDisplay(Num4, 4);
   132  007F96  C00A  F002         	movff	main@Num4,?_NumDisplay
   133  007F9A  6E04               	movwf	??_main& (0+255),c
   134  007F9C  0E04               	movlw	4
   135  007F9E  6E03               	movwf	?_NumDisplay+1,c
   136  007FA0  5004               	movf	??_main& (0+255),w,c
   137  007FA2  EC5E  F03F         	call	_NumDisplay	;wreg free
   138                           
   139                           ;main.c: 37: Delay_s_();
   140  007FA6  EC33  F03F         	call	_Delay_s_	;wreg free
   141                           
   142                           ;main.c: 38: x++;
   143  007FAA  4A05               	infsnz	main@x,f,c
   144  007FAC  2A06               	incf	main@x+1,f,c
   145  007FAE                     l737:
   146  007FAE  5006               	movf	main@x+1,w,c
   147  007FB0  0A80               	xorlw	128
   148  007FB2  0F80               	addlw	-128
   149  007FB4  0E0B               	movlw	11
   150  007FB6  B4D8               	btfsc	status,2,c
   151  007FB8  5C05               	subwf	main@x,w,c
   152  007FBA  A0D8               	btfss	status,0,c
   153  007FBC  D7CE               	goto	l723
   154                           
   155                           ;main.c: 39: }
   156                           ;main.c: 40: Num1++;
   157  007FBE  2A07               	incf	main@Num1,f,c
   158                           
   159                           ;main.c: 41: if(Num1==10)
   160  007FC0  5007               	movf	main@Num1,w,c
   161  007FC2  0A0A               	xorlw	10
   162  007FC4  A4D8               	btfss	status,2,c
   163  007FC6  D7C4               	goto	l721
   164                           
   165                           ;main.c: 42: {
   166                           ;main.c: 43: Num2++;
   167  007FC8  2A08               	incf	main@Num2,f,c
   168                           
   169                           ;main.c: 44: Num1 = 0;
   170  007FCA  6E04               	movwf	??_main& (0+255),c
   171  007FCC  0E00               	movlw	0
   172  007FCE  6E07               	movwf	main@Num1,c
   173  007FD0  5004               	movf	??_main& (0+255),w,c
   174                           
   175                           ;main.c: 45: if(Num2 == 10)
   176  007FD2  5008               	movf	main@Num2,w,c
   177  007FD4  0A0A               	xorlw	10
   178  007FD6  A4D8               	btfss	status,2,c
   179  007FD8  D7BB               	goto	l721
   180                           
   181                           ;main.c: 46: {
   182                           ;main.c: 47: Num3++;
   183  007FDA  2A09               	incf	main@Num3,f,c
   184                           
   185                           ;main.c: 48: Num2=0;
   186  007FDC  6E04               	movwf	??_main& (0+255),c
   187  007FDE  0E00               	movlw	0
   188  007FE0  6E08               	movwf	main@Num2,c
   189  007FE2  5004               	movf	??_main& (0+255),w,c
   190                           
   191                           ;main.c: 49: if(Num3 == 10)
   192  007FE4  5009               	movf	main@Num3,w,c
   193  007FE6  0A0A               	xorlw	10
   194  007FE8  A4D8               	btfss	status,2,c
   195  007FEA  D7B2               	goto	l721
   196                           
   197                           ;main.c: 50: {
   198                           ;main.c: 51: Num4++;
   199  007FEC  2A0A               	incf	main@Num4,f,c
   200                           
   201                           ;main.c: 52: Num3=0;
   202  007FEE  6E04               	movwf	??_main& (0+255),c
   203  007FF0  0E00               	movlw	0
   204  007FF2  6E09               	movwf	main@Num3,c
   205  007FF4  5004               	movf	??_main& (0+255),w,c
   206                           
   207                           ;main.c: 53: if(Num4==10)
   208  007FF6  500A               	movf	main@Num4,w,c
   209  007FF8  0A0A               	xorlw	10
   210  007FFA  A4D8               	btfss	status,2,c
   211  007FFC  D7A9               	goto	l721
   212  007FFE  D7A4               	goto	L1
   213  008000                     __end_of_main:
   214                           	opt stack 0
   215                           status	equ	0xFD8
   216                           
   217                           	psect	cinit
   218  007E5C                     __pcinit:
   219                           	opt stack 0
   220  007E5C                     start_initialization:
   221                           	opt stack 0
   222  007E5C                     __initialization:
   223                           	opt stack 0
   224  007E5C                     end_of_initialization:
   225                           	opt stack 0
   226  007E5C                     __end_of__initialization:
   227                           	opt stack 0
   228  007E5C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   229  007E5E  6EF8               	movwf	tblptru,c
   230  007E60  0100               	movlb	0
   231  007E62  EF98  F03F         	goto	_main	;jump to C main() function
   232                           tblptru	equ	0xFF8
   233                           status	equ	0xFD8
   234                           
   235                           	psect	cstackCOMRAM
   236  000001                     __pcstackCOMRAM:
   237                           	opt stack 0
   238  000001                     ?_Delay10KTCYx:
   239                           	opt stack 0
   240  000001                     ?_Segment_init:
   241                           	opt stack 0
   242  000001                     Segment_init@Segment:
   243                           	opt stack 0
   244  000001                     Delay10KTCYx@unit:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x0
   248  000001                     	ds	1
   249  000002                     ?_NumDisplay:
   250                           	opt stack 0
   251  000002                     ??_Delay10KTCYx:
   252  000002                     NumDisplay@Number:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256  000002                     	ds	1
   257  000003                     ??_Delay_s_:
   258  000003                     NumDisplay@Segment:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x2
   262  000003                     	ds	1
   263  000004                     ??_main:
   264                           
   265                           ; 0 bytes @ 0x3
   266  000004                     	ds	1
   267  000005                     main@x:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x4
   271  000005                     	ds	2
   272  000007                     main@Num1:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x6
   276  000007                     	ds	1
   277  000008                     main@Num2:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x7
   281  000008                     	ds	1
   282  000009                     main@Num3:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x8
   286  000009                     	ds	1
   287  00000A                     main@Num4:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x9
   291  00000A                     	ds	1
   292                           tblptru	equ	0xFF8
   293                           status	equ	0xFD8
   294                           
   295 ;; *************** function _Delay_s_ *****************
   296 ;; Defined at:
   297 ;;		line 29 in file "delay.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;		None               void
   304 ;; Registers used:
   305 ;;		wreg, status,2, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   311 ;;      Params:         0       0       0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0       0       0
   313 ;;      Temps:          1       0       0       0       0       0       0       0       0
   314 ;;      Totals:         1       0       0       0       0       0       0       0       0
   315 ;;Total ram usage:        1 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    1
   318 ;; This function calls:
   319 ;;		_Delay10KTCYx
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text1
   326  007E66                     __ptext1:
   327                           	opt stack 0
   328  007E66                     _Delay_s_:
   329                           	opt stack 29
   330                           
   331                           ;delay.c: 30: Delay10KTCYx(2);
   332                           
   333                           ;incstack = 0
   334                           ;incstack = 0
   335  007E66  6E03               	movwf	??_Delay_s_& (0+255),c
   336  007E68  0E02               	movlw	2
   337  007E6A  6E01               	movwf	?_Delay10KTCYx,c
   338  007E6C  5003               	movf	??_Delay_s_& (0+255),w,c
   339  007E6E  EC3A  F03F         	call	_Delay10KTCYx	;wreg free
   340  007E72  0012               	return	
   341  007E74                     __end_of_Delay_s_:
   342                           	opt stack 0
   343                           tblptru	equ	0xFF8
   344                           status	equ	0xFD8
   345                           
   346 ;; *************** function _Delay10KTCYx *****************
   347 ;; Defined at:
   348 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\d10ktcyx.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;  unit            1    0[COMRAM] unsigned char 
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;		None               void
   355 ;; Registers used:
   356 ;;		wreg
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   362 ;;      Params:         1       0       0       0       0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0
   364 ;;      Temps:          1       0       0       0       0       0       0       0       0
   365 ;;      Totals:         2       0       0       0       0       0       0       0       0
   366 ;;Total ram usage:        2 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_Delay_s_
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text2
   376  007E74                     __ptext2:
   377                           	opt stack 0
   378  007E74                     _Delay10KTCYx:
   379                           	opt stack 29
   380  007E74                     l275:
   381  007E74  0E0D               	movlw	13
   382  007E76  6E02               	movwf	??_Delay10KTCYx& (0+255),c
   383  007E78  0EFB               	movlw	251
   384  007E7A                     u127:
   385  007E7A  2EE8               	decfsz	wreg,f,c
   386  007E7C  D7FE               	goto	u127
   387  007E7E  2E02               	decfsz	??_Delay10KTCYx& (0+255),f,c
   388  007E80  D7FC               	goto	u127
   389  007E82  D000               	nop2	
   390  007E84  2E01               	decfsz	Delay10KTCYx@unit,f,c
   391  007E86  D7F6               	goto	l275
   392  007E88  0012               	return	
   393  007E8A                     __end_of_Delay10KTCYx:
   394                           	opt stack 0
   395                           tblptru	equ	0xFF8
   396                           wreg	equ	0xFE8
   397                           status	equ	0xFD8
   398                           
   399 ;; *************** function _NumDisplay *****************
   400 ;; Defined at:
   401 ;;		line 58 in file "segment.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  Number          1    1[COMRAM] unsigned char 
   404 ;;  Segment         1    2[COMRAM] unsigned char 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;		None
   407 ;; Return value:  Size  Location     Type
   408 ;;		None               void
   409 ;; Registers used:
   410 ;;		wreg, status,2, status,0, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   416 ;;      Params:         2       0       0       0       0       0       0       0       0
   417 ;;      Locals:         0       0       0       0       0       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0       0       0       0       0
   419 ;;      Totals:         2       0       0       0       0       0       0       0       0
   420 ;;Total ram usage:        2 bytes
   421 ;; Hardware stack levels used:    1
   422 ;; Hardware stack levels required when called:    1
   423 ;; This function calls:
   424 ;;		_Segment_init
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text3
   431  007EBC                     __ptext3:
   432                           	opt stack 0
   433  007EBC                     _NumDisplay:
   434                           	opt stack 29
   435                           
   436                           ;segment.c: 60: Segment_init(Segment);
   437                           
   438                           ;incstack = 0
   439                           ;incstack = 0
   440  007EBC  C003  F001         	movff	NumDisplay@Segment,?_Segment_init
   441  007EC0  EC45  F03F         	call	_Segment_init	;wreg free
   442                           
   443                           ;segment.c: 61: switch (Number)
   444  007EC4  D015               	goto	l711
   445  007EC6                     l689:
   446                           
   447                           ;segment.c: 64: PORTD = 0b11000000;
   448  007EC6  0EC0               	movlw	192
   449  007EC8  D011               	goto	L10
   450  007ECA                     l691:
   451                           
   452                           ;segment.c: 67: PORTD = 0b11111001;
   453  007ECA  0EF9               	movlw	249
   454  007ECC  D00F               	goto	L10
   455  007ECE                     l693:
   456                           
   457                           ;segment.c: 70: PORTD = 0b10100100;
   458  007ECE  0EA4               	movlw	164
   459  007ED0  D00D               	goto	L10
   460  007ED2                     l695:
   461                           
   462                           ;segment.c: 73: PORTD = 0b10110000;
   463  007ED2  0EB0               	movlw	176
   464  007ED4  D00B               	goto	L10
   465  007ED6                     l697:
   466                           
   467                           ;segment.c: 76: PORTD = 0b10011001;
   468  007ED6  0E99               	movlw	153
   469  007ED8  D009               	goto	L10
   470  007EDA                     l699:
   471                           
   472                           ;segment.c: 79: PORTD = 0b10010010;
   473  007EDA  0E92               	movlw	146
   474  007EDC  D007               	goto	L10
   475  007EDE                     l701:
   476                           
   477                           ;segment.c: 82: PORTD = 0b10000010;
   478  007EDE  0E82               	movlw	130
   479  007EE0  D005               	goto	L10
   480  007EE2                     l703:
   481                           
   482                           ;segment.c: 85: PORTD = 0b11111000;
   483  007EE2  0EF8               	movlw	248
   484  007EE4  D003               	goto	L10
   485  007EE6                     l705:
   486                           
   487                           ;segment.c: 88: PORTD = 0b10000000;
   488  007EE6  0E80               	movlw	128
   489  007EE8  D001               	goto	L10
   490  007EEA                     l707:
   491                           
   492                           ;segment.c: 91: PORTD = 0b10010000;
   493  007EEA  0E90               	movlw	144
   494  007EEC                     L10:
   495  007EEC  6E83               	movwf	3971,c	;volatile
   496                           
   497                           ;segment.c: 92: break;
   498  007EEE  D01F               	goto	l64
   499  007EF0                     l711:
   500  007EF0  5002               	movf	NumDisplay@Number,w,c
   501                           
   502                           ; Switch size 1, requested type "space"
   503                           ; Number of cases is 10, Range of values is 0 to 9
   504                           ; switch strategies available:
   505                           ; Name         Instructions Cycles
   506                           ; simple_byte           31    16 (average)
   507                           ;	Chosen strategy is simple_byte
   508  007EF2  0A00               	xorlw	0	; case 0
   509  007EF4  B4D8               	btfsc	status,2,c
   510  007EF6  D7E7               	goto	l689
   511  007EF8  0A01               	xorlw	1	; case 1
   512  007EFA  B4D8               	btfsc	status,2,c
   513  007EFC  D7E6               	goto	l691
   514  007EFE  0A03               	xorlw	3	; case 2
   515  007F00  B4D8               	btfsc	status,2,c
   516  007F02  D7E5               	goto	l693
   517  007F04  0A01               	xorlw	1	; case 3
   518  007F06  B4D8               	btfsc	status,2,c
   519  007F08  D7E4               	goto	l695
   520  007F0A  0A07               	xorlw	7	; case 4
   521  007F0C  B4D8               	btfsc	status,2,c
   522  007F0E  D7E3               	goto	l697
   523  007F10  0A01               	xorlw	1	; case 5
   524  007F12  B4D8               	btfsc	status,2,c
   525  007F14  D7E2               	goto	l699
   526  007F16  0A03               	xorlw	3	; case 6
   527  007F18  B4D8               	btfsc	status,2,c
   528  007F1A  D7E1               	goto	l701
   529  007F1C  0A01               	xorlw	1	; case 7
   530  007F1E  B4D8               	btfsc	status,2,c
   531  007F20  D7E0               	goto	l703
   532  007F22  0A0F               	xorlw	15	; case 8
   533  007F24  B4D8               	btfsc	status,2,c
   534  007F26  D7DF               	goto	l705
   535  007F28  0A01               	xorlw	1	; case 9
   536  007F2A  B4D8               	btfsc	status,2,c
   537  007F2C  D7DE               	goto	l707
   538  007F2E                     l64:
   539  007F2E  0012               	return	
   540  007F30                     __end_of_NumDisplay:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           wreg	equ	0xFE8
   544                           status	equ	0xFD8
   545                           
   546 ;; *************** function _Segment_init *****************
   547 ;; Defined at:
   548 ;;		line 37 in file "segment.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  Segment         1    0[COMRAM] unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;		None               void
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   562 ;;      Params:         1       0       0       0       0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0
   565 ;;      Totals:         1       0       0       0       0       0       0       0       0
   566 ;;Total ram usage:        1 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_NumDisplay
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text4
   576  007E8A                     __ptext4:
   577                           	opt stack 0
   578  007E8A                     _Segment_init:
   579                           	opt stack 29
   580                           
   581                           ;segment.c: 41: TRISD = 0x00;
   582                           
   583                           ;incstack = 0
   584                           ;incstack = 0
   585  007E8A  0E00               	movlw	0
   586  007E8C  6E95               	movwf	3989,c	;volatile
   587                           
   588                           ;segment.c: 42: TRISAbits.TRISA0 = 0;
   589  007E8E  9092               	bcf	3986,0,c	;volatile
   590                           
   591                           ;segment.c: 43: TRISAbits.TRISA1 = 0;
   592  007E90  9292               	bcf	3986,1,c	;volatile
   593                           
   594                           ;segment.c: 44: TRISAbits.TRISA2 = 0;
   595  007E92  9492               	bcf	3986,2,c	;volatile
   596                           
   597                           ;segment.c: 45: TRISAbits.TRISA3 = 0;
   598  007E94  9692               	bcf	3986,3,c	;volatile
   599                           
   600                           ;segment.c: 48: if(Segment == 1)
   601  007E96  0401               	decf	Segment_init@Segment,w,c
   602  007E98  A4D8               	btfss	status,2,c
   603  007E9A  D002               	goto	l679
   604                           
   605                           ;segment.c: 49: PORTAbits.RA0 = 1;
   606  007E9C  8080               	bsf	3968,0,c	;volatile
   607  007E9E  D00D               	goto	l49
   608  007EA0                     l679:
   609                           
   610                           ;segment.c: 50: else if(Segment == 2)
   611  007EA0  5001               	movf	Segment_init@Segment,w,c
   612  007EA2  0A02               	xorlw	2
   613  007EA4  A4D8               	btfss	status,2,c
   614  007EA6  D002               	goto	l683
   615                           
   616                           ;segment.c: 51: PORTAbits.RA1 = 1;
   617  007EA8  8280               	bsf	3968,1,c	;volatile
   618  007EAA  D007               	goto	l49
   619  007EAC                     l683:
   620                           
   621                           ;segment.c: 52: else if(Segment== 3)
   622  007EAC  5001               	movf	Segment_init@Segment,w,c
   623  007EAE  0A03               	xorlw	3
   624  007EB0  A4D8               	btfss	status,2,c
   625  007EB2  D002               	goto	l47
   626                           
   627                           ;segment.c: 53: PORTAbits.RA2 = 1;
   628  007EB4  8480               	bsf	3968,2,c	;volatile
   629  007EB6  D001               	goto	l49
   630  007EB8                     l47:
   631                           
   632                           ;segment.c: 54: else
   633                           ;segment.c: 55: PORTAbits.RA3 = 1;
   634  007EB8  8680               	bsf	3968,3,c	;volatile
   635  007EBA                     l49:
   636  007EBA  0012               	return	
   637  007EBC                     __end_of_Segment_init:
   638                           	opt stack 0
   639  0000                     tblptru	equ	0xFF8
   640                           wreg	equ	0xFE8
   641                           status	equ	0xFD8
   642                           tblptru	equ	0xFF8
   643                           wreg	equ	0xFE8
   644                           status	equ	0xFD8
   645                           
   646                           	psect	rparam
   647  0000                     tblptru	equ	0xFF8
   648                           wreg	equ	0xFE8
   649                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_NumDisplay
    _main->_Delay_s_
    _Delay_s_->_Delay10KTCYx
    _NumDisplay->_Segment_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     225
                                              3 COMRAM     7     7      0
                         _NumDisplay
                           _Delay_s_
 ---------------------------------------------------------------------------------
 (1) _Delay_s_                                             1     1      0      15
                                              2 COMRAM     1     1      0
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     1      1      15
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _NumDisplay                                           2     0      2      75
                                              1 COMRAM     2     0      2
                       _Segment_init
 ---------------------------------------------------------------------------------
 (2) _Segment_init                                         1     0      1      45
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _NumDisplay
     _Segment_init
   _Delay_s_
     _Delay10KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       2       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Jan 22 11:53:02 2014

                     l47 7EB8                       l64 7F2E                       l49 7EBA  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l275 7E74                      l701 7EDE  
                    l703 7EE2                      l711 7EF0                      l705 7EE6  
                    l721 7F50                      l707 7EEA                      l723 7F5A  
                    l737 7FAE                      l683 7EAC                      l691 7ECA  
                    l693 7ECE                      l679 7EA0                      l695 7ED2  
                    l697 7ED6                      l689 7EC6                      l699 7EDA  
           __CFG_CPB$OFF 000000                      u127 7E7A             __CFG_CPD$OFF 000000  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_WDT$OFF 000000  
                   _main 7F30                     start 0000            __CFG_IESO$OFF 000000  
    Segment_init@Segment 0001            __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISD 000F95    __size_of_Delay10KTCYx 0016  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    main@x 0005  
                  status 000FD8           __CFG_ICPRT$OFF 000000         __end_of_Delay_s_ 7E74  
         __CFG_PBADEN$ON 000000          __initialization 7E5C             __end_of_main 8000  
           _Delay10KTCYx 7E74                   ??_main 0004            __activetblptr 000002  
             _NumDisplay 7EBC           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7E5C  
       NumDisplay@Number 0002            ?_Segment_init 0001           __pcstackCOMRAM 0001  
              ?_Delay_s_ 0001              ?_NumDisplay 0002           ??_Segment_init 0002  
             ??_Delay_s_ 0003          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E5C                  __ramtop 0800  
    __size_of_NumDisplay 0074                  __ptext0 7F30                  __ptext1 7E66  
                __ptext2 7E74                  __ptext3 7EBC                  __ptext4 7E8A  
   end_of_initialization 7E5C            __Lmediumconst 0000                _PORTAbits 000F80  
   __end_of_Segment_init 7EBC                _TRISAbits 000F92        NumDisplay@Segment 0003  
    start_initialization 7E5C        __size_of_Delay_s_ 000E             ??_NumDisplay 0004  
       __CFG_LPT1OSC$OFF 000000       __end_of_NumDisplay 7F30            ?_Delay10KTCYx 0001  
  __size_of_Segment_init 0032             _Segment_init 7E8A         __CFG_WDTPS$32768 000000  
         ??_Delay10KTCYx 0002                 _Delay_s_ 7E66         Delay10KTCYx@unit 0001  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00D0  
               main@Num1 0007                 main@Num2 0008                 main@Num3 0009  
               main@Num4 000A    __CFG_CPUDIV$OSC1_PLL2 000000     __end_of_Delay10KTCYx 7E8A  
